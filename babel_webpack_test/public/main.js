/*! For license information please see main.js.LICENSE.txt */
(()=>{var t={7765:(t,e,n)=>{"use strict";n.r(e),n.d(e,{Abs:()=>Gt,Acos:()=>jt,Acosh:()=>Ht,AdadeltaOptimizer:()=>So,AdagradOptimizer:()=>To,AdamOptimizer:()=>Ao,AdamaxOptimizer:()=>Mo,Add:()=>qt,AddN:()=>Kt,All:()=>Xt,Any:()=>Yt,ArgMax:()=>Jt,ArgMin:()=>Zt,Asin:()=>Qt,Asinh:()=>te,Atan:()=>ee,Atan2:()=>re,Atanh:()=>ne,AvgPool:()=>se,AvgPool3D:()=>ie,AvgPool3DBackprop:()=>oe,AvgPoolBackprop:()=>ae,BatchMatMul:()=>ue,BatchToSpaceND:()=>le,BroadcastTo:()=>ce,Callback:()=>ek,CallbackList:()=>sy,Cast:()=>he,Ceil:()=>pe,ClipByValue:()=>de,Complex:()=>fe,Concat:()=>me,Conv2D:()=>ge,Conv2DBackpropFilter:()=>ye,Conv2DBackpropInput:()=>be,Conv3D:()=>xe,Conv3DBackpropFilterV2:()=>ve,Conv3DBackpropInputV2:()=>we,Cos:()=>ke,Cosh:()=>Ne,CropAndResize:()=>Se,Cumsum:()=>Ie,CustomCallback:()=>oy,DataStorage:()=>U,DepthToSpace:()=>Ce,DepthwiseConv2dNative:()=>Te,DepthwiseConv2dNativeBackpropFilter:()=>Ee,DepthwiseConv2dNativeBackpropInput:()=>$e,Diag:()=>Ae,Dilation2D:()=>Re,Dilation2DBackpropFilter:()=>De,Dilation2DBackpropInput:()=>_e,Div:()=>Fe,ENV:()=>Wt,EarlyStopping:()=>sk,Elu:()=>Oe,EluGrad:()=>Me,Environment:()=>zt,Equal:()=>ze,Erf:()=>Le,Exp:()=>Be,Expm1:()=>Pe,FFT:()=>We,Fill:()=>Ve,FlipLeftRight:()=>Ue,Floor:()=>Ge,FloorDiv:()=>je,FromPixels:()=>Er,FusedBatchNorm:()=>He,FusedConv2D:()=>Rr,FusedDepthwiseConv2D:()=>_r,GatherNd:()=>Ke,GatherV2:()=>qe,GraphModel:()=>mN,Greater:()=>Xe,GreaterEqual:()=>Ye,History:()=>iy,IFFT:()=>Ze,Identity:()=>Je,Imag:()=>Qe,InputSpec:()=>jg,IsFinite:()=>tn,IsInf:()=>en,IsNan:()=>nn,KernelBackend:()=>G,LRN:()=>dn,LRNBackprop:()=>fn,LayerVariable:()=>Vg,LayersModel:()=>pb,Less:()=>rn,LessEqual:()=>sn,LinSpace:()=>an,Log:()=>on,Log1p:()=>un,LogSoftmax:()=>pn,LogicalAnd:()=>ln,LogicalNot:()=>cn,LogicalOr:()=>hn,Max:()=>mn,MaxPool:()=>yn,MaxPool3D:()=>xn,MaxPool3DBackprop:()=>vn,MaxPoolBackprop:()=>bn,MaxPoolWithArgmax:()=>wn,Maximum:()=>gn,Mean:()=>kn,Min:()=>Nn,Minimum:()=>In,MirrorPad:()=>Sn,Mod:()=>Cn,MomentumOptimizer:()=>zo,Multiply:()=>Tn,Negate:()=>En,NonMaxSuppressionV3:()=>An,NonMaxSuppressionV4:()=>Rn,NonMaxSuppressionV5:()=>_n,NotEqual:()=>$n,OP_SCOPE_SUFFIX:()=>Ms,OneHot:()=>Fn,OnesLike:()=>Dn,Optimizer:()=>Io,PadV2:()=>On,Pool:()=>Mn,Pow:()=>Ln,Prelu:()=>zn,Prod:()=>Bn,RMSPropOptimizer:()=>Bo,RNN:()=>gx,Range:()=>Pn,Rank:()=>cs,Real:()=>Wn,Reciprocal:()=>Vn,Reduction:()=>Ip,Relu:()=>Un,Relu6:()=>Xn,Reshape:()=>Gn,ResizeBilinear:()=>qn,ResizeBilinearGrad:()=>Kn,ResizeNearestNeighbor:()=>jn,ResizeNearestNeighborGrad:()=>Hn,Reverse:()=>Yn,RotateWithOffset:()=>$r,Round:()=>Jn,Rsqrt:()=>Zn,SGDOptimizer:()=>Lo,ScatterNd:()=>Qn,SelectV2:()=>tr,Selu:()=>er,Sequential:()=>mb,Sigmoid:()=>ir,Sign:()=>ar,Sin:()=>rr,Sinh:()=>sr,Slice:()=>nr,Softmax:()=>pr,Softplus:()=>or,SpaceToBatchND:()=>cr,SparseToDense:()=>gr,SplitV:()=>hr,Sqrt:()=>ur,Square:()=>fr,SquaredDifference:()=>dr,Step:()=>Tr,StridedSlice:()=>yr,Sub:()=>mr,Sum:()=>lr,SymbolicTensor:()=>Hg,Tan:()=>br,Tanh:()=>xr,Tensor:()=>us,TensorBuffer:()=>ss,Tile:()=>vr,TopK:()=>wr,Transpose:()=>kr,Unique:()=>Nr,Unpack:()=>Ir,UnsortedSegmentSum:()=>Sr,Variable:()=>ls,ZerosLike:()=>Cr,_FusedMatMul:()=>Ar,abs:()=>Ro,acos:()=>Po,acosh:()=>Wo,add:()=>uo,addN:()=>Vo,addStrict:()=>Nh,all:()=>Jo,any:()=>Zo,argMax:()=>Qo,argMin:()=>tu,asin:()=>eu,asinh:()=>nu,atan:()=>ru,atan2:()=>su,atanh:()=>au,avgPool:()=>xu,avgPool3d:()=>vu,backend:()=>io,backend_util:()=>g,basicLSTMCell:()=>Tu,batchNorm:()=>Au,batchNorm2d:()=>Ru,batchNorm3d:()=>_u,batchNorm4d:()=>Du,batchToSpaceND:()=>Eu,booleanMaskAsync:()=>gh,broadcastTo:()=>Fu,browser:()=>u,buffer:()=>_a,callbacks:()=>ak,cast:()=>Da,ceil:()=>Ou,clipByValue:()=>Mu,clone:()=>Fa,complex:()=>zs,concat:()=>Nu,concat1d:()=>Lu,concat2d:()=>zu,concat3d:()=>Bu,concat4d:()=>Pu,constraints:()=>b,conv1d:()=>Vu,conv2d:()=>Wu,conv2dTranspose:()=>Gu,conv3d:()=>ju,conv3dTranspose:()=>qu,copyRegisteredKernels:()=>Vr,cos:()=>Ku,cosh:()=>Xu,cosineWindow:()=>Ph,cumsum:()=>Yu,customGrad:()=>wo,data:()=>W,deprecationWarn:()=>Gi,depthToSpace:()=>Ju,depthwiseConv2d:()=>Zu,deregisterOp:()=>hk,device_util:()=>a,diag:()=>Qu,dilation2d:()=>tl,disableDeprecationWarnings:()=>Ui,dispose:()=>Yi,disposeVariables:()=>ji,div:()=>co,divNoNan:()=>rl,divStrict:()=>Ih,dot:()=>sl,dropout:()=>zh,elu:()=>al,enableDebugMode:()=>Vi,enableProdMode:()=>Wi,enclosingPowerOfTwo:()=>Bh,engine:()=>Hi,env:()=>Bt,equal:()=>el,equalStrict:()=>yh,erf:()=>il,exp:()=>ol,expandDims:()=>ul,expm1:()=>ll,eye:()=>hl,fft:()=>Hc,fill:()=>Co,findBackend:()=>ro,findBackendFactory:()=>so,floor:()=>pl,floorDiv:()=>lo,fused:()=>m,gather:()=>bl,gatherND:()=>Lh,gather_util:()=>l,getBackend:()=>eo,getGradient:()=>Mr,getKernel:()=>Or,getKernelsForBackend:()=>Lr,grad:()=>go,grads:()=>yo,greater:()=>xl,greaterEqual:()=>vl,greaterEqualStrict:()=>bh,greaterStrict:()=>xh,ifft:()=>qc,imag:()=>wl,image:()=>Mp,inTopKAsync:()=>Wh,initializers:()=>x,input:()=>xb,io:()=>i,irfft:()=>Kc,isFinite:()=>kl,isInf:()=>Nl,isNaN:()=>Il,keep:()=>Ji,kernel_impls:()=>y,layers:()=>v,leakyRelu:()=>Sl,less:()=>Cl,lessEqual:()=>Tl,lessEqualStrict:()=>vh,lessStrict:()=>wh,linalg:()=>Lp,linspace:()=>El,loadGraphModel:()=>gN,loadLayersModel:()=>bb,localResponseNormalization:()=>$l,log:()=>Al,log1p:()=>Rl,logSigmoid:()=>Fl,logSoftmax:()=>Ll,logSumExp:()=>zl,logicalAnd:()=>Bl,logicalNot:()=>Pl,logicalOr:()=>Wl,logicalXor:()=>Vl,losses:()=>zp,matMul:()=>ti,math:()=>o,max:()=>Ol,maxPool:()=>Ul,maxPool3d:()=>Gl,maxPoolWithArgmax:()=>jl,maximum:()=>Oo,maximumStrict:()=>Sh,mean:()=>Kl,memory:()=>qi,metrics:()=>w,min:()=>Xl,minimum:()=>Yl,minimumStrict:()=>Ch,mirrorPad:()=>Jl,mod:()=>Zl,modStrict:()=>Th,model:()=>gb,models:()=>k,moments:()=>Ql,movingAverage:()=>Fh,mul:()=>ho,mulStrict:()=>Eh,multiRNNCell:()=>tc,multinomial:()=>ec,neg:()=>_l,nextFrame:()=>Vp,norm:()=>Dh,notEqual:()=>nc,notEqualStrict:()=>kh,oneHot:()=>ei,ones:()=>ql,onesLike:()=>sc,op:()=>Ls,outerProduct:()=>ac,pad:()=>ic,pad1d:()=>oc,pad2d:()=>uc,pad3d:()=>lc,pad4d:()=>cc,pool:()=>pc,pow:()=>Eo,powStrict:()=>$h,prelu:()=>dc,print:()=>Oa,prod:()=>fc,profile:()=>Ki,rand:()=>mc,randomGamma:()=>vc,randomNormal:()=>wc,randomUniform:()=>kc,range:()=>Ic,ready:()=>to,real:()=>rc,reciprocal:()=>Sc,registerBackend:()=>ao,registerCallbackConstructor:()=>vb,registerGradient:()=>Br,registerKernel:()=>zr,registerOp:()=>lk,regularizers:()=>N,relu:()=>Cc,relu6:()=>Tc,removeBackend:()=>no,reshape:()=>Qa,reverse:()=>Ec,reverse1d:()=>$c,reverse2d:()=>Ac,reverse3d:()=>Rc,reverse4d:()=>_c,rfft:()=>Jc,round:()=>Dc,rsqrt:()=>Fc,scalar:()=>No,scatterND:()=>Oh,scatter_util:()=>c,selu:()=>Oc,separableConv2d:()=>Mc,sequential:()=>yb,serialization:()=>p,setBackend:()=>Qi,setPlatform:()=>oo,setdiff1dAsync:()=>Lc,sigmoid:()=>Iu,sign:()=>zc,signal:()=>Op,sin:()=>Bc,sinh:()=>Pc,slice:()=>Su,slice1d:()=>Wc,slice2d:()=>Vc,slice3d:()=>Uc,slice4d:()=>Gc,slice_util:()=>h,softmax:()=>jc,softplus:()=>Dl,spaceToBatchND:()=>hc,sparseToDense:()=>Mh,spectral:()=>Fp,split:()=>Yc,sqrt:()=>po,square:()=>fo,squaredDifference:()=>Zc,squaredDifferenceStrict:()=>Ah,squeeze:()=>Qc,stack:()=>th,step:()=>eh,stridedSlice:()=>nh,sub:()=>$o,subStrict:()=>Rh,sum:()=>Ml,sumOutType:()=>ys,tan:()=>rh,tanh:()=>Cu,tensor:()=>Ps,tensor1d:()=>Nc,tensor2d:()=>sh,tensor3d:()=>si,tensor4d:()=>ah,tensor5d:()=>ih,tensor6d:()=>oh,tensor_util:()=>s,test_util:()=>d,tidy:()=>Xi,tile:()=>cl,time:()=>Zi,topk:()=>uh,train:()=>Pp,transpose:()=>ni,truncatedNormal:()=>lh,unique:()=>ch,unregisterGradient:()=>Wr,unregisterKernel:()=>Pr,unsortedSegmentSum:()=>hh,unstack:()=>ph,upcastType:()=>gs,util:()=>r,valueAndGrad:()=>bo,valueAndGrads:()=>xo,variable:()=>dh,variableGrads:()=>vo,version:()=>z_,version_converter:()=>yN,version_core:()=>Pi,version_layers:()=>Wy,where:()=>nl,whereAsync:()=>mh,zeros:()=>Hl,zerosLike:()=>mo});var r={};n.r(r),n.d(r,{arraysEqual:()=>st,assert:()=>Z,assertNonNegativeIntegerDimensions:()=>Ft,assertNonNull:()=>tt,assertShapesMatch:()=>Q,bytesFromStringArray:()=>wt,bytesPerElement:()=>vt,checkConversionForErrors:()=>gt,clamp:()=>q,computeStrides:()=>Et,createScalarValue:()=>Zr,createShuffledIndices:()=>ut,decodeString:()=>rs,distSquared:()=>J,encodeString:()=>ns,fetch:()=>es,flatten:()=>et,getArrayFromDType:()=>mt,getTypedArrayFromDType:()=>ft,hasEncodingLoss:()=>bt,indexToLoc:()=>Mt,inferDtype:()=>St,inferFromImplicitShape:()=>ht,isBoolean:()=>Nt,isFunction:()=>Ct,isInt:()=>at,isNumber:()=>It,isPromise:()=>Lt,isScalarShape:()=>rt,isString:()=>kt,isTypedArray:()=>xt,isValidDtype:()=>yt,locToIndex:()=>Ot,makeOnesTypedArray:()=>Rt,makeZerosNestedTypedArray:()=>Dt,makeZerosTypedArray:()=>_t,nearestDivisor:()=>Tt,nearestLargerEven:()=>K,now:()=>ts,parseAxisParam:()=>pt,randUniform:()=>Y,repeatedTry:()=>ct,rightPad:()=>lt,shuffle:()=>H,sizeFromShape:()=>nt,sizeToSquarishShape:()=>ot,squeezeShape:()=>dt,sum:()=>X,tanh:()=>it,toNestedArray:()=>At,toTypedArray:()=>Qr});var s={};n.r(s),n.d(s,{assertTypesMatch:()=>xs,getTensorsInContainer:()=>ws,isTensorInList:()=>vs,makeTypesMatch:()=>bs});var a={};n.r(a),n.d(a,{isBrowser:()=>$s,isMobile:()=>Es});var i={};n.r(i),n.d(i,{browserFiles:()=>Ba,browserHTTPRequest:()=>Ka,concatenateArrayBuffers:()=>qs,copyModel:()=>Ea,decodeWeights:()=>Us,encodeWeights:()=>Vs,fromMemory:()=>Ja,getLoadHandlers:()=>ea,getModelArtifactsInfoForJSON:()=>Xs,getSaveHandlers:()=>ta,http:()=>qa,isHTTPScheme:()=>ja,listModels:()=>Ca,loadWeights:()=>Va,moveModel:()=>$a,registerLoadRouter:()=>Qs,registerSaveRouter:()=>Zs,removeModel:()=>Ta,weightsLoaderFactory:()=>Ua,withSaveHandler:()=>Za});var o={};n.r(o),n.d(o,{confusionMatrix:()=>ri});var u={};n.r(u),n.d(u,{fromPixels:()=>oi,toPixels:()=>ii});var l={};n.r(l),n.d(l,{prepareAndValidate:()=>ui});var c={};n.r(c),n.d(c,{calculateShapes:()=>hi,validateInput:()=>ci,validateUpdateShape:()=>li});var h={};n.r(h),n.d(h,{assertParamsValid:()=>pi,computeFlatOffset:()=>Si,computeOutShape:()=>fi,getNormalizedAxes:()=>bi,isSliceContinous:()=>Ii,maskToAxes:()=>di,parseSliceParams:()=>Ci,startForAxis:()=>ki,startIndicesWithElidedDims:()=>xi,stopForAxis:()=>Ni,stopIndicesWithElidedDims:()=>vi,stridesForAxis:()=>wi,stridesWithElidedDims:()=>mi});var p={};n.r(p),n.d(p,{Serializable:()=>Ti,SerializationMap:()=>Ei,registerClass:()=>$i});var d={};n.r(d),n.d(d,{TEST_EPSILON_FLOAT16:()=>Ai,expectArrayBuffersEqual:()=>Bi,expectArraysClose:()=>Ri,expectArraysEqual:()=>Oi,expectNumbersClose:()=>Mi,expectPromiseToFail:()=>Fi,expectValuesInRange:()=>zi,testEpsilon:()=>_i});var f={};n.r(f),n.d(f,{collectGatherOpShapeInfo:()=>yl,computeOutShape:()=>gl,segOpComputeOptimalWindowSize:()=>ml});var m={};n.r(m),n.d(m,{conv2d:()=>qh,depthwiseConv2d:()=>Yh,matMul:()=>Jh});var g={};n.r(g),n.d(g,{ERF_A1:()=>Zp,ERF_A2:()=>Qp,ERF_A3:()=>td,ERF_A4:()=>ed,ERF_A5:()=>nd,ERF_P:()=>Jp,PARALLELIZE_THRESHOLD:()=>dl,SELU_SCALE:()=>Yp,SELU_SCALEALPHA:()=>Xp,applyActivation:()=>jh,assertAndGetBroadcastShape:()=>Fo,assertAxesAreInnerMostDims:()=>qo,assertParamsConsistent:()=>wu,assignToTypedArray:()=>cd,axesAreInnerMostDims:()=>Uo,calculateShapes:()=>hi,castTensor:()=>dd,combineLocations:()=>Go,complexWithEvenIndex:()=>od,complexWithOddIndex:()=>ud,computeConv2DInfo:()=>lu,computeConv3DInfo:()=>cu,computeDefaultPad:()=>hu,computeDilation2DInfo:()=>iu,computeOptimalWindowSize:()=>fl,computeOutAndReduceShapes:()=>jo,computeOutShape:()=>ku,computePool2DInfo:()=>ou,computePool3DInfo:()=>uu,convertConv2DDataFormat:()=>bu,eitherStridesOrDilationsAreOne:()=>yu,expandShapeToKeepDim:()=>Ho,exponent:()=>pd,exponents:()=>hd,getAxesPermutation:()=>Ko,getBroadcastDims:()=>_o,getComplexWithIndex:()=>ld,getFusedBiasGradient:()=>Gh,getFusedDyActivation:()=>Uh,getImageCenter:()=>Up,getInnerMostAxes:()=>Yo,getPermuted:()=>jp,getReductionAxes:()=>Do,getReshaped:()=>Gp,getReshapedPermuted:()=>Hp,getSliceBeginCoords:()=>qp,getSliceSize:()=>Kp,getUndoAxesPermutation:()=>Xo,linspaceImpl:()=>md,log:()=>sd,mergeRealAndImagArrays:()=>ad,prepareAndValidate:()=>ui,prepareSplitSize:()=>Xc,reshapeTensor:()=>fd,segment_util:()=>f,shouldFuse:()=>Hh,slice_util:()=>h,splitRealAndImagArrays:()=>id,tupleValuesAreOne:()=>gu,upcastType:()=>gs,validateInput:()=>ci,validateUpdateShape:()=>li,warn:()=>rd});var y={};n.r(y),n.d(y,{nonMaxSuppressionV3Impl:()=>lp,nonMaxSuppressionV4Impl:()=>cp,nonMaxSuppressionV5Impl:()=>hp,split:()=>gd,tile:()=>yd,topkImpl:()=>bd,whereImpl:()=>fh});var b={};n.r(b),n.d(b,{maxNorm:()=>hm,minMaxNorm:()=>fm,nonNeg:()=>dm,unitNorm:()=>pm});var x={};n.r(x),n.d(x,{constant:()=>vg,glorotNormal:()=>Tg,glorotUniform:()=>Cg,heNormal:()=>Eg,heUniform:()=>$g,identity:()=>Ig,leCunNormal:()=>Ag,leCunUniform:()=>Rg,ones:()=>xg,orthogonal:()=>_g,randomNormal:()=>kg,randomUniform:()=>wg,truncatedNormal:()=>Ng,varianceScaling:()=>Sg,zeros:()=>bg});var v={};n.r(v),n.d(v,{Layer:()=>Yg,RNN:()=>gx,RNNCell:()=>yx,activation:()=>Mv,add:()=>jv,alphaDropout:()=>Ow,average:()=>Hv,averagePooling1d:()=>ew,averagePooling2d:()=>sw,averagePooling3d:()=>ow,avgPool1d:()=>nw,avgPool2d:()=>aw,avgPool3d:()=>uw,avgPooling1d:()=>rw,avgPooling2d:()=>iw,avgPooling3d:()=>lw,batchNormalization:()=>Zv,bidirectional:()=>Tw,concatenate:()=>qv,conv1d:()=>Ev,conv2d:()=>$v,conv2dTranspose:()=>Av,conv3d:()=>Rv,convLstm2d:()=>Nw,convLstm2dCell:()=>Iw,cropping2D:()=>Dv,dense:()=>Lv,depthwiseConv2d:()=>Ov,dot:()=>Jv,dropout:()=>zv,elu:()=>kv,embedding:()=>Gv,flatten:()=>Pv,gaussianDropout:()=>Fw,gaussianNoise:()=>Dw,globalAveragePooling1d:()=>cw,globalAveragePooling2d:()=>hw,globalMaxPool1d:()=>$w,globalMaxPool2d:()=>Aw,globalMaxPooling1d:()=>pw,globalMaxPooling2d:()=>dw,gru:()=>yw,gruCell:()=>bw,input:()=>xb,inputLayer:()=>wv,layerNormalization:()=>Qv,leakyReLU:()=>Iv,lstm:()=>xw,lstmCell:()=>vw,masking:()=>Mw,maxPool1d:()=>Rw,maxPool2d:()=>_w,maxPooling1d:()=>fw,maxPooling2d:()=>mw,maxPooling3d:()=>gw,maximum:()=>Kv,minimum:()=>Xv,multiply:()=>Yv,permute:()=>Uv,prelu:()=>Sv,reLU:()=>Nv,repeatVector:()=>Wv,reshape:()=>Vv,rnn:()=>Sw,separableConv2d:()=>_v,simpleRNN:()=>ww,simpleRNNCell:()=>kw,softmax:()=>Cv,spatialDropout1d:()=>Bv,stackedRNNCells:()=>Cw,thresholdedReLU:()=>Tv,timeDistributed:()=>Ew,upSampling2d:()=>Fv,zeroPadding2d:()=>tw});var w={};n.r(w),n.d(w,{MAPE:()=>qw,MSE:()=>Yw,binaryAccuracy:()=>Lw,binaryCrossentropy:()=>zw,categoricalAccuracy:()=>Pw,categoricalCrossentropy:()=>Ww,cosineProximity:()=>Gw,mape:()=>Kw,meanAbsoluteError:()=>jw,meanAbsolutePercentageError:()=>Hw,meanSquaredError:()=>Xw,mse:()=>Jw,precision:()=>Vw,recall:()=>Uw,sparseCategoricalAccuracy:()=>Bw});var k={};n.r(k),n.d(k,{modelFromJSON:()=>fb});var N={};n.r(N),n.d(N,{l1:()=>Qw,l1l2:()=>Zw,l2:()=>tk});var I={};n.r(I),n.d(I,{json:()=>xk});var S={};n.r(S),n.d(S,{json:()=>vk});var C={};n.r(C),n.d(C,{json:()=>wk});var T={};n.r(T),n.d(T,{json:()=>kk});var E={};n.r(E),n.d(E,{json:()=>Nk});var $={};n.r($),n.d($,{json:()=>Ik});var A={};n.r(A),n.d(A,{json:()=>Sk});var R={};n.r(R),n.d(R,{json:()=>Ck});var _={};n.r(_),n.d(_,{json:()=>Tk});var D={};n.r(D),n.d(D,{json:()=>Ek});var F={};n.r(F),n.d(F,{json:()=>$k});var O={};n.r(O),n.d(O,{json:()=>Ak});var M={};n.r(M),n.d(M,{json:()=>Rk});var L={};n.r(L),n.d(L,{json:()=>_k});var z={};n.r(z),n.d(z,{json:()=>Dk});var B={};n.r(B),n.d(B,{json:()=>Fk});var P={};n.r(P),n.d(P,{json:()=>Ok});var W={};n.r(W),n.d(W,{CSVDataset:()=>aI,Dataset:()=>qN,FileDataSource:()=>yI,TextLineDataset:()=>ZN,URLDataSource:()=>bI,array:()=>XN,csv:()=>xI,func:()=>vI,generator:()=>wI,microphone:()=>NI,version_data:()=>II,webcam:()=>kI,zip:()=>YN});var V={};n.r(V),n.d(V,{addImpl:()=>eS,ceilImpl:()=>AS,expImpl:()=>fC,expm1Impl:()=>yC,floorImpl:()=>LC,logImpl:()=>XC,maxImpl:()=>nT,multiplyImpl:()=>vC,notEqualImpl:()=>dT,rsqrtImpl:()=>kT,simpleAbsImpl:()=>cS,sliceImpl:()=>IC,squaredDifferenceImpl:()=>HT,subImpl:()=>TC,transposeImpl:()=>rT,uniqueImpl:()=>tE});class U{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class G{time(t){return j("time")}read(t){return j("read")}readSync(t){return j("readSync")}numDataIds(){return j("numDataIds")}disposeData(t){return j("disposeData")}write(t,e,n){return j("write")}move(t,e,n,r){return j("move")}memory(){return j("memory")}floatPrecision(){return j("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}batchMatMul(t,e,n,r){return j("batchMatMul")}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:r,bias:s,activation:a,preluActivationWeights:i}){return j("fusedBatchMatMul")}slice(t,e,n){return j("slice")}stridedSlice(t,e,n,r){return j("stridedSlice")}unstack(t,e){return j("unstack")}reverse(t,e){return j("reverse")}concat(t,e){return j("concat")}neg(t){return j("neg")}add(t,e){return j("add")}addN(t){return j("addN")}subtract(t,e){return j("subtract")}multiply(t,e){return j("multiply")}realDivide(t,e){return j("realDivide")}floorDiv(t,e){return j("floorDiv")}sum(t,e){return j("sum")}prod(t,e){return j("prod")}unsortedSegmentSum(t,e,n){return j("unsortedSegmentSum")}argMin(t,e){return j("argMin")}argMax(t,e){return j("argMax")}equal(t,e){return j("equal")}notEqual(t,e){return j("notEqual")}less(t,e){return j("less")}lessEqual(t,e){return j("lessEqual")}greater(t,e){return j("greater")}greaterEqual(t,e){return j("greaterEqual")}logicalNot(t){return j("logicalNot")}logicalAnd(t,e){return j("logicalAnd")}logicalOr(t,e){return j("logicalOr")}where(t){return j("where")}select(t,e,n){return j("select")}topk(t,e,n){return j("topk")}min(t,e){return j("min")}minimum(t,e){return j("minimum")}mod(t,e){return j("mod")}max(t,e){return j("max")}maximum(t,e){return j("maximum")}all(t,e){return j("all")}any(t,e){return j("any")}squaredDifference(t,e){return j("squaredDifference")}ceil(t){return j("ceil")}floor(t){return j("floor")}round(t){return j("round")}sign(t){return j("sign")}isNaN(t){return j("isNaN")}isInf(t){return j("isInf")}isFinite(t){return j("isFinite")}pow(t,e){return j("pow")}exp(t){return j("exp")}expm1(t){return j("expm1")}softmax(t,e){return j("softmax")}log(t){return j("log")}log1p(t){return j("log1p")}sqrt(t){return j("sqrt")}rsqrt(t){return j("rsqrt")}square(t){return j("square")}reciprocal(t){return j("reciprocal")}relu(t){return j("relu")}relu6(t){return j("relu6")}prelu(t,e){return j("prelu")}elu(t){return j("elu")}eluDer(t,e){return j("eluDer")}selu(t){return j("selu")}int(t){return j("int")}clip(t,e,n){return j("clip")}abs(t){return j("abs")}complexAbs(t){return j("complexAbs")}sigmoid(t){return j("sigmoid")}softplus(t){return j("softplus")}sin(t){return j("sin")}cos(t){return j("cos")}tan(t){return j("tan")}asin(t){return j("asin")}acos(t){return j("acos")}atan(t){return j("atan")}atan2(t,e){return j("atan2")}sinh(t){return j("sinh")}cosh(t){return j("cosh")}tanh(t){return j("tanh")}asinh(t){return j("asinh")}acosh(t){return j("acosh")}atanh(t){return j("atanh")}erf(t){return j("erf")}step(t,e){return j("step")}fusedConv2d({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:a}){return j("fusedConv2d")}conv2d(t,e,n){return j("conv2d")}conv2dDerInput(t,e,n){return j("conv2dDerInput")}conv2dDerFilter(t,e,n){return j("conv2dDerFilter")}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:a}){return j("fusedDepthwiseConv2D")}depthwiseConv2D(t,e,n){return j("depthwiseConv2D")}depthwiseConv2DDerInput(t,e,n){return j("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(t,e,n){return j("depthwiseConv2DDerFilter")}conv3d(t,e,n){return j("conv3d")}conv3dDerInput(t,e,n){return j("conv3dDerInput")}conv3dDerFilter(t,e,n){return j("conv3dDerFilter")}maxPool(t,e){return j("maxPool")}maxPoolBackprop(t,e,n,r){return j("maxPoolBackprop")}avgPool(t,e){return j("avgPool")}avgPoolBackprop(t,e,n){return j("avgPoolBackprop")}avgPool3d(t,e){return j("avgPool3d")}avgPool3dBackprop(t,e,n){return j("avgPool3dBackprop")}maxPool3d(t,e){return j("maxPool3d")}maxPool3dBackprop(t,e,n,r){return j("maxPool3dBackprop")}reshape(t,e){return j("reshape")}cast(t,e){return j("cast")}tile(t,e){return j("tile")}pad(t,e,n){return j("pad")}transpose(t,e){return j("transpose")}gather(t,e,n){return j("gather")}gatherND(t,e){return j("gatherND")}scatterND(t,e,n){return j("scatterND")}batchToSpaceND(t,e,n){return j("batchToSpaceND")}spaceToBatchND(t,e,n){return j("spaceToBatchND")}resizeBilinear(t,e,n,r){return j("resizeBilinear")}resizeBilinearBackprop(t,e,n){return j("resizeBilinearBackprop")}resizeNearestNeighbor(t,e,n,r){return j("resizeNearestNeighbor")}resizeNearestNeighborBackprop(t,e,n){return j("resizeNearestNeighborBackprop")}batchNorm(t,e,n,r,s,a){return j("batchNorm")}localResponseNormalization4D(t,e,n,r,s){return j("localResponseNormalization4D")}LRNGrad(t,e,n,r,s,a,i){return j("LRNGrad")}multinomial(t,e,n,r){return j("multinomial")}oneHot(t,e,n,r){return j("oneHot")}cumsum(t,e,n,r){return j("cumsum")}nonMaxSuppression(t,e,n,r,s){return j("nonMaxSuppression")}fft(t){return j("fft")}ifft(t){return j("ifft")}complex(t,e){return j("complex")}real(t){return j("real")}imag(t){return j("imag")}cropAndResize(t,e,n,r,s,a){return j("cropAndResize")}depthToSpace(t,e,n){return j("depthToSpace")}split(t,e,n){return j("split")}sparseToDense(t,e,n,r){return j("sparseToDense")}diag(t){return j("diag")}fill(t,e,n){return j("fill")}onesLike(t){return j("onesLike")}zerosLike(t){return j("zerosLike")}linspace(t,e,n){return j("linspace")}dispose(){return j("dispose")}}function j(t){throw new Error(`'${t}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function H(t){let e=t.length,n=0,r=0;for(;e>0;)r=Math.random()*e|0,e--,n=t[e],t[e]=t[r],t[r]=n}function q(t,e,n){return Math.max(t,Math.min(e,n))}function K(t){return t%2==0?t:t+1}function X(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}function Y(t,e){const n=Math.random();return e*n+(1-n)*t}function J(t,e){let n=0;for(let r=0;r<t.length;r++){const s=Number(t[r])-Number(e[r]);n+=s*s}return n}function Z(t,e){if(!t)throw new Error("string"==typeof e?e:e())}function Q(t,e,n=""){Z(st(t,e),(()=>n+` Shapes ${t} and ${e} must match`))}function tt(t){Z(null!=t,(()=>"The input to the tensor constructor must be a non-null value."))}function et(t,e=[],n=!1){if(null==e&&(e=[]),Array.isArray(t)||xt(t)&&!n)for(let r=0;r<t.length;++r)et(t[r],e,n);else e.push(t);return e}function nt(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function rt(t){return 0===t.length}function st(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function at(t){return t%1==0}function it(t){if(null!=Math.tanh)return Math.tanh(t);if(t===1/0)return 1;if(t===-1/0)return-1;{const e=Math.exp(2*t);return(e-1)/(e+1)}}function ot(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function ut(t){const e=new Uint32Array(t);for(let n=0;n<t;++n)e[n]=n;return H(e),e}function lt(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function ct(t,e=(t=>0),n){return new Promise(((r,s)=>{let a=0;const i=()=>{if(t())return void r();a++;const o=e(a);null!=n&&a>=n?s():setTimeout(i,o)};i()}))}function ht(t,e){let n=1,r=-1;for(let e=0;e<t.length;++e)if(t[e]>=0)n*=t[e];else if(-1===t[e]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${e}`);r=e}else if(t[e]<0)throw Error(`Shapes can not be < 0. Found ${t[e]} at dim ${e}`);if(-1===r){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(0===n)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const s=t.slice();return s[r]=e/n,s}function pt(t,e){const n=e.length;return Z((t=null==t?e.map(((t,e)=>e)):[].concat(t)).every((t=>t>=-n&&t<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis `+t)),Z(t.every((t=>at(t))),(()=>"All values in axis param must be integers but got axis "+t)),t.map((t=>t<0?n+t:t))}function dt(t,e){const n=[],r=[],s=null!=e&&Array.isArray(e)&&0===e.length,a=null==e||s?null:pt(e,t).sort();let i=0;for(let e=0;e<t.length;++e){if(null!=a){if(a[i]===e&&1!==t[e])throw new Error(`Can't squeeze axis ${e} since its dim '${t[e]}' is not 1`);(null==a[i]||a[i]>e)&&1===t[e]&&(n.push(t[e]),r.push(e)),a[i]<=e&&i++}1!==t[e]&&(n.push(t[e]),r.push(e))}return{newShape:n,keptDims:r}}function ft(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else{if("bool"!==t)throw new Error("Unknown data type "+t);n=new Uint8Array(e)}return n}function mt(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error("Unknown data type "+t);n=new Array(e)}return n}function gt(t,e){for(let n=0;n<t.length;n++){const r=t[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}function yt(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}function bt(t,e){return!("complex64"===e||"float32"===e&&"complex64"!==t||"int32"===e&&"float32"!==t&&"complex64"!==t||"bool"===e&&"bool"===t)}function xt(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array}function vt(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error("Unknown dtype "+t)}function wt(t){if(null==t)return 0;let e=0;return t.forEach((t=>e+=t.length)),e}function kt(t){return"string"==typeof t||t instanceof String}function Nt(t){return"boolean"==typeof t}function It(t){return"number"==typeof t}function St(t){return Array.isArray(t)?St(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array?"int32":It(t)?"float32":kt(t)?"string":Nt(t)?"bool":"float32"}function Ct(t){return!!(t&&t.constructor&&t.call&&t.apply)}function Tt(t,e){for(let n=e;n<t;++n)if(t%n==0)return n;return t}function Et(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let r=e-3;r>=0;--r)n[r]=n[r+1]*t[r+1];return n}function $t(t,e,n){const r=new Array;if(1===e.length){const s=e[0];for(let e=0;e<s;e++)r[e]=n[t+e]}else{const s=e[0],a=e.slice(1),i=a.reduce(((t,e)=>t*e));for(let e=0;e<s;e++)r[e]=$t(t+e*i,a,n)}return r}function At(t,e){if(0===t.length)return e[0];const n=t.reduce(((t,e)=>t*e));if(0===n)return[];if(n!==e.length)throw new Error(`[${t}] does not match the input size ${e.length}.`);return $t(0,t,e)}function Rt(t,e){const n=_t(t,e);for(let t=0;t<n.length;t++)n[t]=1;return n}function _t(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error("Unknown data type "+e)}function Dt(t,e){const n=t.reduce(((t,e)=>t*e),1);if(null==e||"float32"===e)return At(t,new Float32Array(n));if("int32"===e)return At(t,new Int32Array(n));if("bool"===e)return At(t,new Uint8Array(n));throw new Error("Unknown data type "+e)}function Ft(t){t.forEach((e=>{Z(Number.isInteger(e)&&e>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`))}))}function Ot(t,e,n){if(0===e)return 0;if(1===e)return t[0];let r=t[t.length-1];for(let e=0;e<t.length-1;++e)r+=n[e]*t[e];return r}function Mt(t,e,n){if(0===e)return[];if(1===e)return[t];const r=new Array(e);for(let e=0;e<r.length-1;++e)r[e]=Math.floor(t/n[e]),t-=r[e]*n[e];return r[r.length-1]=t,r}function Lt(t){return t&&t.then&&"function"==typeof t.then}class zt{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];console.warn(`Setting feature override from URL ${t}: ${e}.`),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(Lt(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const t=function(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((t,...n)=>(function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}(e,n[0],n[1]),n.join("=")))),e}(this.global.location.search);"tfjsflags"in t&&t.tfjsflags.split(",").forEach((t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){if("true"===(e=e.toLowerCase())||"false"===e)return"true"===e;if(""+ +e===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${t}.`)}(e,n)}))}}function Bt(){return Wt}let Pt,Wt=null;function Vt(){if(null==Pt){let t;if("undefined"!=typeof window)t=window;else if(void 0!==n.g)t=n.g;else if("undefined"!=typeof process)t=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}Pt=t}return Pt}function Ut(t,e){const n=function(){const t=Vt();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const r=e();return n.set(t,r),n.get(t)}}const Gt="Abs",jt="Acos",Ht="Acosh",qt="Add",Kt="AddN",Xt="All",Yt="Any",Jt="ArgMax",Zt="ArgMin",Qt="Asin",te="Asinh",ee="Atan",ne="Atanh",re="Atan2",se="AvgPool",ae="AvgPoolBackprop",ie="AvgPool3D",oe="AvgPool3DBackprop",ue="BatchMatMul",le="BatchToSpaceND",ce="BroadcastTo",he="Cast",pe="Ceil",de="ClipByValue",fe="Complex",me="Concat",ge="Conv2D",ye="Conv2DBackpropFilter",be="Conv2DBackpropInput",xe="Conv3D",ve="Conv3DBackpropFilterV2",we="Conv3DBackpropInputV2",ke="Cos",Ne="Cosh",Ie="Cumsum",Se="CropAndResize",Ce="DepthToSpace",Te="DepthwiseConv2dNative",Ee="DepthwiseConv2dNativeBackpropFilter",$e="DepthwiseConv2dNativeBackpropInput",Ae="Diag",Re="Dilation2D",_e="Dilation2DBackpropInput",De="Dilation2DBackpropFilter",Fe="Div",Oe="Elu",Me="EluGrad",Le="Erf",ze="Equal",Be="Exp",Pe="Expm1",We="FFT",Ve="Fill",Ue="FlipLeftRight",Ge="Floor",je="FloorDiv",He="FusedBatchNorm",qe="GatherV2",Ke="GatherNd",Xe="Greater",Ye="GreaterEqual",Je="Identity",Ze="IFFT",Qe="Imag",tn="IsFinite",en="IsInf",nn="IsNan",rn="Less",sn="LessEqual",an="LinSpace",on="Log",un="Log1p",ln="LogicalAnd",cn="LogicalNot",hn="LogicalOr",pn="LogSoftmax",dn="LRN",fn="LRNBackprop",mn="Max",gn="Maximum",yn="MaxPool",bn="MaxPoolBackprop",xn="MaxPool3D",vn="MaxPool3DBackprop",wn="MaxPoolWithArgmax",kn="Mean",Nn="Min",In="Minimum",Sn="MirrorPad",Cn="Mod",Tn="Multiply",En="Negate",$n="NotEqual",An="NonMaxSuppressionV3",Rn="NonMaxSuppressionV4",_n="NonMaxSuppressionV5",Dn="OnesLike",Fn="OneHot",On="PadV2",Mn="Pool",Ln="Pow",zn="Prelu",Bn="Prod",Pn="Range",Wn="Real",Vn="Reciprocal",Un="Relu",Gn="Reshape",jn="ResizeNearestNeighbor",Hn="ResizeNearestNeighborGrad",qn="ResizeBilinear",Kn="ResizeBilinearGrad",Xn="Relu6",Yn="Reverse",Jn="Round",Zn="Rsqrt",Qn="ScatterNd",tr="SelectV2",er="Selu",nr="Slice",rr="Sin",sr="Sinh",ar="Sign",ir="Sigmoid",or="Softplus",ur="Sqrt",lr="Sum",cr="SpaceToBatchND",hr="SplitV",pr="Softmax",dr="SquaredDifference",fr="Square",mr="Sub",gr="SparseToDense",yr="StridedSlice",br="Tan",xr="Tanh",vr="Tile",wr="TopK",kr="Transpose",Nr="Unique",Ir="Unpack",Sr="UnsortedSegmentSum",Cr="ZerosLike",Tr="Step",Er="FromPixels",$r="RotateWithOffset",Ar="_FusedMatMul",Rr="FusedConv2D",_r="FusedDepthwiseConv2D",Dr=Ut("kernelRegistry",(()=>new Map)),Fr=Ut("gradRegistry",(()=>new Map));function Or(t,e){const n=Ur(t,e);return Dr.get(n)}function Mr(t){return Fr.get(t)}function Lr(t){const e=Dr.entries(),n=[];for(;;){const{done:r,value:s}=e.next();if(r)break;const[a,i]=s,[o]=a.split("_");o===t&&n.push(i)}return n}function zr(t){const{kernelName:e,backendName:n}=t,r=Ur(e,n);Dr.has(r)&&console.warn(`The kernel '${e}' for backend '${n}' is already registered`),Dr.set(r,t)}function Br(t){const{kernelName:e}=t;Fr.has(e)&&Bt().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${e}'`),Fr.set(e,t)}function Pr(t,e){const n=Ur(t,e);if(!Dr.has(n))throw new Error(`The kernel '${t}' for backend '${e}' is not registered`);Dr.delete(n)}function Wr(t){if(!Fr.has(t))throw new Error(`The gradient '${t}' for backend is not registered`);Fr.delete(t)}function Vr(t,e){Lr(t).forEach((t=>{zr(Object.assign({},t,{backendName:e}))}))}function Ur(t,e){return`${e}_${t}`}class Gr{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new Hr)}profileKernel(t,e,n){let r;const s=this.backendTimer.time((()=>{r=n()}));for(let e=0;e<r.length;e++){const n=r[e];n.data().then((e=>{jr(e,n.dtype,t)}))}return{kernelName:t,outputs:r,inputs:e,timeMs:s.then((t=>t.kernelMs)),extraInfo:s.then((t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():""))}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:r,inputs:s,extraInfo:a}=t;n.forEach((t=>{Promise.all([t.data(),r,a]).then((n=>{this.logger.logKernelProfile(e,t,n[0],n[1],s,n[2])}))}))}}function jr(t,e,n){if("float32"!==e)return!1;for(let e=0;e<t.length;e++){const r=t[e];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class Hr{logKernelProfile(t,e,n,r,s,a){const i="number"==typeof r?lt(r+"ms",9):r.error,o=lt(t,25),u=e.rank,l=e.size,c=lt(e.shape.toString(),14);let h="";for(const t in s){const n=s[t];if(null!=n){const r=n.shape||e.shape,s=r.length;h+=`${t}: ${s}D ${s>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${u}D ${c}\t%c${l}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function qr(t,e,n,r){const s=Et(e),a=function(t,e,n,r){const s=nt(e),a=r[r.length-1],i=new Array(a).fill(0),o=e.length,u="complex64"===n?Jr(t):t;if(o>1)for(let t=0;t<s/a;t++){const e=t*a;for(let t=0;t<a;t++)i[t]=Math.max(i[t],Kr(u[e+t],0,n).length)}return i}(t,e,n,s),i=e.length,o=Yr(t,e,n,s,a),u=["Tensor"];return r&&(u.push("  dtype: "+n),u.push("  rank: "+i),u.push(`  shape: [${e}]`),u.push("  values:")),u.push(o.map((t=>"    "+t)).join("\n")),u.join("\n")}function Kr(t,e,n){let r;return r=Array.isArray(t)?parseFloat(t[0].toFixed(7))+" + "+parseFloat(t[1].toFixed(7))+"j":kt(t)?`'${t}'`:"bool"===n?Xr(t):parseFloat(t.toFixed(7)).toString(),lt(r,e)}function Xr(t){return 0===t?"false":"true"}function Yr(t,e,n,r,s,a=!0){const i="complex64"===n?2:1,o=e[0],u=e.length;if(0===u)return"complex64"===n?[Kr(Jr(t)[0],0,n)]:"bool"===n?[Xr(t[0])]:[t[0].toString()];if(1===u){if(o>20){const e=3*i;let r=Array.from(t.slice(0,e)),a=Array.from(t.slice((o-3)*i,o*i));return"complex64"===n&&(r=Jr(r),a=Jr(a)),["["+r.map(((t,e)=>Kr(t,s[e],n))).join(", ")+", ..., "+a.map(((t,e)=>Kr(t,s[o-3+e],n))).join(", ")+"]"]}return["["+("complex64"===n?Jr(t):Array.from(t)).map(((t,e)=>Kr(t,s[e],n))).join(", ")+"]"]}const l=e.slice(1),c=r.slice(1),h=r[0]*i,p=[];if(o>20){for(let e=0;e<3;e++){const r=e*h,a=r+h;p.push(...Yr(t.slice(r,a),l,n,c,s,!1))}p.push("...");for(let e=o-3;e<o;e++){const r=e*h,a=r+h;p.push(...Yr(t.slice(r,a),l,n,c,s,e===o-1))}}else for(let e=0;e<o;e++){const r=e*h,a=r+h;p.push(...Yr(t.slice(r,a),l,n,c,s,e===o-1))}const d=2===u?",":"";p[0]="["+p[0]+d;for(let t=1;t<p.length-1;t++)p[t]=" "+p[t]+d;let f=",\n";for(let t=2;t<u;t++)f+="\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(a?"":f),p}function Jr(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}function Zr(t,e){return"string"===e?ns(t):Qr([t],e)}function Qr(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=et(t)),Bt().getBool("DEBUG")&&gt(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error("Unknown data type "+e)}function ts(){return Bt().platform.now()}function es(t,e){return Bt().platform.fetch(t,e)}function ns(t,e="utf-8"){return e=e||"utf-8",Bt().platform.encode(t,e)}function rs(t,e="utf-8"){return e=e||"utf-8",Bt().platform.decode(t,e)}class ss{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=nt(t),null!=n){const t=n.length;Z(t===this.size,(()=>`Length of values '${t}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||mt(e,this.size),this.strides=Et(t)}set(t,...e){0===e.length&&(e=[0]),Z(e.length===this.rank,(()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`));const n=this.locToIndex(e);this.values[n]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const n of t){if(n<0||n>=this.shape[e]){const e=`Requested out of range element at ${t}.   Buffer shape=`+this.shape;throw new Error(e)}e++}let n=t[t.length-1];for(let e=0;e<t.length-1;++e)n+=this.strides[e]*t[e];return this.values[n]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return as().makeTensor(this.values,this.shape,this.dtype)}}let as=null,is=null,os=null;class us{constructor(t,e,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=nt(t),this.strides=Et(t),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return is.buffer(this.shape,this.dtype,t)}bufferSync(){return is.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return At(this.shape,t)}arraySync(){return At(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const t=as().read(this.dataId);if("string"===this.dtype){const e=await t;try{return e.map((t=>rs(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataSync(){this.throwIfDisposed();const t=as().readSync(this.dataId);if("string"===this.dtype)try{return t.map((t=>rs(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await as().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(as().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return is.print(this,t)}clone(){return this.throwIfDisposed(),is.clone(this)}toString(t=!1){return qr(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),is.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),as().makeVariable(this,t,e,n)}}Object.defineProperty(us,Symbol.hasInstance,{value:t=>!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed});class ls extends us{constructor(t,e,n,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!st(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);as().disposeTensor(this),this.dataId=t.dataId,as().incRef(this,null)}dispose(){as().disposeVariable(this),this.isDisposedInternal=!0}}var cs,hs,ps,ds,fs;Object.defineProperty(ls,Symbol.hasInstance,{value:t=>t instanceof us&&null!=t.assign&&t.assign instanceof Function}),function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"}(cs||(cs={})),function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"}(hs||(hs={})),function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"}(ps||(ps={})),function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"}(ds||(ds={})),function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"}(fs||(fs={}));const ms={float32:ds,int32:hs,bool:ps,complex64:fs};function gs(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return ms[t][e]}function ys(t){return gs(t,"int32")}function bs(t,e){if(t.dtype===e.dtype)return[t,e];const n=gs(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function xs(t,e){Z(t.dtype===e.dtype,(()=>`The dtypes of the first(${t.dtype}) and second(${e.dtype}) input must match`))}function vs(t,e){return e.some((e=>e.id===t.id))}function ws(t){const e=[];return ks(t,e,new Set),e}function ks(t,e,n){if(null==t)return;if(t instanceof us)return void e.push(t);if(r=t,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=t;for(const t in s){const r=s[t];n.has(r)||(n.add(r),ks(r,e,n))}}class Ns{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class Is{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Ns}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(console.warn(t+" backend was already registered. Reusing existing backend factory."),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new Gr(this.backendInstance),!0}setupRegisteredKernels(){Lr(this.backendName).forEach((t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(t){Lr(t).forEach((e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])}))}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const n=e.factory();if(!n||n instanceof G||"function"!=typeof n.then)return this.registry[t]=n,{success:!0,asyncInit:!1};{const e=++this.pendingBackendInitId,r=n.then((n=>!(e<this.pendingBackendInitId||(this.registry[t]=n,this.pendingBackendInit=null,0)))).catch((n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${t} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(e){return console.warn(`Initialization of backend ${t} failed`),console.warn(e.stack||e.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(t+" backend not found in registry");this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority))}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),r=n.backend,s=this.readSync(e);r.disposeData(e),n.backend=t,t.move(e,s,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,r=null;if(null==e){if("function"!=typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!=typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=t}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(t){throw e(),t}}nextTensorId(){return Is.nextTensorId++}nextVariableId(){return Is.nextVariableId++}clone(t){const e=this.makeTensorFromDataId(t.dataId,t.shape,t.dtype),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],(t=>({x:()=>{const e="float32",n={x:t},r={dtype:e};return Cs.runKernelFunc((n=>n.cast(t,e)),n,null,he,r)}})),[],{}),e}runKernel(t,e,n,r,s){return this.runKernelFunc(null,e,null,t,n,r,s)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const r=this.backend.numDataIds();let s=0;n.forEach((t=>{s+="complex64"===t.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-e-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${t}'`)}runKernelFunc(t,e,n,r,s,a,i){let o,u=[];const l=this.isTapeOn();null==r&&(r=null!=this.state.activeScope?this.state.activeScope.name:"");const c=this.state.numBytes,h=this.state.numTensors;let p;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const d=Or(r,this.backendName);let f,m;if(null!=d)p=()=>{const t=this.backend.numDataIds();f=d.kernelFunc({inputs:e,attrs:s,backend:this.backend});const n=Array.isArray(f)?f:[f];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,t,n);const o=n.map((({dataId:t,shape:e,dtype:n})=>this.makeTensorFromDataId(t,e,n)));if(l){let t=this.getTensorsForGradient(r,e,o);if(null==t){null==i&&(i=[]);const e=o.filter(((t,e)=>i[e]));t=(a||[]).slice().concat(e)}u=this.saveTensorsForBackwardMode(t)}return o};else{const e=t=>{l&&(u=t.map((t=>this.keep(this.clone(t)))))};p=()=>{const n=this.backend.numDataIds();f=this.tidy((()=>t(this.backend,e)));const s=Array.isArray(f)?f:[f];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,n,s),s}}return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(m=this.profiler.profileKernel(r,e,(()=>p())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(m),o=m.outputs):o=p()})),l&&this.addTapeNode(r,e,o,n,u,s),this.state.profiling&&this.state.activeProfile.kernels.push({name:r,bytesAdded:this.state.numBytes-c,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-h,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(e).map((t=>null!=e[t]?e[t].shape:null)),outputShapes:o.map((t=>t.shape)),kernelTimeMs:m.timeMs,extraInfo:m.extraInfo}),Array.isArray(f)?o:o[0]}saveTensorsForBackwardMode(t){return t.map((t=>this.keep(this.clone(t))))}getTensorsForGradient(t,e,n){const r=Mr(t);if(null!=r){const t=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(Z(Array.isArray(e),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(e).map((t=>e[t]))):a=t.map((t=>e[t]));const i=n.filter(((t,e)=>s[e]));return a.concat(i)}return null}makeTensor(t,e,n,r){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=t;"string"===n&&kt(t[0])&&(s=t.map((t=>ns(t))));const a=r.write(s,e,n),i=new us(e,n,a,this.nextTensorId());if(this.incRef(i,r),"string"===n){const t=this.state.tensorInfo.get(a),e=wt(s);this.state.numBytes+=e-t.bytes,t.bytes=e}return i}makeTensorFromDataId(t,e,n,r){const s=new us(e,n=n||"float32",t,this.nextTensorId());return this.incRef(s,r),s}makeVariable(t,e=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==t.dtype&&(t=t.cast(r));const s=new ls(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}incRef(t,e){const n=this.state.tensorInfo.has(t.dataId)?this.state.tensorInfo.get(t.dataId).refCount:0;if(this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*vt(t.dtype)),this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n,refCount:0}),this.state.numBytes+=n}this.state.tensorInfo.get(t.dataId).refCount++,t instanceof ls||this.track(t)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;this.state.numTensors--,"string"===t.dtype&&this.state.numStringTensors--;const e=this.state.tensorInfo.get(t.dataId);e.refCount<=1?("complex64"!==t.dtype&&(this.state.numBytes-=e.bytes),this.state.numDataBuffers--,e.backend.disposeData(t.dataId),this.state.tensorInfo.delete(t.dataId)):this.state.tensorInfo.get(t.dataId).refCount--}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((t=>t.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const t of this.state.activeProfile.kernels)t.kernelTimeMs=await t.kernelTimeMs,t.extraInfo=await t.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,r,s,a){const i={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:s},o=Mr(t);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=t=>(t=t.map(((t,e)=>{if(null==t){const t=n[e],r=_t(t.size,t.dtype);return this.makeTensor(r,t.shape,t.dtype)}return t})),r(t.length>1?t:t[0],s,a))),this.state.activeTape.push(i)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=ws(t),n=new Set(e.map((t=>t.id)));for(let t=0;t<this.state.activeScope.track.length;t++){const e=this.state.activeScope.track[t];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach((t=>{t.kept||t.scopeId!==r.id||this.track(t)}))}gradients(t,e,n,r=!1){if(Z(e.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",t)));Z(s instanceof us,(()=>"The result y returned by f() must be a tensor."));const a=function(t,e,n){const r={},s={};for(let t=0;t<e.length;t++)r[e[t].id]=!0;for(let n=0;n<t.length;n++){const a=t[n],i=a.inputs;for(const t in i){const n=i[t];let o=!1;for(let t=0;t<e.length;t++)if(r[n.id]){a.outputs.forEach((t=>r[t.id]=!0)),o=!0,s[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let e=t.length-1;e>=0;e--){const n=t[e],r=n.inputs;for(let t=0;t<n.outputs.length;t++)if(a[n.outputs[t].id]){for(const t in r)a[r[t].id]=!0,i[n.id]=!0;break}}const o=[];for(let e=0;e<t.length;e++){const n=t[e];if(s[n.id]&&i[n.id]){const t={};for(const e in n.inputs){const s=n.inputs[e];r[s.id]&&(t[e]=s)}const e=Object.assign({},n);e.inputs=t,e.outputs=n.outputs,o.push(e)}}return o}(this.state.activeTape,e,s);if(!r&&0===a.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const t={};t[s.id]=null==n?function(t){const e=Rt(nt(t),"float32");return Cs.makeTensor(e,t,"float32")}(s.shape):n,function(t,e,n,r){for(let s=e.length-1;s>=0;s--){const a=e[s],i=[];if(a.outputs.forEach((e=>{const n=t[e.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const e in a.inputs){if(!(e in o))throw new Error(`Cannot backprop through input ${e}. Available gradients found: ${Object.keys(o)}.`);const s=n((()=>o[e]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${e} must have 'float32' dtype, but has '${s.dtype}'`);const i=a.inputs[e];if(!st(s.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${e}' has shape '${s.shape}', which does not match the shape of the input '${i.shape}'`);if(null==t[i.id])t[i.id]=s;else{const e=t[i.id];t[i.id]=r(e,s),e.dispose()}}}}(t,a,(t=>this.tidy(t)),Ts);const r=e.map((e=>t[e.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((t=>{for(const e of t.saved)e.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(t){return Z(Ct(t),(()=>"The f passed in customGrad(f) must be a function.")),(...e)=>{let n;Z(e.every((t=>t instanceof us)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return e.forEach(((t,e)=>{r[e]=t})),this.runKernelFunc(((r,s)=>(n=t(...e,s),Z(n.value instanceof us,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),Z(Ct(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value)),r,((t,r)=>{const s=n.gradFunc(t,r),a=Array.isArray(s)?s:[s];Z(a.length===e.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),Z(a.every((t=>t instanceof us)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((t,e)=>{i[e]=()=>t})),i}))}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}async time(t){const e=ts(),n=await this.backend.time(t);return n.wallMs=ts()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Ns;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Ss(){const t=Vt();if(null==t._tfengine){const e=new zt(t);t._tfengine=new Is(e)}var e;return e=t._tfengine.ENV,Wt=e,as=()=>t._tfengine,t._tfengine}Is.nextTensorId=0,Is.nextVariableId=0;const Cs=Ss();function Ts(t,e){const n={a:t,b:e};return Cs.runKernelFunc(((n,r)=>{const s=n.add(t,e);return r([t,e]),s}),n,null,qt)}function Es(){if("undefined"!=typeof navigator&&null!=navigator){const t=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function $s(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const As=Bt();function Rs(t,e){let n=t;if(xt(t))return"string"===e?[]:[t.length];if(!Array.isArray(t))return[];const r=[];for(;Array.isArray(n)||xt(n)&&"string"!==e;)r.push(n.length),n=n[0];return Array.isArray(t)&&Bt().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&_s(t,r,[]),r}function _s(t,e,n){if(n=n||[],!Array.isArray(t)&&!xt(t))return void Z(0===e.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`));Z(e.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`)),Z(t.length===e[0],(()=>`Element arr[${n.join("][")}] should have ${e[0]} elements, but has ${t.length} elements`));const r=e.slice(1);for(let e=0;e<t.length;++e)_s(t[e],r,n.concat(e))}function Ds(t,e,n,r){if(null!=t&&("numeric"!==t&&t!==e||"numeric"===t&&"string"===e))throw new Error(`Argument '${n}' passed to '${r}' must be ${t} tensor, but got ${e} tensor`)}function Fs(t,e,n,r="numeric"){if(t instanceof us)return Ds(r,t.dtype,e,n),t;let s=St(t);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),Ds(r,s,e,n),null==t||!xt(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t){const r=null==t?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const a=Rs(t,s);xt(t)||Array.isArray(t)||(t=[t]);const i="string"!==s?Qr(t,s):et(t,[],!0);return Cs.makeTensor(i,a,s)}function Os(t,e,n,r="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map(((t,r)=>Fs(t,`${e}[${r}]`,n)),r)}As.registerFlag("DEBUG",(()=>!1),(t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),As.registerFlag("IS_BROWSER",(()=>$s())),As.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),As.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),As.registerFlag("PROD",(()=>!1)),As.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>As.getBool("DEBUG"))),As.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),As.registerFlag("IS_TEST",(()=>!1));const Ms="__op";function Ls(t){const e=Object.keys(t);if(1!==e.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+e.length+" keys.");let n=e[0];const r=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=Ms;const s=(...t)=>{Cs.startScope(n);try{const e=r(...t);return Lt(e)&&console.error("Cannot return a Promise inside of tidy."),Cs.endScope(e),e}catch(t){throw Cs.endScope(null),t}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}const zs=Ls({complex_:function(t,e){const n=Fs(t,"real","complex"),r=Fs(e,"imag","complex");Q(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return Cs.runKernelFunc((t=>t.complex(n,r)),s,null,fe)}});function Bs(t,e,n,r){if(null==r&&(r=St(t)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!xt(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){Ft(e);const t=nt(e),r=nt(n);Z(t===r,(()=>`Based on the provided shape, [${e}], the tensor should have ${t} values but has ${r}`));for(let t=0;t<n.length;++t){const r=n[t],s=t!==n.length-1||r!==nt(e.slice(t));Z(n[t]===e[t]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `))}}return xt(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==r?Qr(t,r):et(t,[],!0),Cs.makeTensor(t,e,r)}function Ps(t,e,n){return Bs(t,e,Rs(t,n),n)}const Ws={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function Vs(t,e){const n=[],r=[],s=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);for(let a=0;a<s.length;++a){const i=s[a],o=Array.isArray(t)?t[a].tensor:t[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const t=new Promise((async t=>{const e=await o.bytes(),n=e.reduce(((t,e)=>t+e.length),0)+4*e.length,r=new Uint8Array(n);let s=0;for(let t=0;t<e.length;t++){const n=e[t],a=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(a,s),s+=4,r.set(n,s),s+=n.length}t(r)}));r.push(t)}else r.push(o.data());null!=e&&(u.group=e),n.push(u)}return{data:Gs(await Promise.all(r)),specs:n}}function Us(t,e){const n={};let r,s=0;for(const a of e){const e=a.name,i=a.dtype,o=a.shape,u=nt(o);let l;if("quantization"in a){const n=a.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${a.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${a.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${a.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=Ws[n.dtype],c=t.slice(s,s+u*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(h.length);for(let t=0;t<h.length;t++){const e=h[t];l[t]=e*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=Ys()),l=r(h)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${e}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(h.length);for(let t=0;t<h.length;t++){const e=h[t];l[t]=Math.round(e*n.scale+n.min)}}s+=u*o}else if("string"===i){const e=nt(a.shape);l=[];for(let n=0;n<e;n++){const e=new Uint32Array(t.slice(s,s+4))[0];s+=4;const n=new Uint8Array(t.slice(s,s+e));l.push(n),s+=e}}else{const r=Ws[i],a=t.slice(s,s+u*r);if("float32"===i)l=new Float32Array(a);else if("int32"===i)l=new Int32Array(a);else if("bool"===i)l=new Uint8Array(a);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${e}': ${i}`);{l=new Float32Array(a);const t=new Float32Array(l.length/2),r=new Float32Array(l.length/2);for(let e=0;e<t.length;e++)t[e]=l[2*e],r[e]=l[2*e+1];const s=Ps(t,o,"float32"),i=Ps(r,o,"float32");n[e]=zs(s,i),s.dispose(),i.dispose()}}s+=u*r}"complex64"!==i&&(n[e]=Ps(l,o,i))}return n}function Gs(t){if(null===t)throw new Error("Invalid input value: "+JSON.stringify(t));let e=0;const n=[];t.forEach((t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: "+t.constructor.name)}));const r=new Uint8Array(e);let s=0;return n.forEach((t=>{r.set(new Uint8Array(t.buffer),s),s+=t.byteLength})),r.buffer}const js="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Hs(t){return js?Buffer.byteLength(t):new Blob([t]).size}function qs(t){if(1===t.length)return t[0];let e=0;t.forEach((t=>{e+=t.byteLength}));const n=new Uint8Array(e);let r=0;return t.forEach((t=>{n.set(new Uint8Array(t),r),r+=t.byteLength})),n.buffer}function Ks(t){for(t=t.trim();t.endsWith("/");)t=t.slice(0,t.length-1);const e=t.split("/");return e[e.length-1]}function Xs(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:Hs(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:Hs(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}function Ys(){const t=function(){const t=t=>{let e=t<<13,n=0;for(;0==(8388608&e);)n-=8388608,e<<=1;return e&=-8388609,n+=947912704,e|n},e=new Uint32Array(2048);e[0]=0;for(let n=1;n<1024;n++)e[n]=t(n);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}(),e=function(){const t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let e=1;e<31;e++)t[e]=e<<23;for(let e=33;e<63;e++)t[e]=2147483648+(e-32<<23);return t}(),n=function(){const t=new Uint32Array(64);for(let e=0;e<64;e++)t[e]=1024;return t[0]=t[32]=0,t}();return r=>{const s=new ArrayBuffer(4*r.length),a=new Uint32Array(s);for(let s=0;s<r.length;s++){const i=r[s],o=t[n[i>>10]+(1023&i)]+e[i>>10];a[s]=o}return new Float32Array(s)}}class Js{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Js.instance&&(Js.instance=new Js),Js.instance}static registerSaveRouter(t){Js.getInstance().saveRouters.push(t)}static registerLoadRouter(t){Js.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return Js.getHandlers(t,"save")}static getLoadHandlers(t,e){return Js.getHandlers(t,"load",e)}static getHandlers(t,e,n){const r=[];return("load"===e?Js.getInstance().loadRouters:Js.getInstance().saveRouters).forEach((e=>{const s=e(t,n);null!==s&&r.push(s)})),r}}const Zs=t=>Js.registerSaveRouter(t),Qs=t=>Js.registerLoadRouter(t),ta=t=>Js.getSaveHandlers(t),ea=(t,e)=>Js.getLoadHandlers(t,e),na="tensorflowjs",ra="models_store",sa="model_info_store";function aa(){if(!Bt().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"==typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function ia(t){const e=t.result;e.createObjectStore(ra,{keyPath:"modelPath"}),e.createObjectStore(sa,{keyPath:"modelPath"})}class oa{constructor(t){if(this.indexedDB=aa(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise(((t,n)=>{const r=this.indexedDB.open(na,1);r.onupgradeneeded=()=>ia(r),r.onsuccess=()=>{const s=r.result;if(null==e){const e=s.transaction(ra,"readonly"),r=e.objectStore(ra).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));t(r.result.modelArtifacts)},r.onerror=t=>(s.close(),n(r.error)),e.oncomplete=()=>s.close()}else{const r=Xs(e),a=s.transaction(sa,"readwrite");let i=a.objectStore(sa);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;o.onsuccess=()=>{u=s.transaction(ra,"readwrite");const o=u.objectStore(ra).put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:r});o.onsuccess=()=>t({modelArtifactsInfo:r}),o.onerror=t=>{i=a.objectStore(sa);const e=i.delete(this.modelPath);e.onsuccess=()=>(s.close(),n(o.error)),e.onerror=t=>(s.close(),n(o.error))}},o.onerror=t=>(s.close(),n(o.error)),a.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}}},r.onerror=t=>n(r.error)}))}}oa.URL_SCHEME="indexeddb://";const ua=t=>{return Bt().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(oa.URL_SCHEME)?(e=t.slice(oa.URL_SCHEME.length),new oa(e)):null;var e};Js.registerSaveRouter(ua),Js.registerLoadRouter(ua);class la{constructor(){this.indexedDB=aa()}async listModels(){return new Promise(((t,e)=>{const n=this.indexedDB.open(na,1);n.onupgradeneeded=()=>ia(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(sa,"readonly"),a=s.objectStore(sa).getAll();a.onsuccess=()=>{const e={};for(const t of a.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},a.onerror=t=>(r.close(),e(a.error)),s.oncomplete=()=>r.close()},n.onerror=t=>e(n.error)}))}async removeModel(t){var e;return t=(e=t).startsWith(oa.URL_SCHEME)?e.slice(oa.URL_SCHEME.length):e,new Promise(((e,n)=>{const r=this.indexedDB.open(na,1);r.onupgradeneeded=()=>ia(r),r.onsuccess=()=>{const s=r.result,a=s.transaction(sa,"readwrite"),i=a.objectStore(sa),o=i.get(t);let u;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const r=i.delete(t),a=()=>{u=s.transaction(ra,"readwrite");const r=u.objectStore(ra).delete(t);r.onsuccess=()=>e(o.result.modelArtifactsInfo),r.onerror=t=>n(o.error)};r.onsuccess=a,r.onerror=t=>(a(),s.close(),n(o.error))}},o.onerror=t=>(s.close(),n(o.error)),a.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}},r.onerror=t=>n(r.error)}))}}const ca="/",ha="tensorflowjs_models",pa="info",da="model_topology",fa="weight_specs",ma="weight_data",ga="model_metadata";function ya(t){return{info:[ha,t,pa].join(ca),topology:[ha,t,da].join(ca),weightSpecs:[ha,t,fa].join(ca),weightData:[ha,t,ma].join(ca),modelMetadata:[ha,t,ga].join(ca)}}function ba(t){const e=t.split(ca);if(e.length<3)throw new Error("Invalid key format: "+t);return e.slice(1,e.length-1).join(ca)}class xa{constructor(t){if(!Bt().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=ya(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),r=Xs(t);try{return this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(t){if(js)return Buffer.from(t).toString("base64");const e=new Uint8Array(t);let n="";for(let t=0,r=e.length;t<r;t++)n+=String.fromCharCode(e[t]);return btoa(n)}(t.weightData)),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,userDefinedMetadata:t.userDefinedMetadata})),{modelArtifactsInfo:r}}catch(t){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const t=JSON.parse(s);e.format=t.format,e.generatedBy=t.generatedBy,e.convertedBy=t.convertedBy,e.userDefinedMetadata=t.userDefinedMetadata}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=function(t){if(js){const e=Buffer.from(t,"base64");return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}const e=atob(t),n=new Uint8Array(e.length);for(let t=0;t<e.length;++t)n.set([e.charCodeAt(t)],t);return n.buffer}(a),e}}xa.URL_SCHEME="localstorage://";const va=t=>{return Bt().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(xa.URL_SCHEME)?(e=t.slice(xa.URL_SCHEME.length),new xa(e)):null;var e};Js.registerSaveRouter(va),Js.registerLoadRouter(va);class wa{constructor(){Z(Bt().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),Z("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const t={},e=ha+ca,n=ca+pa;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);s.startsWith(e)&&s.endsWith(n)&&(t[ba(s)]=JSON.parse(this.LS.getItem(s)))}return t}async removeModel(t){var e;const n=ya(t=(e=t).startsWith(xa.URL_SCHEME)?e.slice(xa.URL_SCHEME.length):e);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${t}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}const ka="://";class Na{constructor(){this.managers={}}static getInstance(){return null==Na.instance&&(Na.instance=new Na),Na.instance}static registerManager(t,e){Z(null!=t,(()=>"scheme must not be undefined or null.")),t.endsWith(ka)&&(t=t.slice(0,t.indexOf(ka))),Z(t.length>0,(()=>"scheme must not be an empty string."));const n=Na.getInstance();Z(null==n.managers[t],(()=>`A model store manager is already registered for scheme '${t}'.`)),n.managers[t]=e}static getManager(t){const e=this.getInstance().managers[t];if(null==e)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(this.getInstance().managers)}}function Ia(t){if(-1===t.indexOf(ka))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+Na.getSchemes().join(","));return{scheme:t.split(ka)[0],path:t.split(ka)[1]}}async function Sa(t,e,n=!1){Z(t!==e,(()=>`Old path and new path are the same: '${t}'`));const r=Js.getLoadHandlers(t);Z(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${t}.`)),Z(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${t}.`));const s=r[0],a=Js.getSaveHandlers(e);Z(a.length>0,(()=>`Copying failed because no save handler is found for destination URL ${e}.`)),Z(a.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${e}.`));const i=a[0],o=Ia(t).scheme,u=Ia(t).path,l=o===Ia(t).scheme,c=await s.load();n&&l&&await Na.getManager(o).removeModel(u);const h=await i.save(c);return n&&!l&&await Na.getManager(o).removeModel(u),h.modelArtifactsInfo}async function Ca(){const t=Na.getSchemes(),e={};for(const n of t){const t=await Na.getManager(n).listModels();for(const r in t)e[n+ka+r]=t[r]}return e}async function Ta(t){const e=Ia(t);return Na.getManager(e.scheme).removeModel(e.path)}async function Ea(t,e){return Sa(t,e,!1)}async function $a(t,e){return Sa(t,e,!0)}class Aa{fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Browser's encoder only supports utf-8, but got "+e);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}}if(Bt().get("IS_BROWSER")){Bt().setPlatform("browser",new Aa);try{Na.registerManager(xa.URL_SCHEME,new wa)}catch(t){}try{Na.registerManager(oa.URL_SCHEME,new la)}catch(t){}}let Ra;function _a(t,e="float32",n){return e=e||"float32",Ft(t),new ss(t,e,n)}Bt().get("IS_NODE")&&Bt().setPlatform("node",new class{constructor(){this.util=n(1758),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return null!=Bt().global.fetch?Bt().global.fetch(t,e):(null==Ra&&(Ra=n(8352)),Ra(t,e))}now(){const t=process.hrtime();return 1e3*t[0]+t[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Node built-in encoder only supports utf-8, but got "+e);return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}});const Da=Ls({cast_:function(t,e){const n=Fs(t,"x","cast");if(!yt(e))throw new Error("Failed to cast to unknown dtype "+e);if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:e};return Cs.runKernelFunc((t=>t.cast(n,e)),r,null,he,s)}}),Fa=Ls({clone_:function(t){const e=Fs(t,"x","clone",null),n={x:e};return Cs.runKernelFunc((()=>Cs.makeTensorFromDataId(e.dataId,e.shape,e.dtype)),n,null,Je)}});function Oa(t,e=!1){console.log(t.toString(e))}function Ma(t){return new Promise((t=>setTimeout(t))).then(t)}Ss(),is={buffer:_a,cast:Da,clone:Fa,print:Oa};class La{constructor(t){if(!Bt().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(La.URL_SCHEME)&&(t=t.slice(La.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelTopologyFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n},s=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),a=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(a.download=this.modelTopologyFileName,a.href=s,await Ma((()=>a.dispatchEvent(new MouseEvent("click")))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=e,await Ma((()=>t.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Xs(t)}}}}La.URL_SCHEME="downloads://";class za{constructor(t){if(null==t||t.length<1)throw new Error("When calling browserFiles, at least 1 file is required, but received "+t);this.files=t}async load(){const t=this.files[0],e=this.files.slice(1);return new Promise(((n,r)=>{const s=new FileReader;s.onload=s=>{const a=JSON.parse(s.target.result),i=a.modelTopology;if(null==i)return void r(new Error("modelTopology field is missing from file "+t.name));0===e.length&&n({modelTopology:i});const o=a.weightsManifest;if(null==o)return void r(new Error("weightManifest field is missing from file "+t.name));let u;try{u=this.checkManifestAndWeightFiles(o,e)}catch(t){return void r(t)}const l=[],c=[],h=[];o.forEach((t=>{t.paths.forEach((t=>{c.push(t),h.push(null)})),l.push(...t.weights)})),o.forEach((t=>{t.paths.forEach((t=>{const e=new FileReader;e.onload=e=>{const r=e.target.result,s=c.indexOf(t);h[s]=r,-1===h.indexOf(null)&&n({modelTopology:i,weightSpecs:l,weightData:qs(h),format:a.format,generatedBy:a.generatedBy,convertedBy:a.convertedBy,userDefinedMetadata:a.userDefinedMetadata})},e.onerror=e=>r(`Failed to weights data from file of path '${t}'.`),e.readAsArrayBuffer(u[t])}))}))},s.onerror=e=>r(`Failed to read model topology and weights manifest JSON from file '${t.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),s.readAsText(t)}))}checkManifestAndWeightFiles(t,e){const n=[],r=e.map((t=>Ks(t.name))),s={};for(const a of t)a.paths.forEach((t=>{const a=Ks(t);if(-1!==n.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(n.push(a),-1===r.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);s[t]=e[r.indexOf(a)]}));if(n.length!==e.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${e.length}).`);return s}}function Ba(t){return new za(t)}function Pa(t,e,n,r){!function(t){Z(null!=t&&Array.isArray(t)&&t.length>0,(()=>"promises must be a none empty array"))}(t),function(t,e){Z(t>=0&&t<=1,(()=>"Progress fraction must be in range [0, 1], but got startFraction "+t)),Z(e>=0&&e<=1,(()=>"Progress fraction must be in range [0, 1], but got endFraction "+e)),Z(e>=t,(()=>`startFraction must be no more than endFraction, but got startFraction ${t} and endFraction `+e))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(t.map((a=>(a.then((a=>{const i=n+ ++s/t.length*(r-n);return e(i),a})),a))))}async function Wa(t,e){null==e&&(e={});const n=null==e.fetchFunc?Bt().platform.fetch:e.fetchFunc,r=t.map((t=>n(t,e.requestInit,{isBinary:!0}))),s=(null==e.onProgress?await Promise.all(r):await Pa(r,e.onProgress,0,.5)).map((t=>t.arrayBuffer()));return null==e.onProgress?await Promise.all(s):await Pa(s,e.onProgress,.5,1)}async function Va(t,e="",n,r){return Ua((t=>Wa(t,{requestInit:r})))(t,e,n)}function Ua(t){return async(e,n="",r)=>{const s=e.map((()=>!1)),a={},i=null!=r?r.map((()=>!1)):[],o=[];if(e.forEach(((t,e)=>{let n=0;t.weights.forEach((t=>{const u="quantization"in t?t.quantization.dtype:t.dtype,l=Ws[u]*nt(t.shape),c=()=>{s[e]=!0,null==a[e]&&(a[e]=[]),a[e].push({manifestEntry:t,groupOffset:n,sizeBytes:l})};null!=r?r.forEach(((e,n)=>{e===t.name&&(c(),i[n]=!0)})):c(),o.push(t.name),n+=l}))})),!i.every((t=>t))){const t=r.filter(((t,e)=>!i[e]));throw new Error("Could not find weights in manifest with names: "+t.join(", ")+". \nManifest JSON has weights with names: "+o.join(", ")+".")}const u=s.reduce(((t,e,n)=>(e&&t.push(n),t)),[]),l=[];u.forEach((t=>{e[t].paths.forEach((t=>{const e=n+(n.endsWith("/")?"":"/")+t;l.push(e)}))}));const c=await t(l),h={};let p=0;return u.forEach((t=>{const n=e[t].paths.length;let r=0;for(let t=0;t<n;t++)r+=c[p+t].byteLength;const s=new ArrayBuffer(r),i=new Uint8Array(s);let o=0;for(let t=0;t<n;t++){const e=new Uint8Array(c[p+t]);i.set(e,o),o+=e.byteLength}a[t].forEach((t=>{const e=Us(s.slice(t.groupOffset,t.groupOffset+t.sizeBytes),[t.manifestEntry]);for(const t in e)h[t]=e[t]})),p+=n})),h}}Js.registerSaveRouter((t=>Bt().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(La.URL_SCHEME)?function(t="model"){return new La(t)}(t.slice(La.URL_SCHEME.length)):null));class Ga{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?(Z("function"==typeof e.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=e.fetchFunc):this.fetch=Bt().platform.fetch,Z(null!=t&&t.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(t)&&Z(2===t.length,(()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`)),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,userDefinedMetadata:t.userDefinedMetadata,weightsManifest:n};e.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin");const s=await this.fetch(this.path,e);if(s.ok)return{modelArtifactsInfo:Xs(t),responses:[s]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+s.status+".")}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code `+t.status+". Please verify this URL points to the model JSON of the model to load.");let e;try{e=await t.json()}catch(t){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=e.modelTopology,r=e.weightsManifest,s=e.generatedBy,a=e.convertedBy,i=e.format,o=e.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let u,l;if(null!=r){const t=await this.loadWeights(r);[u,l]=t}const c={modelTopology:n,weightSpecs:u,weightData:l,userDefinedMetadata:o,generatedBy:s,convertedBy:a,format:i},h=e.modelInitializer;return h&&(c.modelInitializer=h),c}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?");return[t.substring(0,e)+"/",n>e?t.substring(n):""]}(e),s=this.weightPathPrefix||n,a=[];for(const e of t)a.push(...e.weights);const i=[],o=[];for(const e of t)for(const t of e.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(t)):i.push(s+t+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[a,qs(await Wa(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function ja(t){return null!=t.match(Ga.URL_SCHEME_REGEX)}Ga.URL_SCHEME_REGEX=/^https?:\/\//;const Ha=(t,e)=>{if("undefined"==typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every((t=>ja(t))):ja(t),n)return qa(t,e)}return null};function qa(t,e){return new Ga(t,e)}function Ka(t,e){return qa(t,e)}Js.registerSaveRouter(Ha),Js.registerLoadRouter(Ha);class Xa{constructor(t){this.modelArtifacts=t}async load(){return this.modelArtifacts}}class Ya{constructor(t){this.saveHandler=t}async save(t){return this.saveHandler(t)}}function Ja(t,e,n,r){return 1===arguments.length?null!=t.modelTopology||null!=t.weightSpecs?new Xa(t):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Xa({modelTopology:t})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Xa({modelTopology:t,weightSpecs:e,weightData:n,trainingConfig:r}))}function Za(t){return new Ya(t)}const Qa=Ls({reshape_:function(t,e){const n=Fs(t,"x","reshape",null),r={x:n},s={shape:e};return Cs.runKernelFunc(((t,r)=>(e=ht(e,n.size),Z(n.size===nt(e),(()=>"new shape and old shape must have the same number of elements.")),r([n]),t.reshape(n,e))),r,null,Gn,s)}}),ti=Ls({matMul_:function(t,e,n=!1,r=!1){let s=Fs(t,"a","matMul"),a=Fs(e,"b","matMul");[s,a]=bs(s,a);const i={a:s,b:a},o={transposeA:n,transposeB:r};return Cs.runKernelFunc(((t,e)=>{e([s,a]);const i=n?s.shape[s.rank-2]:s.shape[s.rank-1],o=r?a.shape[a.rank-1]:a.shape[a.rank-2],u=n?s.shape[s.rank-1]:s.shape[s.rank-2],l=r?a.shape[a.rank-2]:a.shape[a.rank-1],c=s.shape.slice(0,-2),h=a.shape.slice(0,-2),p=nt(c),d=nt(h),f=p===d||1===p||1===d;Z(s.rank>=2&&a.rank>=2&&f,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${c}) and (${h}).`)),Z(i===o,(()=>`Error in matMul: inner shapes (${i}) and (${o}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${n} and transposeB=${r} must match.`));const m=(p>d?c:h).concat([u,l]),g=Qa(s,n?[p,i,u]:[p,u,i]),y=Qa(a,r?[d,l,o]:[d,o,l]),b=t.batchMatMul(g,y,n,r);return Qa(b,m)}),i,null,ue,o)}}),ei=Ls({oneHot_:function(t,e,n=1,r=0){if(e<2)throw new Error("Error in oneHot: depth must be >=2, but it is "+e);const s=Fs(t,"indices","oneHot","int32"),a=[...s.shape,e],i={indices:s},o={depth:e,onValue:n,offValue:r};return Cs.runKernelFunc(((t,i)=>(i([s]),Qa(t.oneHot(Qa(s,[s.size]),e,n,r),a))),i,null,Fn,o)}}),ni=Ls({transpose_:function(t,e){const n=Fs(t,"x","transpose");if(null==e&&(e=n.shape.map(((t,e)=>e)).reverse()),Z(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${e}.`)),e.forEach((t=>{Z(t>=0&&t<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+" but got "+e))})),n.rank<=1)return n.clone();const r={x:n},s={perm:e};return Cs.runKernelFunc((t=>t.transpose(n,e)),r,null,kr,s)}}),ri=Ls({confusionMatrix_:function(t,e,n){const r=Fs(t,"labels","confusionMatrix"),s=Fs(e,"predictions","confusionMatrix");Z(null==n||n>0&&Number.isInteger(n),(()=>"If provided, numClasses must be a positive integer, but got "+n)),Z(1===r.rank,(()=>"Expected the rank of labels to be 1, but got "+r.rank)),Z(1===s.rank,(()=>"Expected the rank of predictions to be 1, but got "+s.rank)),Z(r.shape[0]===s.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${s.shape[0]}. Labels and predictions should have the same number of elements.`)),Z(n>0&&Number.isInteger(n),(()=>"numClasses is required to be a positive integer, but got "+n));const a=ei(Da(r,"int32"),n),i=ei(Da(s,"int32"),n),o=ni(a),u=ti(o,i);return Da(u,"int32")}});function si(t,e,n){if(tt(t),null!=e&&3!==e.length)throw new Error("tensor3d() requires shape to have three numbers");const r=Rs(t,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Bs(t,e,r,n)}let ai;async function ii(t,e){let n=Fs(t,"img","toPixels");if(!(t instanceof us)){const t=n;n=Da(t,"int32"),t.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,s]=n.shape.slice(0,2),a=2===n.rank?1:n.shape[2];if(a>4||2===a)throw new Error("toPixels only supports depth of size 1, 3 or 4 but got "+a);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const i=await n.data(),o="float32"===n.dtype?255:1,u=new Uint8ClampedArray(s*r*4);for(let t=0;t<r*s;++t){const e=[0,0,0,255];for(let r=0;r<a;r++){const s=i[t*a+r];if("float32"===n.dtype){if(s<0||s>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${s}.`)}else if("int32"===n.dtype&&(s<0||s>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${s}.`);1===a?(e[0]=s*o,e[1]=s*o,e[2]=s*o):e[r]=s*o}const r=4*t;u[r+0]=Math.round(e[0]),u[r+1]=Math.round(e[1]),u[r+2]=Math.round(e[2]),u[r+3]=Math.round(e[3])}if(null!=e){e.width=s,e.height=r;const t=e.getContext("2d"),n=new ImageData(u,s,r);t.putImageData(n,0,0)}return n!==t&&n.dispose(),u}const oi=Ls({fromPixels_:function(t,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==t)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,a=!1,i=!1;if(t.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&t instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&t instanceof HTMLVideoElement)s=!0;else if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement)a=!0;else{if(null==t.getContext)throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was "+t.constructor.name);i=!0}if(s){const e=2;if(s&&t.readyState<e)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=Or(Er,Cs.backendName)){const n={pixels:t},r={numChannels:e};return Cs.runKernel(Er,n,r)}const[o,u]=s?[t.videoWidth,t.videoHeight]:[t.width,t.height];let l,c;if(i?l=t.getContext("2d").getImageData(0,0,o,u).data:r||n?l=t.data:(a||s)&&(null==ai&&(ai=document.createElement("canvas").getContext("2d")),ai.canvas.width=o,ai.canvas.height=u,ai.drawImage(t,0,0,o,u),l=ai.getImageData(0,0,o,u).data),4===e)c=new Int32Array(l);else{const t=o*u;c=new Int32Array(t*e);for(let n=0;n<t;n++)for(let t=0;t<e;++t)c[n*e+t]=l[4*n+t]}return si(c,[u,o,e],"int32")}});function ui(t,e){if(t.rank<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==e.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[e.rank-1]>t.rank)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[e.rank-1]} vs. ${t.rank}`);if(0===t.size)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const n=e.shape,r=n[n.length-1];let s=1;for(let t=0;t<n.length-1;++t)s*=n[t];const a=t.shape,i=n.slice();i.pop();let o=1;for(let e=r;e<t.rank;++e)o*=a[e],i.push(a[e]);const u=[...Et(t.shape).map((t=>t/o)),1].slice(0,r);return[i,s,o,u]}function li(t,e,n){const r=e.rank>1?e.shape[e.rank-1]:1,s=e.rank>1?e.rank-1:1,a="Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: "+n.shape+`, indices.shape: ${e.shape}, shape: ${t}`+`, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(t.length<r+(n.rank-s))throw new Error(a+" Output shape length < "+(r+(n.rank-s)));if(n.rank!==s+t.length-r)throw new Error(a+" update.rank != "+(s+t.length-r));for(let t=0;t<s;++t)if(n.shape[t]!==e.shape[t])throw new Error(a+` updates.shape[${t}] (${n.shape[t]}) != indices.shape[${t}] (${e.shape[t]}).`);for(let e=0;e<n.rank-s;++e)if(n.shape[e+s]!==t[e+r])throw new Error(a+` updates.shape[${e+s}] (${n.shape[e+s]}) != shape[${e+s}] (${t[e+s]})`)}function ci(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==e.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: "+e.dtype);if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: "+n);if(0===n.length){if(0===e.size)throw new Error("Indices specified for empty output. indices shape: "+e.shape);if(0===t.size)throw new Error("Updates specified for empty output. updates shape: "+t.shape)}li(n,e,t)}function hi(t,e,n){const r=e.shape.length,s=r>1?e.shape[r-1]:1,a=n.length;let i=1;for(let t=s;t<a;++t)i*=n[t];const o=s<1?1:s;return{sliceRank:s,numUpdates:nt(e.shape)/o,sliceSize:i,strides:[...Et(n.slice(0,s)),1],outputSize:nt(n)}}function pi(t,e,n){const r=t.shape.length;Z(r===e.length,(()=>`Error in slice${r}D: Length of begin ${e} must match the rank of the array (${r}).`)),Z(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let s=0;s<r;++s)Z(e[s]+n[s]<=t.shape[s],(()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${e[s]+n[s]}) would overflow input.shape[${s}] (${t.shape[s]})`))}function di(t){const e=[];let n=0;for(;t>0;)1&t&&e.push(n),t/=2,n++;return e}function fi(t,e,n){const r=[];for(let s=0;s<t.length;s++)r[s]=Math.ceil((e[s]-t[s])/n[s]);return r}function mi(t,e,n,r){const s=[...t];for(let t=s.length;t<r.length;t++)s.push(1);for(let t=0;t<n;t++)0===t?s[e]=1:(s.splice(e,0,1),s.pop());return s}function gi(t,e,n){return n<=t?n:n-(e-1)}function yi(t,e){const n=[];for(let r=0;r<t;r++)n.push(e+r);return n}function bi(t,e,n,r,s,a,i,o,u){const l=t.length;let c=new Array(l),h=new Array(l),p=new Array(l);if(e.length&&n>0){const u=e[0],l=n+1;c=xi(i,u,l,r,t),h=vi(o,u,l,s,t),p=mi(a,u,l,t)}else for(let e=0;e<l;e++)c[e]=ki(i,r,a,t,e,u),h[e]=Ni(o,s,a,t,e,u),p[e]=wi(a,e,u);return{begin:c,end:h,strides:p}}function xi(t,e,n,r,s){const a=[...s],i=yi(n,e);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=0;else{const i=gi(e,n,s);let o=r[i];t&1<<i&&(o=0),a[s]=o}return a}function vi(t,e,n,r,s){const a=[...s],i=yi(n,e);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=Number.MAX_SAFE_INTEGER;else{const i=gi(e,n,s);let o=r[i];t&1<<i&&(o=Number.MAX_SAFE_INTEGER),a[s]=o}for(let t=0;t<a.length;t++){const e=s[t];a[t]<0&&(a[t]+=e),a[t]=q(0,a[t],s[t])}return a}function wi(t,e,n){let r=t[e];return(n&1<<e||null==r)&&(r=1),r}function ki(t,e,n,r,s,a){let i=e[s];const o=n[s]||1;(t&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[s];return i<0&&(i+=u),i=q(0,i,u-1),i}function Ni(t,e,n,r,s,a){let i=e[s];const o=n[s]||1;(t&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[s];return i<0&&(i+=u),i=o>0?q(0,i,u):q(-1,i,u-1),i}function Ii(t,e,n){let r=n.length;for(let t=0;t<n.length;t++)if(n[t]>1){r=t;break}for(let s=r+1;s<n.length;s++)if(e[s]>0||n[s]!==t[s])return!1;return!0}function Si(t,e){let n=t.length>0?t[t.length-1]:1;for(let r=0;r<t.length-1;r++)n+=t[r]*e[r];return n}function Ci(t,e,n){let r;const s=t.shape.length;let a;return r="number"==typeof e?[e,...new Array(s-1).fill(0)]:e.length<s?e.concat(new Array(s-e.length).fill(0)):e.slice(),r.forEach((t=>{Z(-1!==t,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map(((e,n)=>e>=0?e:(Z(-1===e,(()=>`Negative size values should be exactly -1 but got ${e} for the slice() size at index ${n}.`)),t.shape[n]-r[n]))),[r,a]}class Ti{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class Ei{constructor(){this.classNameMap={}}static getMap(){return null==Ei.instance&&(Ei.instance=new Ei),Ei.instance}static register(t){Ei.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function $i(t){Z(null!=t.className,(()=>"Class being registered does not have the static className property defined.")),Z("string"==typeof t.className,(()=>"className is required to be a string, but got type "+typeof t.className)),Z(t.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Ei.register(t)}const Ai=.1;function Ri(t,e,n){return null==n&&(n=_i()),Di(t,e,((t,e)=>Li(t,e,n)))}function _i(){return 32===Cs.backend.floatPrecision()?.001:Ai}function Di(t,e,n){let r=!0;if((xt(t)||xt(e))&&(r=!1),xt(t)&&xt(e)&&(r=!0),r){const n=t.constructor.name,r=e.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: `+r)}if(Array.isArray(t)&&Array.isArray(e)){const n=Rs(t),r=Rs(e);if(!st(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const s=xt(t)?t:et(t),a=xt(e)?e:et(e);if(s.length!==a.length)throw new Error(`Arrays have different lengths actual: ${s.length} vs expected: ${a.length}.\nActual:   ${s}.\nExpected: ${a}.`);for(let t=0;t<a.length;++t){const e=s[t],r=a[t];if(!n(e,r))throw new Error(`Arrays differ: actual[${t}] = ${e}, expected[${t}] = ${r}.\nActual:   ${s}.\nExpected: ${a}.`)}}function Fi(t,e){t().then((()=>e.fail()),(()=>e()))}function Oi(t,e){const n="string"==typeof e||"number"==typeof e||"boolean"==typeof e?[e]:e;return kt(t)||kt(t[0])||kt(e)||kt(e[0])?Di(t,n,((t,e)=>t==e)):Di(t,e,((t,e)=>Li(t,e,0)))}function Mi(t,e,n){if(null==n&&(n=_i()),!Li(t,e,n))throw new Error(`Numbers differ: actual === ${t}, expected === ${e}`)}function Li(t,e,n){return!isFinite(t)&&!isFinite(e)||!(isNaN(t)||isNaN(e)||Math.abs(t-e)>n)}function zi(t,e,n){for(let r=0;r<t.length;r++)if(t[r]<e||t[r]>n)throw new Error(`Value out of range:${t[r]} low: ${e}, high: ${n}`)}function Bi(t,e){expect(new Float32Array(t)).toEqual(new Float32Array(e))}const Pi="2.7.0";function Wi(){Bt().set("PROD",!0)}function Vi(){Bt().set("DEBUG",!0)}function Ui(){Bt().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function Gi(t){Bt().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function ji(){Cs.disposeVariables()}function Hi(){return Cs}function qi(){return Cs.memory()}function Ki(t){return Cs.profile(t)}function Xi(t,e){return Cs.tidy(t,e)}function Yi(t){ws(t).forEach((t=>t.dispose()))}function Ji(t){return Cs.keep(t)}function Zi(t){return Cs.time(t)}function Qi(t){return Cs.setBackend(t)}function to(){return Cs.ready()}function eo(){return Cs.backendName}function no(t){Cs.removeBackend(t)}function ro(t){return Cs.findBackend(t)}function so(t){return Cs.findBackendFactory(t)}function ao(t,e,n=1){return Cs.registerBackend(t,e,n)}function io(){return Cs.backend}function oo(t,e){Bt().setPlatform(t,e)}os=Gi;const uo=Ls({add_:function(t,e){let n=Fs(t,"a","add"),r=Fs(e,"b","add");[n,r]=bs(n,r);const s={a:n,b:r};return Cs.runKernelFunc(((t,e)=>{const s=t.add(n,r);return e([n,r]),s}),s,null,qt)}}),lo=Ls({floorDiv_:function(t,e){let n=Fs(t,"a","floorDiv"),r=Fs(e,"b","floorDiv");[n,r]=bs(n,r);const s={a:n,b:r};return Cs.runKernelFunc(((t,e)=>{const s=t.floorDiv(n,r);return e([n,r]),s}),s,null,je)}}),co=Ls({div_:function(t,e){let n=Fs(t,"a","div"),r=Fs(e,"b","div");if([n,r]=bs(n,r),"int32"===n.dtype&&"int32"===r.dtype)return lo(n,r);const s={a:n,b:r};return Cs.runKernelFunc(((t,e)=>{const s=t.realDivide(n,r);return e([n,r]),s}),s,null,Fe,{})}}),ho=Ls({mul_:function(t,e){let n=Fs(t,"a","mul"),r=Fs(e,"b","mul");[n,r]=bs(n,r);const s={a:n,b:r};return Cs.runKernelFunc(((t,e)=>{const s=t.multiply(n,r);return e([n,r]),s}),s,null,Tn)}}),po=Ls({sqrt_:function(t){const e=Fs(t,"x","sqrt"),n={x:e};return Cs.runKernelFunc(((t,n)=>{const r=t.sqrt(e);return n([e]),r}),n,null,ur)}}),fo=Ls({square_:function(t){const e=Fs(t,"x","square"),n=[e];return Cs.runKernelFunc(((t,n)=>(n([e]),t.square(e))),{x:e},null,"Square",{},n,[])}}),mo=Ls({zerosLike_:function(t){const e=Fs(t,"x","zerosLike"),n={x:e};return Cs.runKernelFunc((t=>t.zerosLike(e)),n,null,Cr)}});function go(t){return Z(Ct(t),(()=>"The f passed in grad(f) must be a function")),(e,n)=>{const r=Fs(e,"x","tf.grad",null),s=null!=n?Fs(n,"dy","tf.grad"):null;return Cs.tidy((()=>{const{value:e,grads:n}=Cs.gradients((()=>t(r)),[r],s);return null!=s&&Q(e.shape,s.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),ko(n),n[0]}))}}function yo(t){return Z(Ct(t),(()=>"The f passed in grads(f) must be a function")),(e,n)=>{Z(Array.isArray(e),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const r=Os(e,"args","tf.grads",null),s=null!=n?Fs(n,"dy","tf.grads"):null;return Cs.tidy((()=>{const{value:e,grads:n}=Cs.gradients((()=>t(...r)),r,s);return null!=s&&Q(e.shape,s.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),ko(n),n}))}}function bo(t){return Z(Ct(t),(()=>"The f passed in valueAndGrad(f) must be a function")),(e,n)=>{Z(e instanceof us,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),Z(null==n||n instanceof us,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:r,value:s}=Cs.gradients((()=>t(e)),[e],n);return ko(r),{grad:r[0],value:s}}}function xo(t){return Z(Ct(t),(()=>"The f passed in valueAndGrads(f) must be a function")),(e,n)=>{Z(Array.isArray(e)&&e.every((t=>t instanceof us)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),Z(null==n||n instanceof us,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const r=Cs.gradients((()=>t(...e)),e,n);return null!=n&&Q(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),ko(r.grads),r}}function vo(t,e){Z(Ct(t),(()=>"The f passed in variableGrads(f) must be a function")),Z(null==e||Array.isArray(e)&&e.every((t=>t instanceof ls)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=e;if(!n){e=[];for(const t in Cs.registeredVariables)e.push(Cs.registeredVariables[t])}const r=n?e.filter((t=>!t.trainable)):null,s=e.length;Z((e=e.filter((t=>t.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`));const{value:a,grads:i}=Cs.gradients(t,e,null,!0);Z(i.some((t=>null!=t)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),Z(0===a.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`));const o={};return e.forEach(((t,e)=>{null!=i[e]&&(o[t.name]=i[e])})),null!=r&&r.forEach((t=>o[t.name]=null)),{value:a,grads:o}}function wo(t){return Cs.customGrad(t)}function ko(t){if(t.filter((t=>null==t)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}function No(t,e){if((xt(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&xt(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Bs(t,[],[],e)}class Io extends Ti{minimize(t,e=!1,n){const{value:r,grads:s}=this.computeGradients(t,n);if(null!=n){const t=n.map((t=>({name:t.name,tensor:s[t.name]})));this.applyGradients(t)}else this.applyGradients(s);return Yi(s),e?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return vo(t,e)}dispose(){null!=this.iterations_&&Yi(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:No(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for this optimizer class "+this.getClassName())}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(Io,Symbol.hasInstance,{value:t=>null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients});class So extends Io{constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Cs.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=Cs.registeredVariables[e];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:e+"/accum_grad",variable:Xi((()=>mo(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:e+"/accum_var",variable:Xi((()=>mo(r).variable(!1)))});const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const a=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;Xi((()=>{const t=uo(ho(a,this.rho),ho(fo(s),1-this.rho)),e=ho(co(po(uo(i,this.epsilon)),po(uo(a,this.epsilon))),s),n=uo(ho(i,this.rho),ho(fo(e),1-this.rho));a.assign(t),i.assign(n);const o=uo(ho(e,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Yi(this.accumulatedGrads.map((t=>t.variable))),Yi(this.accumulatedUpdates.map((t=>t.variable))))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){const e=(t=await this.extractIterations(t)).length/2;this.accumulatedGrads=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)}))),this.accumulatedUpdates=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}function Co(t,e,n){const r={shape:t,value:e,dtype:n};return Cs.runKernelFunc((r=>r.fill(t,e,n)),{},null,Ve,r)}So.className="Adadelta",$i(So);class To extends Io{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=Cs.registeredVariables[e];if(null==this.accumulatedGrads[n]){const t=!1;this.accumulatedGrads[n]={originalName:e+"/accumulator",variable:Xi((()=>Co(r.shape,this.initialAccumulatorValue).variable(t)))}}const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const a=this.accumulatedGrads[n].variable;Xi((()=>{const t=uo(a,fo(s));a.assign(t);const e=uo(ho(co(s,po(uo(t,Cs.backend.epsilon()))),-this.learningRate),r);r.assign(e)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Yi(this.accumulatedGrads.map((t=>t.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),this.accumulatedGrads=t.map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}To.className="Adagrad",$i(To);const Eo=Ls({pow_:function(t,e){let n=Fs(t,"base","pow"),r=Fs(e,"exp","pow");[n,r]=bs(n,r);const s={a:n,b:r};return Cs.runKernelFunc(((t,e)=>{const s=t.pow(n,r);return e([n,r,s]),s}),s,null,Ln)}}),$o=Ls({sub_:function(t,e){let n=Fs(t,"a","sub"),r=Fs(e,"b","sub");[n,r]=bs(n,r);const s={a:n,b:r};return Cs.runKernelFunc(((t,e)=>{const s=t.subtract(n,r);return e([n,r]),s}),s,null,mr)}});class Ao extends Io{constructor(t,e,n,r=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Xi((()=>{this.accBeta1=No(e).variable(),this.accBeta2=No(n).variable()})),null==r&&(this.epsilon=Cs.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);Xi((()=>{const n=$o(1,this.accBeta1),r=$o(1,this.accBeta2);e.forEach(((e,s)=>{const a=Cs.registeredVariables[e];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:e+"/m",variable:Xi((()=>mo(a).variable(!1)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:e+"/v",variable:Xi((()=>mo(a).variable(!1)))});const i=Array.isArray(t)?t[s].tensor:t[e];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,u=this.accumulatedSecondMoment[s].variable,l=uo(ho(o,this.beta1),ho(i,1-this.beta1)),c=uo(ho(u,this.beta2),ho(fo(i),1-this.beta2)),h=co(l,n),p=co(c,r);o.assign(l),u.assign(c);const d=uo(ho(co(h,uo(po(p),this.epsilon)),-this.learningRate),a);a.assign(d)})),this.accBeta1.assign(ho(this.accBeta1,this.beta1)),this.accBeta2.assign(ho(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Yi(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedSecondMoment&&Yi(this.accumulatedSecondMoment.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),Xi((()=>{this.accBeta1.assign(Eo(this.beta1,this.iterations_+1)),this.accBeta2.assign(Eo(this.beta2,this.iterations_+1))}));const e=t.length/2;this.accumulatedFirstMoment=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)}))),this.accumulatedSecondMoment=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}Ao.className="Adam",$i(Ao);const Ro=Ls({abs_:function(t){const e=Fs(t,"x","abs"),n={x:e};return Cs.runKernelFunc(((t,n)=>(n([e]),"complex64"===e.dtype?t.complexAbs(e):t.abs(e))),n,null,Gt)}});function _o(t,e){const n=t.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,i=t[a]||1;(e[e.length-1-s]||1)>1&&1===i&&r.unshift(a)}return r}function Do(t,e){const n=[];for(let r=0;r<e.length;r++){const s=t[t.length-r-1],a=e.length-r-1,i=e[a];(null==s||1===s&&i>1)&&n.unshift(a)}return n}function Fo(t,e){const n=[],r=Math.max(t.length,e.length);for(let s=0;s<r;s++){let r=t[t.length-s-1];null==r&&(r=1);let a=e[e.length-s-1];if(null==a&&(a=1),1===r)n.unshift(a);else if(1===a)n.unshift(r);else{if(r!==a)throw Error(`Operands could not be broadcast together with shapes ${t} and ${e}.`);n.unshift(r)}}return n}const Oo=Ls({maximum_:function(t,e){let n=Fs(t,"a","maximum"),r=Fs(e,"b","maximum");[n,r]=bs(n,r),"bool"===n.dtype&&(n=Da(n,"int32"),r=Da(r,"int32")),Fo(n.shape,r.shape);const s={a:n,b:r};return Cs.runKernelFunc(((t,e)=>{const s=t.maximum(n,r);return e([n,r]),s}),s,null,gn)}});class Mo extends Io{constructor(t,e,n,r=null,s=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Xi((()=>{this.iteration=No(0).variable(),this.accBeta1=No(e).variable()})),null==r&&(this.epsilon=Cs.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);Xi((()=>{const n=$o(1,this.accBeta1),r=co(-this.learningRate,uo(ho(this.iteration,this.decay),1));e.forEach(((e,s)=>{const a=Cs.registeredVariables[e];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:e+"/m",variable:mo(a).variable(!1)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:e+"/v",variable:mo(a).variable(!1)});const i=Array.isArray(t)?t[s].tensor:t[e];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,u=this.accumulatedWeightedInfNorm[s].variable,l=uo(ho(o,this.beta1),ho(i,1-this.beta1)),c=ho(u,this.beta2),h=Ro(i),p=Oo(c,h);o.assign(l),u.assign(p);const d=uo(ho(co(r,n),co(l,uo(p,this.epsilon))),a);a.assign(d)})),this.iteration.assign(uo(this.iteration,1)),this.accBeta1.assign(ho(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Yi(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedWeightedInfNorm&&Yi(this.accumulatedWeightedInfNorm.map((t=>t.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}Mo.className="Adamax",$i(Mo);class Lo extends Io{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const s=Cs.registeredVariables[e];Xi((()=>{const t=uo(ho(this.c,r),s);s.assign(t)}))})),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=Ji(No(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(0!==(t=await this.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}Lo.className="SGD",$i(Lo);class zo extends Lo{constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=No(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=Cs.registeredVariables[e];if(null==this.accumulations[n]){const t=!1;this.accumulations[n]={originalName:e+"/momentum",variable:Xi((()=>mo(r).variable(t)))}}const s=this.accumulations[n].variable,a=Array.isArray(t)?t[n].tensor:t[e];null!=a&&Xi((()=>{let t;const e=uo(ho(this.m,s),a);t=this.useNesterov?uo(ho(this.c,uo(a,ho(e,this.m))),r):uo(ho(this.c,e),r),s.assign(e),r.assign(t)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Yi(this.accumulations.map((t=>t.variable)))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),this.accumulations=t.map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}zo.className="Momentum",$i(zo);class Bo extends Io{constructor(t,e=.9,n=0,r=null,s=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=Cs.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=Cs.registeredVariables[e],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:e+"/rms",variable:Xi((()=>mo(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:e+"/momentum",variable:Xi((()=>mo(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:e+"/mg",variable:Xi((()=>mo(r).variable(s)))});const a=Array.isArray(t)?t[n].tensor:t[e];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Xi((()=>{const t=uo(ho(i,this.decay),ho(fo(a),1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[n].variable,s=uo(ho(e,this.decay),ho(a,1-this.decay)),u=co(ho(a,this.learningRate),po($o(t,uo(fo(s),this.epsilon)))),l=uo(ho(o,this.momentum),u);i.assign(t),e.assign(s),o.assign(l);const c=$o(r,l);r.assign(c)}else{const t=uo(ho(i,this.decay),ho(fo(a),1-this.decay)),e=uo(ho(o,this.momentum),co(ho(a,this.learningRate),po(uo(t,this.epsilon))));i.assign(t),o.assign(e);const n=$o(r,e);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Yi(this.accumulatedMeanSquares.map((t=>t.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Yi(this.accumulatedMeanGrads.map((t=>t.variable))),null!=this.accumulatedMoments&&Yi(this.accumulatedMoments.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,n=!1;this.accumulatedMeanSquares=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.accumulatedMoments=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}Bo.className="RMSProp",$i(Bo);const Po=Ls({acos_:function(t){const e=Fs(t,"x","acos"),n={x:e};return Cs.runKernelFunc(((t,n)=>{const r=t.acos(e);return n([e]),r}),n,null,jt)}}),Wo=Ls({acosh_:function(t){const e=Fs(t,"x","acosh"),n={x:e};return Cs.runKernelFunc(((t,n)=>{const r=t.acosh(e);return n([e]),r}),n,null,Ht)}}),Vo=Ls({addN_:function(t){Z(Array.isArray(t),(()=>"The argument passed to tf.addN() must be a list of tensors")),Z(t.length>=1,(()=>"Must pass at least one tensor to tf.addN(), but got "+t.length));const e=t.map(((t,e)=>Fs(t,"tensors"+e,"addN"))),n=e[0];e.forEach((t=>{if(t.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),e.forEach((t=>{if(!st(t.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=e;return Cs.runKernelFunc(((t,n)=>{const r=t.addN(e);return n(e),r}),r,null,Kt)}});function Uo(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function Go(t,e,n){const r=t.length+e.length,s=[];let a=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(t[a++]):s.push(e[i++]);return s}function jo(t,e){const n=[],r=t.length;for(let s=0;s<r;s++)-1===e.indexOf(s)&&n.push(t[s]);return[n,e.map((e=>t[e]))]}function Ho(t,e){return Go(t,e.map((t=>1)),e)}function qo(t,e,n){Z(Uo(e,n),(()=>t+" supports only inner-most axes for now. "+`Got axes ${e} and rank-${n} input.`))}function Ko(t,e){if(Uo(t,e))return null;const n=[];for(let r=0;r<e;++r)-1===t.indexOf(r)&&n.push(r);return t.forEach((t=>n.push(t))),n}function Xo(t){return t.map(((t,e)=>[e,t])).sort(((t,e)=>t[1]-e[1])).map((t=>t[0]))}function Yo(t,e){const n=[];for(let r=e-t;r<e;++r)n.push(r);return n}const Jo=Ls({all_:function(t,e=null,n=!1){let r=Fs(t,"x","all","bool");const s={x:r},a={axis:e,keepDims:n};return Cs.runKernelFunc((t=>{const s=pt(e,r.shape);let a=s;const i=Ko(a,r.rank);null!=i&&(r=ni(r,i),a=Yo(a.length,r.rank));const o=t.all(r,a);if(n){const t=Ho(o.shape,s);return Qa(o,t)}return o}),s,null,Xt,a)}}),Zo=Ls({any_:function(t,e=null,n=!1){let r=Fs(t,"x","any","bool");const s={x:r},a={axis:e,keepDims:n};return Cs.runKernelFunc((t=>{const s=pt(e,r.shape);let a=s;const i=Ko(a,r.rank);null!=i&&(r=ni(r,i),a=Yo(a.length,r.rank));const o=t.any(r,a);if(n){const t=Ho(o.shape,s);return Qa(o,t)}return o}),s,null,Yt,a)}}),Qo=Ls({argMax_:function(t,e=0){let n=Fs(t,"x","argMax");const r={x:n},s={axis:e};return Cs.runKernelFunc(((t,r)=>{r([n]);let s=pt(e,n.shape);const a=Ko(s,n.rank);return null!=a&&(n=ni(n,a),s=Yo(s.length,n.rank)),t.argMax(n,s[0])}),r,null,Jt,s)}}),tu=Ls({argMin_:function(t,e=0){let n=Fs(t,"x","argMin");const r={x:n},s={axis:e};return Cs.runKernelFunc(((t,r)=>{r([n]),null==e&&(e=0);let s=pt(e,n.shape);const a=Ko(s,n.rank);return null!=a&&(n=ni(n,a),s=Yo(s.length,n.rank)),t.argMin(n,s[0])}),r,null,Zt,s)}}),eu=Ls({asin_:function(t){const e=Fs(t,"x","asin"),n={x:e};return Cs.runKernelFunc(((t,n)=>{const r=t.asin(e);return n([e]),r}),n,null,Qt)}}),nu=Ls({asinh_:function(t){const e=Fs(t,"x","asinh"),n={x:e};return Cs.runKernelFunc(((t,n)=>{const r=t.asinh(e);return n([e]),r}),n,null,te)}}),ru=Ls({atan_:function(t){const e=Fs(t,"x","atan"),n={x:e};return Cs.runKernelFunc(((t,n)=>{const r=t.atan(e);return n([e]),r}),n,null,ee)}}),su=Ls({atan2_:function(t,e){let n=Fs(t,"a","atan2"),r=Fs(e,"b","atan2");[n,r]=bs(n,r);const s={a:n,b:r};return Cs.runKernelFunc(((t,e)=>{const s=t.atan2(n,r);return e([n,r]),s}),s,null,re)}}),au=Ls({atanh_:function(t){const e=Fs(t,"x","atanh"),n={x:e};return Cs.runKernelFunc(((t,n)=>{const r=t.atanh(e);return n([e]),r}),n,null,ne)}});function iu(t,e,n,r,s="NHWC",a){return lu(t,[...e,t[3]],n,a,r,null,null,bu(s))}function ou(t,e,n,r,s,a,i="channelsLast"){const[o,u]=pu(e);let l;if("channelsLast"===i)l=[o,u,t[3],t[3]];else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);l=[o,u,t[1],t[1]]}return lu(t,l,n,r,s,a,!1,i)}function uu(t,e,n,r,s,a,i="NDHWC"){const[o,u,l]=du(e);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,u,l,t[4],t[4]];else{if("NCDHW"!==i)throw new Error("Unknown dataFormat "+i);h="channelsFirst",c=[o,u,l,t[1],t[1]]}return cu(t,c,n,r,s,!1,h,a)}function lu(t,e,n,r,s,a,i=!1,o="channelsLast"){let[u,l,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[u,l,c,h]=t;else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat "+o);[u,h,l,c]=t}const[p,d,,f]=e,[m,g]=pu(n),[y,b]=pu(r),x=fu(p,y),v=fu(d,b),{padInfo:w,outHeight:k,outWidth:N}=function(t,e,n,r,s,a,i,o,u){let l,c,h;if("number"==typeof t){l={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const s=function(t,e,n,r,s){null==r&&(r=hu(t,e,n));const a=t[1],i=mu((t[0]-e+2*r)/n+1,s);Z(at(i),(()=>`The output # of rows (${i}) must be an integer. Change the stride and/or zero pad parameters`));const o=mu((a-e+2*r)/n+1,s);return Z(at(o),(()=>`The output # of columns (${o}) must be an integer. Change the stride and/or zero pad parameters`)),[i,o]}([e,n],a,r,t,o);c=s[0],h=s[1]}else if("same"===t){c=Math.ceil(e/r),h=Math.ceil(n/s);const t=Math.max(0,(c-1)*r+a-e),o=Math.max(0,(h-1)*s+i-n),u=Math.floor(t/2),p=t-u,d=Math.floor(o/2);l={top:u,bottom:p,left:d,right:o-d,type:"SAME"}}else if("valid"===t)l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-a+1)/r),h=Math.ceil((n-i+1)/s);else{if("object"!=typeof t)throw Error("Unknown padding parameter: "+t);{const p="channelsLast"===u?t[1][0]:t[2][0],d="channelsLast"===u?t[1][1]:t[2][1],f="channelsLast"===u?t[2][0]:t[3][0],m="channelsLast"===u?t[2][1]:t[3][1];l={top:p,bottom:d,left:f,right:m,type:0===p&&0===d&&0===f&&0===m?"VALID":"EXPLICIT"},c=mu((e-a+p+d)/r+1,o),h=mu((n-i+f+m)/s+1,o)}}return{padInfo:l,outHeight:c,outWidth:h}}(s,l,c,m,g,x,v,a,o),I=i?f*h:f;let S;return"channelsFirst"===o?S=[u,I,k,N]:"channelsLast"===o&&(S=[u,k,N,I]),{batchSize:u,dataFormat:o,inHeight:l,inWidth:c,inChannels:h,outHeight:k,outWidth:N,outChannels:I,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:p,filterWidth:d,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:b,inShape:t,outShape:S,filterShape:e}}function cu(t,e,n,r,s,a=!1,i="channelsLast",o){let[u,l,c,h,p]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[u,l,c,h,p]=t;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);[u,p,l,c,h]=t}const[d,f,m,,g]=e,[y,b,x]=du(n),[v,w,k]=du(r),N=fu(d,v),I=fu(f,w),S=fu(m,k),{padInfo:C,outDepth:T,outHeight:E,outWidth:$}=function(t,e,n,r,s,a,i,o,u,l,c){let h,p,d,f;if("number"==typeof t){h={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const a=function(t,e,n,r,s,a){null==s&&(s=hu(t,e,r));const i=t[1],o=t[2],u=mu((t[0]-e+2*s)/r+1,a);Z(at(u),(()=>`The output # of depths (${u}) must be an integer. Change the stride and/or zero pad parameters`));const l=mu((i-e+2*s)/r+1,a);Z(at(l),(()=>`The output # of rows (${l}) must be an integer. Change the stride and/or zero pad parameters`));const c=mu((o-e+2*s)/r+1,a);return Z(at(c),(()=>`The output # of columns (${c}) must be an integer. Change the stride and/or zero pad parameters`)),[u,l,c,1]}([e,n,r,1],o,0,s,t,c);p=a[0],d=a[1],f=a[2]}else if("same"===t){p=Math.ceil(e/s),d=Math.ceil(n/a),f=Math.ceil(r/i);const t=(p-1)*s+o-e,c=(d-1)*a+u-n,m=(f-1)*i+l-r,g=Math.floor(t/2),y=t-g,b=Math.floor(c/2),x=c-b,v=Math.floor(m/2);h={top:b,bottom:x,left:v,right:m-v,front:g,back:y,type:"SAME"}}else{if("valid"!==t)throw Error("Unknown padding parameter: "+t);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((e-o+1)/s),d=Math.ceil((n-u+1)/a),f=Math.ceil((r-l+1)/i)}return{padInfo:h,outDepth:p,outHeight:d,outWidth:f}}(s,l,c,h,y,b,x,N,I,S,o),A=a?g*p:g;let R;return"channelsFirst"===i?R=[u,A,T,E,$]:"channelsLast"===i&&(R=[u,T,E,$,A]),{batchSize:u,dataFormat:i,inDepth:l,inHeight:c,inWidth:h,inChannels:p,outDepth:T,outHeight:E,outWidth:$,outChannels:A,padInfo:C,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:d,filterHeight:f,filterWidth:m,effectiveFilterDepth:N,effectiveFilterHeight:I,effectiveFilterWidth:S,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:t,outShape:R,filterShape:e}}function hu(t,e,n,r=1){const s=fu(e,r);return Math.floor((t[0]*(n-1)-n+s)/2)}function pu(t){return"number"==typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function du(t){return"number"==typeof t?[t,t,t]:t}function fu(t,e){return e<=1?t:t+(t-1)*(e-1)}function mu(t,e){if(!e)return t;switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error("Unknown roundingMode "+e)}}function gu(t){const[e,n,r]=pu(t);return 1===e&&1===n&&1===r}function yu(t,e){return gu(t)||gu(e)}function bu(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error("Unknown dataFormat "+t)}const xu=Ls({avgPool_:function(t,e,n,r,s){const a=Fs(t,"x","avgPool","float32");Z(yu(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=a,o=!1;3===a.rank&&(o=!0,i=Qa(a,[1,a.shape[0],a.shape[1],a.shape[2]])),Z(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),null!=s&&Z(at(r),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const u={x:i},l={filterSize:e,strides:n,pad:r,dimRoundingMode:s};let c=Cs.runKernelFunc(((t,a)=>{const o=ou(i.shape,e,n,1,r,s);return a([i]),1===o.filterWidth&&1===o.filterHeight&&st(o.inShape,o.outShape)?i.clone():t.avgPool(i,o)}),u,null,se,l);return c=Da(c,a.dtype),o?Qa(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),vu=Ls({avgPool3d_:function(t,e,n,r,s,a="NDHWC",i){null==i?i=[1,1,1]:Gi("dilations is deprecated, this field will be gone in v3.0.0.");const o=Fs(t,"x","avgPool3d","float32");let u=o,l=!1;4===o.rank&&(l=!0,u=Qa(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),Z(5===u.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${u.rank}.`)),Z("NDHWC"===a,(()=>"Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of "+a)),Z(yu(n,i),(()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),null!=s&&Z(at(r),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const c={x:u},h={filterSize:e,strides:n,pad:r,dimRoundingMode:s,dataFormat:a,dilations:i};let p=Cs.runKernelFunc(((t,o)=>{null==i&&(i=[1,1,1]);const l=uu(u.shape,e,n,i,r,s,a);return o([u]),t.avgPool3d(u,l)}),c,null,ie,h);return p=Da(p,u.dtype),l?Qa(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});function wu(t,e){const n=t[0].length;t.forEach(((t,e)=>{Z(t.length===n,(()=>`Error in concat${n}D: rank of tensors[${e}] must be the same as the rank of the rest (${n})`))})),Z(e>=0&&e<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=t[0];t.forEach(((t,s)=>{for(let a=0;a<n;a++)Z(a===e||t[a]===r[a],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${t}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function ku(t,e){const n=t[0].slice();for(let r=1;r<t.length;r++)n[e]+=t[r][e];return n}const Nu=Ls({concat_:function(t,e=0){Z(t.length>=1,(()=>"Pass at least one tensor to concat"));let n=Os(t,"tensors","concat");"complex64"===n[0].dtype&&n.forEach((t=>{if("complex64"!==t.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${t.dtype}. `)}));const r=n,s={axis:e};return Cs.runKernelFunc(((t,r)=>{const s=pt(e,n[0].shape)[0],a=ku(n.map((t=>t.shape)),s);if(0===nt(a))return Ps([],a);if(n=n.filter((t=>t.size>0)),1===n.length)return n[0];wu(n.map((t=>t.shape)),s);const i=t.concat(n,s);return r(n),i}),r,null,me,s)}}),Iu=Ls({sigmoid_:function(t){const e=Fs(t,"x","sigmoid"),n={x:e};return Cs.runKernelFunc(((t,n)=>{const r=t.sigmoid(e);return n([r]),r}),n,null,ir)}}),Su=Ls({slice_:function(t,e,n){const r=Fs(t,"x","slice");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},a={begin:e,size:n};return Cs.runKernelFunc(((t,s)=>{const[a,i]=Ci(r,e,n);return pi(r,a,i),s([r]),t.slice(r,a,i)}),s,null,nr,a)}}),Cu=Ls({tanh_:function(t){const e=Fs(t,"x","tanh"),n={x:e};return Cs.runKernelFunc(((t,n)=>{const r=t.tanh(e);return n([r]),r}),n,null,xr)}}),Tu=Ls({basicLSTMCell_:function(t,e,n,r,s,a){const i=Fs(t,"forgetBias","basicLSTMCell"),o=Fs(e,"lstmKernel","basicLSTMCell"),u=Fs(n,"lstmBias","basicLSTMCell"),l=Fs(r,"data","basicLSTMCell"),c=Fs(s,"c","basicLSTMCell"),h=Fs(a,"h","basicLSTMCell"),p=Nu([l,h],1),d=ti(p,o),f=uo(d,u),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=Su(f,[0,0],y),x=Su(f,[0,g],y),v=Su(f,[0,2*g],y),w=Su(f,[0,3*g],y),k=uo(ho(Iu(b),Cu(x)),ho(c,Iu(uo(i,v))));return[k,ho(Cu(k),Iu(w))]}}),Eu=Ls({batchToSpaceND_:function(t,e,n){const r=Fs(t,"x","batchToSpaceND"),s=e.reduce(((t,e)=>t*e));Z(r.rank>=1+e.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${e.length}`)),Z(n.length===e.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`)),Z(r.shape[0]%s==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${s}`));const a={x:r},i={blockShape:e,crops:n};return Cs.runKernelFunc((t=>t.batchToSpaceND(r,e,n)),a,null,le,i)}});function $u(t){return null==t?null:0===t.rank?Qa(t,[t.size]):1===t.rank?t:2===t.rank?Qa(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?Qa(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t}const Au=Ls({batchNorm_:function(t,e,n,r,s,a){null==a&&(a=.001);const i=Fs(t,"x","batchNorm"),o=Fs(e,"mean","batchNorm"),u=Fs(n,"variance","batchNorm");let l,c;null!=s&&(l=Fs(s,"scale","batchNorm")),null!=r&&(c=Fs(r,"offset","batchNorm")),Z(o.rank===u.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Z(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Z(null==l||o.rank===l.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h=function(t){let e;return e=0===t.rank||1===t.rank?Qa(t,[1,1,1,t.size]):2===t.rank?Qa(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?Qa(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e}(i),p={x:h,scale:l,offset:c,mean:o,variance:u},d={varianceEpsilon:a},f=Cs.runKernelFunc(((t,e)=>(e([h,o,u,l]),t.batchNorm(h,$u(o),$u(u),$u(c),$u(l),a))),p,null,He,d);return Qa(f,i.shape)}}),Ru=Ls({batchNorm2d_:function(t,e,n,r,s,a){const i=Fs(t,"x","batchNorm"),o=Fs(e,"mean","batchNorm"),u=Fs(n,"variance","batchNorm");let l,c;return null!=s&&(l=Fs(s,"scale","batchNorm")),null!=r&&(c=Fs(r,"offset","batchNorm")),Z(2===i.rank,(()=>"Error in batchNorm2D: x must be rank 2 but got rank "+i.rank+".")),Z(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),Z(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=l&&Z(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=c&&Z(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),Au(i,o,u,c,l,a)}}),_u=Ls({batchNorm3d_:function(t,e,n,r,s,a){const i=Fs(t,"x","batchNorm"),o=Fs(e,"mean","batchNorm"),u=Fs(n,"variance","batchNorm");let l,c;return null!=s&&(l=Fs(s,"scale","batchNorm")),null!=r&&(c=Fs(r,"offset","batchNorm")),Z(3===i.rank,(()=>"Error in batchNorm3D: x must be rank 3 but got rank "+i.rank+".")),Z(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),Z(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=l&&Z(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=c&&Z(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),Au(i,o,u,c,l,a)}}),Du=Ls({batchNorm4d_:function(t,e,n,r,s,a){const i=Fs(t,"x","batchNorm"),o=Fs(e,"mean","batchNorm"),u=Fs(n,"variance","batchNorm");let l,c;return null!=s&&(l=Fs(s,"scale","batchNorm")),null!=r&&(c=Fs(r,"offset","batchNorm")),Z(4===i.rank,(()=>"Error in batchNorm4D: x must be rank 4 but got rank "+i.rank+".")),Z(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),Z(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=l&&Z(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=c&&Z(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),Au(i,o,u,c,l,a)}}),Fu=Ls({broadcastTo_:function(t,e){let n=Fs(t,"broadcastTo","x");const r=n.shape;if(e.some((t=>!(t>0)||t%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=Qa(n,t)}const s=n.shape,a=Array.from(e);for(let t=e.length-1;t>=0;t--)if(s[t]===e[t])a[t]=1;else if(1!==n.shape[t])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${e}].`);if(0===a.map(((t,e)=>t>1?e:-1)).filter((t=>t>=0)).length)return Fa(n);const i={x:n},o={shape:e,inputShape:s};return Cs.runKernelFunc((t=>t.tile(n,a)),i,null,ce,o)}}),Ou=Ls({ceil_:function(t){const e=Fs(t,"x","ceil"),n={x:e};return Cs.runKernelFunc((t=>t.ceil(e)),n,null,pe)}}),Mu=Ls({clipByValue_:function(t,e,n){const r=Fs(t,"x","clipByValue");Z(e<=n,(()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`));const s={x:r},a={clipValueMin:e,clipValueMax:n};return Cs.runKernelFunc(((t,s)=>{const a=t.clip(r,e,n);return s([r]),a}),s,null,de,a)}}),Lu=Ls({concat1d_:function(t){return Nu(t,0)}}),zu=Ls({concat2d_:function(t,e){return Nu(t,e)}}),Bu=Ls({concat3d_:function(t,e){return Nu(t,e)}}),Pu=Ls({concat4d_:function(t,e){return Nu(t,e)}}),Wu=Ls({conv2d_:function(t,e,n,r,s="NHWC",a=[1,1],i){const o=Fs(t,"x","conv2d"),u=Fs(e,"filter","conv2d");let l=o,c=!1;3===o.rank&&(c=!0,l=Qa(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Z(4===l.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`)),Z(4===u.rank,(()=>"Error in conv2d: filter must be rank 4, but got rank "+u.rank+".")),null!=i&&Z(at(r),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const h="NHWC"===s?l.shape[3]:l.shape[1];Z(h===u.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${u.shape[2]}.`)),Z(yu(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const p={x:l,filter:u},d={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},f=Cs.runKernelFunc(((t,e)=>{const o=bu(s),c=lu(l.shape,u.shape,n,a,r,i,!1,o),h=t.conv2d(l,u,c);return e([l,u]),h}),p,null,ge,d);return c?Qa(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Vu=Ls({conv1d_:function(t,e,n,r,s="NWC",a=1,i){const o=Fs(t,"x","conv1d"),u=Fs(e,"filter","conv1d");let l=o,c=!1;2===o.rank&&(c=!0,l=Qa(o,[1,o.shape[0],o.shape[1]])),Z(3===l.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`)),Z(3===u.rank,(()=>"Error in conv1d: filter must be rank 3, but got rank "+u.rank+".")),null!=i&&Z(at(r),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`)),Z(l.shape[2]===u.shape[1],(()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`)),Z(yu(n,a),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`)),Z("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const h=Qa(u,[1,u.shape[0],u.shape[1],u.shape[2]]),p=Qa(l,[l.shape[0],1,l.shape[1],l.shape[2]]),d=Wu(p,h,[1,n],r,"NHWC",[1,a],i);return Qa(d,c?[d.shape[2],d.shape[3]]:[d.shape[0],d.shape[2],d.shape[3]])}}),Uu=Ls({conv2DBackpropInput_:function(t,e,n,r,s,a="NHWC",i){Z(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let o=t,u=e,l=!1;3===e.rank&&(l=!0,u=Qa(e,[1,e.shape[0],e.shape[1],e.shape[2]]),o=[1,t[0],t[1],t[2]]),Z(4===o.length,(()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+o.length+".")),Z(4===u.rank,(()=>"Error in conv2dDerInput: dy must be rank 4, but got rank "+u.rank)),Z(4===n.rank,(()=>"Error in conv2dDerInput: filter must be rank 4, but got rank "+n.rank));const c="NHWC"===a?o[3]:o[1],h="NHWC"===a?u.shape[3]:u.shape[1];Z(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),Z(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),null!=i&&Z(at(s),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const p={dy:u,filter:n},d={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,inputShape:o},f=Cs.runKernelFunc(((t,e)=>{const l=bu(a),c=lu(o,n.shape,r,1,s,i,!1,l),h=t.conv2dDerInput(u,n,c);return e([u,n]),h}),p,null,be,d);return l?Qa(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Gu=Ls({conv2dTranspose_:function(t,e,n,r,s,a){const i=Fs(t,"x","conv2dTranspose"),o=Fs(e,"filter","conv2dTranspose");return Uu(n,i,o,r,s,"NHWC",a)}}),ju=Ls({conv3d_:function(t,e,n,r,s="NDHWC",a=[1,1,1]){const i=Fs(t,"x","conv3d"),o=Fs(e,"filter","conv3d");let u=i,l=!1;4===i.rank&&(l=!0,u=Qa(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Z(5===u.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`)),Z(5===o.rank,(()=>"Error in conv3d: filter must be rank 5, but got rank "+o.rank+".")),Z(u.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),Z(yu(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),Z("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`));const c={x:u,filter:o},h={strides:n,pad:r,dataFormat:s,dilations:a},p=Cs.runKernelFunc(((t,e)=>{const s=cu(u.shape,o.shape,n,a,r),i=t.conv3d(u,o,s);return e([u,o]),i}),c,null,xe,h);return l?Qa(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),Hu=Ls({conv3DBackpropInput_:function(t,e,n,r,s){Z(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let a=t,i=e,o=!1;4===e.rank&&(o=!0,i=Qa(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),a=[1,t[0],t[1],t[2],t[3]]);const u=a[4],l=i.shape[4];Z(5===a.length,(()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+a.length+".")),Z(5===i.rank,(()=>"Error in conv3dDerInput: dy must be rank 5, but got rank "+i.rank)),Z(5===n.rank,(()=>"Error in conv3dDerInput: filter must be rank 5, but got rank "+n.rank)),Z(u===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`)),Z(l===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},h={pad:s,strides:r,inputShape:a},p=Cs.runKernelFunc((t=>{const e=cu(a,n.shape,r,1,s);return t.conv3dDerInput(i,n,e)}),c,null,we,h);return o?Qa(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),qu=Ls({conv3dTranspose_:function(t,e,n,r,s){const a=Fs(t,"x","conv3dTranspose"),i=Fs(e,"filter","conv3dTranspose");return Hu(n,a,i,r,s)}}),Ku=Ls({cos_:function(t){const e=Fs(t,"x","cos"),n={x:e};return Cs.runKernelFunc(((t,n)=>{const r=t.cos(e);return n([e]),r}),n,null,ke)}}),Xu=Ls({cosh_:function(t){const e=Fs(t,"x","cosh"),n={x:e};return Cs.runKernelFunc(((t,n)=>{const r=t.cosh(e);return n([e]),r}),n,null,Ne)}}),Yu=Ls({cumsum_:function(t,e=0,n=!1,r=!1){const s=Fs(t,"x","cumsum"),a={x:s},i={axis:e,exclusive:n,reverse:r};return Cs.runKernelFunc(((t,a)=>{const i=Ko([e],s.rank);let o=s;null!=i&&(o=ni(s,i));const u=Yo(1,s.rank)[0];let l=t.cumsum(o,u,n,r);if(a([s]),null!=i){const t=Xo(i);l=ni(l,t)}return l}),a,null,Ie,i)}}),Ju=Ls({depthToSpace_:function(t,e,n="NHWC"){const r=Fs(t,"x","depthToSpace"),s="NHWC"===n?r.shape[1]:r.shape[2],a="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];Z(s*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${e}  for depthToSpace with input shape\n    ${r.shape}`)),Z(a*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${e} for depthToSpace with input shape\n        ${r.shape}`)),Z(i%(e*e)==0,(()=>`Dimension size must be evenly divisible by ${e*e} but is ${i} for depthToSpace with input shape ${r.shape}`));const o={x:r},u={blockSize:e,dataFormat:n};return Cs.runKernelFunc((t=>t.depthToSpace(r,e,n)),o,null,Ce,u)}}),Zu=Ls({depthwiseConv2d_:function(t,e,n,r,s="NHWC",a=[1,1],i){const o=Fs(t,"x","depthwiseConv2d"),u=Fs(e,"filter","depthwiseConv2d");let l=o,c=!1;3===o.rank&&(c=!0,l=Qa(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Z(4===l.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`)),Z(4===u.rank,(()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+u.rank+".")),Z(l.shape[3]===u.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),null!=i&&Z(at(r),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const h={x:l,filter:u},p={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},d=Cs.runKernelFunc(((t,e)=>{null==a&&(a=[1,1]),Z(yu(n,a),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const s=lu(l.shape,u.shape,n,a,r,i,!0),o=t.depthwiseConv2D(l,u,s);return e([l,u]),o}),h,null,Te,p);return c?Qa(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Qu=Ls({diag_:function(t){const e=Fs(t,"x","diag"),n={x:e};return Cs.runKernelFunc((n=>{const r=Qa(e,[e.size]),s=n.diag(r),a=[...t.shape,...t.shape];return Qa(s,a)}),n,null,Ae)}}),tl=Ls({dilation2d_:function(t,e,n,r,s=[1,1],a="NHWC"){const i=Fs(t,"x","dilation2d"),o=Fs(e,"filter","dilation2d");Z(3===i.rank||4===i.rank,(()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+i.rank+".")),Z(3===o.rank,(()=>"Error in dilation2d: filter must be rank 3, but got rank "+o.rank+".")),Z("NHWC"===a,(()=>"Error in dilation2d: Only NHWC is currently supported, but got dataFormat of "+a));let u=i,l=!1;3===i.rank&&(u=Qa(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=!0);const c={x:u,filter:o},h={strides:n,pad:r,dilations:s},p=Cs.runKernel(Re,c,h);return l?Qa(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),el=Ls({equal_:function(t,e){let n=Fs(t,"a","equal"),r=Fs(e,"b","equal");[n,r]=bs(n,r),Fo(n.shape,r.shape);const s={a:n,b:r};return Cs.runKernelFunc((t=>t.equal(n,r)),s,null,ze)}}),nl=Ls({where_:function(t,e,n){const r=Fs(e,"a","where"),s=Fs(n,"b","where"),a=Fs(t,"condition","where","bool"),i=Fo(r.shape,s.shape),o=Fu(r,i),u=Fu(s,i);1===a.rank&&Z(a.shape[0]===r.shape[0],(()=>"The first dimension of `a` must match the size of `condition`.")),1!==a.rank&&Q(a.shape,u.shape,"Error in where: ");const l={condition:a,t:o,e:u};return Cs.runKernelFunc(((t,e)=>{const n=t.select(a,o,u);return e([a]),n}),l,null,tr)}}),rl=Ls({divNoNan_:function(t,e){let n=Fs(t,"a","div"),r=Fs(e,"b","div");[n,r]=bs(n,r);const s=co(n,r),a=mo(s),i=el(r,a);return nl(i,a,s)}}),sl=Ls({dot_:function(t,e){const n=Fs(t,"t1","dot"),r=Fs(e,"t2","dot");Z(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];if(Z(s===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`)),1===n.rank&&1===r.rank){const t=Qa(n,[1,-1]),e=Qa(r,[-1,1]),s=ti(t,e);return Qa(s,[])}if(1===n.rank&&2===r.rank){const t=Qa(n,[1,-1]),e=Qa(r,[r.shape[0],r.shape[1]]),s=ti(t,e);return Qa(s,[s.size])}if(2===n.rank&&1===r.rank){const t=Qa(r,[-1,1]),e=ti(n,t);return Qa(e,[e.size])}{const t=Qa(r,[r.shape[0],r.shape[1]]);return ti(n,t)}}}),al=Ls({elu_:function(t){const e=Fs(t,"x","elu"),n={x:e};return Cs.runKernelFunc(((t,n)=>{const r=t.elu(e);return n([r]),r}),n,null,Oe)}}),il=Ls({erf_:function(t){let e=Fs(t,"x","erf");Z("int32"===e.dtype||"float32"===e.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===e.dtype&&(e=Da(e,"float32"));const n={x:e};return Cs.runKernelFunc(((t,n)=>{const r=t.erf(e);return n([e]),r}),n,null,Le)}}),ol=Ls({exp_:function(t){const e=Fs(t,"x","exp"),n={x:e};return Cs.runKernelFunc(((t,n)=>{const r=t.exp(e);return n([r]),r}),n,null,Be)}}),ul=Ls({expandDims_:function(t,e=0){const n=Fs(t,"x","expandDims",null);Z(e<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r=n.shape.slice();return e<0&&(Z(-(n.rank+1)<=e,(()=>`Axis must be in the interval [${-(n.rank+1)}, ${n.rank}]`)),e=n.rank+e+1),r.splice(e,0,1),Qa(n,r)}}),ll=Ls({expm1_:function(t){const e=Fs(t,"x","expm1"),n={x:e};return Cs.runKernelFunc(((t,n)=>{const r=t.expm1(e);return n([e]),r}),n,null,Pe)}}),cl=Ls({tile_:function(t,e){const n=Fs(t,"x","tile",null);Z(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`));const r=[n],s={x:n},a={reps:e};return Cs.runKernelFunc(((t,r)=>{const s=t.tile(n,e);return r([n]),s}),s,null,vr,a,r)}}),hl=Ls({eye_:function(t,e,n,r="float32"){null==e&&(e=t);const s=_a([t,e],r),a=t<=e?t:e;for(let t=0;t<a;++t)s.set(1,t,t);const i=Qa(s.toTensor(),[t,e]);if(null==n)return i;if(1===n.length)return cl(ul(i,0),[n[0],1,1]);if(2===n.length)return cl(ul(ul(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return cl(ul(ul(ul(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),pl=Ls({floor_:function(t){const e=Fs(t,"x","floor"),n={x:e};return Cs.runKernelFunc((t=>t.floor(e)),n,null,Ge)}}),dl=30;function fl(t){return t<=dl?t:Tt(t,Math.floor(Math.sqrt(t)))}function ml(t,e){let n,r=!1;for(t<=dl?(n=t,r=!0):n=Tt(t,Math.floor(Math.sqrt(t)));!r;)n>e||n===t?r=!0:n=Tt(t,n+1);return n}function gl(t,e,n){const r=[],s=t.length;for(let a=0;a<s;a++)a!==e?r.push(t[a]):r.push(n);return r}function yl(t,e,n){const r=t.shape[n],s=[];let a=1,i=1;for(let e=0;e<n;e++)s.push(t.shape[e]),a*=t.shape[e];for(let t=0;t<e.rank;t++)s.push(e.shape[t]);for(let e=n+1;e<t.rank;e++)s.push(t.shape[e]),i*=t.shape[e];return{batchSize:a,sliceSize:i,dimSize:r,outputShape:s}}const bl=Ls({gather_:function(t,e,n=0){const r=Fs(t,"x","gather"),s=Fs(e,"indices","gather","int32"),a={x:r,indices:s},i={axis:n};return Cs.runKernelFunc(((t,e)=>{const a=pt(n,r.shape)[0],i=yl(r,s,a),o=t.gather(r,Qa(s,[s.size]),a);return e([r,s]),Qa(o,i.outputShape)}),a,null,qe,i)}}),xl=Ls({greater_:function(t,e){let n=Fs(t,"a","greater"),r=Fs(e,"b","greater");[n,r]=bs(n,r),Fo(n.shape,r.shape);const s={a:n,b:r};return Cs.runKernelFunc((t=>t.greater(n,r)),s,null,Xe)}}),vl=Ls({greaterEqual_:function(t,e){let n=Fs(t,"a","greaterEqual"),r=Fs(e,"b","greaterEqual");[n,r]=bs(n,r),Fo(n.shape,r.shape);const s={a:n,b:r};return Cs.runKernelFunc(((t,e)=>{const s=t.greaterEqual(n,r);return e([n,r]),s}),s,null,Ye)}}),wl=Ls({imag_:function(t){const e=Fs(t,"input","imag"),n={input:e};return Cs.runKernelFunc((t=>t.imag(e)),n,null,Qe)}}),kl=Ls({isFinite_:function(t){const e=Fs(t,"x","isFinite"),n={x:e};return Cs.runKernelFunc((t=>t.isFinite(e)),n,null,tn)}}),Nl=Ls({isInf_:function(t){const e=Fs(t,"x","isInf"),n={x:e};return Cs.runKernelFunc((t=>t.isInf(e)),n,null,en)}}),Il=Ls({isNaN_:function(t){const e=Fs(t,"x","isNaN"),n={x:e};return Cs.runKernelFunc((t=>t.isNaN(e)),n,null,nn)}}),Sl=Ls({leakyRelu_:function(t,e=.2){const n=Fs(t,"x","leakyRelu");return Oo(ho(No(e),n),n)}}),Cl=Ls({less_:function(t,e){let n=Fs(t,"a","less"),r=Fs(e,"b","less");[n,r]=bs(n,r),Fo(n.shape,r.shape);const s={a:n,b:r};return Cs.runKernelFunc((t=>t.less(n,r)),s,null,rn)}}),Tl=Ls({lessEqual_:function(t,e){let n=Fs(t,"a","lessEqual"),r=Fs(e,"b","lessEqual");[n,r]=bs(n,r),Fo(n.shape,r.shape);const s={a:n,b:r};return Cs.runKernelFunc(((t,e)=>{const s=t.lessEqual(n,r);return e([n,r]),s}),s,null,sn)}});function El(t,e,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:t,stop:e,num:n};return Cs.runKernelFunc((r=>r.linspace(t,e,n)),{},null,an,r)}const $l=Ls({localResponseNormalization_:function(t,e=5,n=1,r=1,s=.5){const a=Fs(t,"x","localResponseNormalization");Z(4===a.rank||3===a.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`)),Z(at(e),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`));let i=a,o=!1;3===a.rank&&(o=!0,i=Qa(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const u={x:i},l={depthRadius:e,bias:n,alpha:r,beta:s},c=Cs.runKernelFunc(((t,a)=>{const o=t.localResponseNormalization4D(i,e,n,r,s);return a([i,o]),o}),u,null,dn,l);return o?Qa(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Al=Ls({log_:function(t){const e=Fs(t,"x","log"),n={x:e};return Cs.runKernelFunc(((t,n)=>{const r=t.log(e);return n([e]),r}),n,null,on)}}),Rl=Ls({log1p_:function(t){const e=Fs(t,"x","log1p"),n={x:e};return Cs.runKernelFunc(((t,n)=>{const r=t.log1p(e);return n([e]),r}),n,null,un)}}),_l=Ls({neg_:function(t){const e=Fs(t,"x","neg"),n={x:e};return Cs.runKernelFunc((t=>t.neg(e)),n,null,En)}}),Dl=Ls({softplus_:function(t){const e=Fs(t,"x","softplus"),n={x:e};return Cs.runKernelFunc(((t,n)=>{const r=t.softplus(e);return n([e]),r}),n,null,or)}}),Fl=Ls({logSigmoid_:function(t){const e=Fs(t,"x","logSigmoid");return wo((t=>({value:_l(Dl(_l(t))),gradFunc:e=>ho(e,Iu(_l(t)))})))(e)}}),Ol=Ls({max_:function(t,e=null,n=!1){const r=Fs(t,"x","max"),s={x:r},a={reductionIndices:e,keepDims:n};return Cs.runKernelFunc(((t,s)=>{let a=pt(e,r.shape);const i=Ko(a,r.rank);let o=r;null!=i&&(o=ni(r,i),a=Yo(a.length,o.rank));const u=t.max(o,a);null!=i&&o.dispose();let l=u;if(n){const t=Ho(l.shape,pt(e,r.shape));l=Qa(l,t),u.dispose()}return s([r,l]),l}),s,null,mn,a)}}),Ml=Ls({sum_:function(t,e=null,n=!1){let r=Fs(t,"x","sum");"bool"===r.dtype&&(r=Da(r,"int32"));const s={x:r},a={axis:e,keepDims:n};return Cs.runKernelFunc(((t,s)=>{s([r]);const a=pt(e,r.shape),i=Ko(a,r.rank);let o=a,u=r;null!=i&&(u=ni(r,i),o=Yo(o.length,r.rank));let l=t.sum(u,o);if(n){const t=Ho(l.shape,a);l=Qa(l,t)}return l}),s,null,lr,a)}}),Ll=Ls({logSoftmax_:function(t,e=-1){const n=Fs(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);const r={logits:n},s={axis:e};return Cs.runKernelFunc(((n,r)=>{const s=Ol(t,e,!0),a=$o(t,s),i=$o(Da(a,"float32"),Al(Ml(ol(a),e,!0)));return r([i]),i}),r,null,pn,s)}}),zl=Ls({logSumExp_:function(t,e=null,n=!1){const r=Fs(t,"x","logSumExp"),s=pt(e,r.shape),a=Ol(r,s,!0),i=$o(r,a),o=ol(i),u=Ml(o,s),l=Al(u),c=uo(Qa(a,l.shape),l);if(n){const t=Ho(c.shape,s);return Qa(c,t)}return c}}),Bl=Ls({logicalAnd_:function(t,e){const n=Fs(t,"a","logicalAnd","bool"),r=Fs(e,"b","logicalAnd","bool");Fo(n.shape,r.shape);const s={a:n,b:r};return Cs.runKernelFunc((t=>t.logicalAnd(n,r)),s,null,ln)}}),Pl=Ls({logicalNot_:function(t){const e=Fs(t,"x","logicalNot","bool"),n={x:e};return Cs.runKernelFunc((t=>t.logicalNot(e)),n,null,cn)}}),Wl=Ls({logicalOr_:function(t,e){const n=Fs(t,"a","logicalOr","bool"),r=Fs(e,"b","logicalOr","bool");Fo(n.shape,r.shape);const s={a:n,b:r};return Cs.runKernelFunc((t=>t.logicalOr(n,r)),s,null,hn)}}),Vl=Ls({logicalXor_:function(t,e){const n=Fs(t,"a","logicalXor","bool"),r=Fs(e,"b","logicalXor","bool");return Fo(n.shape,r.shape),Bl(Wl(t,e),Pl(Bl(t,e)))}}),Ul=Ls({maxPool_:function(t,e,n,r,s){const a=Fs(t,"x","maxPool");let i=a,o=!1;3===a.rank&&(o=!0,i=Qa(a,[1,a.shape[0],a.shape[1],a.shape[2]])),Z(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),Z(yu(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=s&&Z(at(r),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const u={x:i},l={filterSize:e,strides:n,pad:r,dimRoundingMode:s},c=Cs.runKernelFunc(((t,a)=>{const o=ou(i.shape,e,n,1,r,s);let u;return u=1===o.filterWidth&&1===o.filterHeight&&st(o.inShape,o.outShape)?i.clone():t.maxPool(i,o),a([i,u]),u}),u,null,yn,l);return o?Qa(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Gl=Ls({maxPool3d_:function(t,e=[1,1,1],n,r,s,a="NDHWC",i){null==i?i=[1,1,1]:Gi("dilations is deprecated, this field will be gone in v3.0.0.");const o=Fs(t,"x","maxPool3d");let u=o,l=!1;4===o.rank&&(l=!0,u=Qa(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),Z(5===u.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${u.rank}.`)),Z("NDHWC"===a,(()=>"Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of "+a)),Z(yu(n,i),(()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),null!=s&&Z(at(r),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const c={x:u},h={filterSize:e,strides:n,pad:r,dimRoundingMode:s,dataFormat:a,dilations:i},p=Cs.runKernelFunc(((t,o)=>{null==i&&(i=[1,1,1]);const l=uu(u.shape,e,n,i,r,s,a),c=t.maxPool3d(u,l);return o([u,c]),c}),c,null,xn,h);return l?Qa(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),jl=Ls({maxPoolWithArgmax_:function(t,e,n,r,s=!1){const a={x:Fs(t,"x","maxPoolWithArgmax")},i={filterSize:e,strides:n,pad:r,includeBatchInIndex:s},o=Cs.runKernel(wn,a,i);return{result:o[0],indexes:o[1]}}});function Hl(t,e="float32"){if("complex64"===e){const e=Hl(t,"float32"),n=Hl(t,"float32");return zs(e,n)}const n=_t(nt(t),e);return Cs.makeTensor(n,t,e)}function ql(t,e="float32"){if("complex64"===e){const e=ql(t,"float32"),n=Hl(t,"float32");return zs(e,n)}const n=Rt(nt(t),e);return Cs.makeTensor(n,t,e)}const Kl=Ls({mean_:function(t,e=null,n=!1){const r=Fs(t,"x","mean"),s=pt(e,r.shape),a=nt(jo(r.shape,s)[1]),i={x:r},o={axis:e,keepDims:n},u=()=>{const t=No(a),s=t.dtype===r.dtype?r:Da(r,t.dtype),i=co(s,t);return Ml(i,e,n)};return wo((t=>({value:Cs.runKernelFunc(u,i,null,kn,o),gradFunc:e=>{const n=t.shape.slice();s.forEach((t=>{n[t]=1}));const r=Qa(e,n);return co(ho(r,ql(t.shape,"float32")),a)}})))(r)}}),Xl=Ls({min_:function(t,e=null,n=!1){const r=Fs(t,"x","min"),s={x:r},a={axis:e,keepDims:n};return Cs.runKernelFunc(((t,s)=>{const a=pt(e,r.shape);let i=a;const o=Ko(i,r.rank);let u=r;null!=o&&(u=ni(r,o),i=Yo(i.length,r.rank));const l=t.min(u,i);null!=o&&u.dispose();let c=l;if(n){const t=Ho(c.shape,a);c=Qa(l,t),l.dispose()}return s([r,c]),c}),s,null,Nn,a)}}),Yl=Ls({minimum_:function(t,e){let n=Fs(t,"a","minimum"),r=Fs(e,"b","minimum");[n,r]=bs(n,r),"bool"===n.dtype&&(n=Da(n,"int32"),r=Da(r,"int32")),Fo(n.shape,r.shape);const s={a:n,b:r};return Cs.runKernelFunc(((t,e)=>{const s=t.minimum(n,r);return e([n,r]),s}),s,null,In)}}),Jl=Ls({mirrorPad_:function(t,e,n){Z("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=Fs(t,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");Z(e.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${e.length}.`));const s="reflect"===n?1:0;for(let t=0;t<r.rank;t++)Z(2===e[t].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Z(e[t][0]>=0&&e[t][0]<=r.shape[t]-s&&e[t][1]>=0&&e[t][1]<=r.shape[t]-s,(()=>`Padding in dimension ${t} cannot be greater than or equal to ${r.shape[t]-s} or less than 0 for input of shape `+r.shape));const a={paddings:e,mode:n},i={x:r};return Cs.runKernel(Sn,i,a)}}),Zl=Ls({mod_:function(t,e){let n=Fs(t,"a","mod"),r=Fs(e,"b","mod");[n,r]=bs(n,r);const s={a:n,b:r};return Cs.runKernelFunc(((t,e)=>{const s=t.mod(n,r);return e([n,r]),s}),s,null,Cn)}}),Ql=Ls({moments_:function(t,e=null,n=!1){const r=pt(e,(t=Fs(t,"x","moments")).shape),s=Kl(t,r,n);let a=s.shape;n||(a=Ho(s.shape,r));const i=fo($o(Da(t,"float32"),Qa(s,a)));return{mean:s,variance:Kl(i,r,n)}}}),tc=Ls({multiRNNCell_:function(t,e,n,r){const s=Fs(e,"data","multiRNNCell"),a=Os(n,"c","multiRNNCell"),i=Os(r,"h","multiRNNCell");let o=s;const u=[];for(let e=0;e<t.length;e++){const n=t[e](o,a[e],i[e]);u.push(n[0]),u.push(n[1]),o=n[1]}const l=[],c=[];for(let t=0;t<u.length;t+=2)l.push(u[t]),c.push(u[t+1]);return[l,c]}}),ec=Ls({multinomial_:function(t,e,n,r=!1){const s=Fs(t,"logits","multinomial"),a=s.size,i=s.rank;if(a<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+a+".");if(i>2)throw new Error("Rank of probabilities must be 1 or 2, but is "+i);n=n||Math.random();const o=1===i?Qa(s,[1,-1]):s,u=Cs.runKernelFunc((t=>t.multinomial(o,r,e,n)),{logits2D:o});return 1===i?Qa(u,[u.size]):u}}),nc=Ls({notEqual_:function(t,e){let n=Fs(t,"a","notEqual"),r=Fs(e,"b","notEqual");[n,r]=bs(n,r),Fo(n.shape,r.shape);const s={a:n,b:r};return Cs.runKernelFunc((t=>t.notEqual(n,r)),s,null,$n)}}),rc=Ls({real_:function(t){const e=Fs(t,"input","real"),n={input:e};return Cs.runKernelFunc((t=>t.real(e)),n,null,Wn)}}),sc=Ls({onesLike_:function(t){const e=Fs(t,"x","onesLike"),n={x:e};return Cs.runKernelFunc(((t,n)=>{if("complex64"===e.dtype){const t=sc(rc(e)),n=mo(wl(e));return zs(t,n)}return t.onesLike(e)}),n,null,Dn)}}),ac=Ls({outerProduct_:function(t,e){const n=Fs(t,"v1","outerProduct"),r=Fs(e,"v2","outerProduct");Z(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const s=Qa(n,[-1,1]),a=Qa(r,[1,-1]);return ti(s,a)}}),ic=Ls({pad_:function(t,e,n=0){const r=Fs(t,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:e,constantValue:n},a={x:r};return Cs.runKernelFunc(((t,s)=>(s([r]),t.pad(r,e,n))),a,null,On,s)}}),oc=Ls({pad1d_:function(t,e,n=0){return Z(2===e.length,(()=>"Invalid number of paddings. Must be length of 2.")),ic(t,[e],n)}}),uc=Ls({pad2d_:function(t,e,n=0){return Z(2===e.length&&2===e[0].length&&2===e[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),ic(t,e,n)}}),lc=Ls({pad3d_:function(t,e,n=0){return Z(3===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),ic(t,e,n)}}),cc=Ls({pad4d_:function(t,e,n=0){return Z(4===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length&&2===e[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),ic(t,e,n)}}),hc=Ls({spaceToBatchND_:function(t,e,n){const r=Fs(t,"x","spaceToBatchND");Z(r.rank>=1+e.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${e.length}`)),Z(n.length===e.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`)),Z(r.shape.reduce(((t,r,s)=>s>0&&s<=e.length?t&&(r+n[s-1][0]+n[s-1][1])%e[s-1]==0:t),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`));const s={x:r},a={blockShape:e,paddings:n};return Cs.runKernelFunc((t=>t.spaceToBatchND(r,e,n)),s,null,cr,a)}}),pc=Ls({pool_:function(t,e,n,r,s,a){null==s&&(s=[1,1]),null==a&&(a=1),0===r&&(r="valid");const i=Fs(t,"x","maxPool");let o=i,u=!1;3===i.rank&&(u=!0,o=Qa(i,[1,i.shape[0],i.shape[1],i.shape[2]])),Z(yu(a,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`));const l=ou(o.shape,e,a,s,r),c=[l.dilationHeight,l.dilationWidth];let h;h="same"===r?function(t,e){const n=t.map(((t,n)=>t+(t-1)*(e[n]-1))).map((t=>t-1)),r=n.map((t=>Math.floor(t/2))),s=n.map(((t,e)=>t-r[e]));return n.map(((t,e)=>[r[e],s[e]]))}([l.filterHeight,l.filterWidth],c):[[0,0],[0,0]];const p=1===c[0]&&1===c[1],[d,f]=function(t,e,n){const r=n.map((t=>t[0])),s=n.map((t=>t[1])),a=t.concat(r,s),i=e.map(((t,e)=>(t-a[e]%t)%t)),o=s.map(((t,e)=>t+i[e]));return[e.map(((t,e)=>[r[e],o[e]])),e.map(((t,e)=>[0,i[e]]))]}([l.inHeight,l.inWidth],c,h),m=p?r:"valid",g=p?o:hc(o,c,d),y=("avg"===n?()=>xu(g,e,a,m):()=>Ul(g,e,a,m))(),b=p?y:Eu(y,c,f);return u?Qa(b,[b.shape[1],b.shape[2],b.shape[3]]):b}}),dc=Ls({prelu_:function(t,e){const n=Fs(t,"x","prelu"),r=Fs(e,"alpha","prelu"),s={x:n,alpha:r};return Cs.runKernelFunc(((t,e)=>{const s=t.prelu(n,r);return e([n,r]),s}),s,null,zn)}}),fc=Ls({prod_:function(t,e=null,n=!1){let r=Fs(t,"x","prod");"bool"===r.dtype&&(r=Da(r,"int32"));const s={x:r},a={axis:e,keepDims:n};return Cs.runKernelFunc((t=>{const s=pt(e,r.shape),a=Ko(s,r.rank);let i=s,o=r;null!=a&&(o=ni(r,a),i=Yo(i.length,r.rank));let u=t.prod(o,i);if(n){const t=Ho(u.shape,s);u=Qa(u,t)}return u}),s,null,Bn,a)}}),mc=Ls({rand_:function(t,e,n){const r=nt(t);let s=null;if(null==n||"float32"===n)s=new Float32Array(r);else if("int32"===n)s=new Int32Array(r);else{if("bool"!==n)throw new Error("Unknown data type "+n);s=new Uint8Array(r)}for(let t=0;t<r;t++)s[t]=e();return Cs.makeTensor(s,t,n)}});var gc=n(6377);class yc{constructor(t,e,n,r,s){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=gc.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);t=this.mean+this.stdDev*r*i,e=this.mean+this.stdDev*s*i,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class bc{constructor(t,e,n,r){this.alpha=t,this.beta=1/e,this.dtype=n;const s=r||Math.random();this.randu=gc.alea(s.toString()),this.randn=new yc(0,1,n,!1,this.randu()),this.d=t<1?t+2/3:t-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let t,e,n,r,s,a;for(;;){do{r=this.randn.nextValue(),a=1+this.c*r}while(a<=0);if(a*=a*a,t=r*r,e=1-.331*t*t,n=.5*t+this.d*(1-a+Math.log(a)),s=this.randu(),s<e||Math.log(s)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(t){return"float32"===this.dtype?t:Math.round(t)}}class xc{constructor(t=0,e=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=gc.alea(r)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const vc=Ls({randomGamma_:function(t,e,n=1,r="float32",s){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error("Unsupported data type "+r);const a=new bc(e,n,r,s),i=_a(t,r);for(let t=0;t<i.values.length;t++)i.values[t]=a.nextValue();return i.toTensor()}}),wc=Ls({randomNormal_:function(t,e=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type "+r);const a=new yc(e,n,r,!1,s),i=_a(t,r);for(let t=0;t<i.values.length;t++)i.values[t]=a.nextValue();return i.toTensor()}}),kc=Ls({randomUniform_:function(t,e=0,n=1,r="float32",s){const a=_a(t,r),i=new xc(e,n,null,s);for(let t=0;t<a.values.length;t++)a.values[t]=i.nextValue();return a.toTensor()}});function Nc(t,e){tt(t);const n=Rs(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Bs(t,null,n,e)}function Ic(t,e,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:t,stop:e,step:n,dtype:r};return Cs.runKernelFunc((()=>{if(t===e||t<e&&n<0||e<t&&n>1)return Hl([0],r);const s=_t(Math.abs(Math.ceil((e-t)/n)),r);e<t&&1===n&&(n=-1),s[0]=t;for(let t=1;t<s.length;t++)s[t]=s[t-1]+n;return Nc(s,r)}),{},null,Pn,s)}const Sc=Ls({reciprocal_:function(t){const e=Fs(t,"x","reciprocal"),n={x:e};return Cs.runKernelFunc(((t,n)=>{const r=t.reciprocal(e);return n([e]),r}),n,null,Vn)}}),Cc=Ls({relu_:function(t){const e=Fs(t,"x","relu"),n={x:e};return Cs.runKernelFunc(((t,n)=>(n([e]),"bool"===e.dtype?Da(e,"int32"):t.relu(e))),n,null,Un)}}),Tc=Ls({relu6_:function(t){const e=Fs(t,"x","relu6"),n={x:e};return Cs.runKernelFunc(((t,n)=>(n([e]),"bool"===e.dtype?Da(e,"int32"):t.relu6(e))),n,null,Xn)}}),Ec=Ls({reverse_:function(t,e){const n=Fs(t,"x","reverse"),r={x:n},s={dims:e};return Cs.runKernelFunc((t=>{const r=pt(e,n.shape);if(0===n.rank)return Fa(n);const s=t.reverse(n,r);return Qa(s,n.shape)}),r,null,Yn,s)}}),$c=Ls({reverse1d_:function(t){const e=Fs(t,"x","reverse");return Z(1===e.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`)),Ec(e,0)}}),Ac=Ls({reverse2d_:function(t,e){const n=Fs(t,"x","reverse");return Z(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),Ec(n,e)}}),Rc=Ls({reverse3d_:function(t,e){const n=Fs(t,"x","reverse");return Z(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),Ec(n,e)}}),_c=Ls({reverse4d_:function(t,e){const n=Fs(t,"x","reverse");return Z(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),Ec(n,e)}}),Dc=Ls({round_:function(t){const e=Fs(t,"x","round"),n={x:e};return Cs.runKernelFunc((t=>t.round(e)),n,null,Jn)}}),Fc=Ls({rsqrt_:function(t){const e=Fs(t,"x","rsqrt"),n={x:e};return Cs.runKernelFunc(((t,n)=>{const r=t.rsqrt(e);return n([e]),r}),n,null,Zn)}}),Oc=Ls({selu_:function(t){const e=Fs(t,"x","selu"),n={x:e};return Cs.runKernelFunc(((t,n)=>{const r=t.selu(e);return n([e]),r}),n,null,er)}}),Mc=Ls({separableConv2d_:function(t,e,n,r,s,a=[1,1],i="NHWC"){const o=Fs(t,"x","separableConv2d"),u=Fs(e,"depthwiseFilter","separableConv2d"),l=Fs(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=Qa(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");Z(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),Z(4===u.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`)),Z(4===l.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`)),Z(1===l.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`)),Z(1===l.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`));const p=u.shape[2],d=u.shape[3];Z(l.shape[2]===p*d,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*d}, but got ${l.shape[2]}.`));const f=Zu(c,u,r,s,i,a),m=Wu(f,l,1,"valid",i);return h?Qa(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),Lc=async function(t,e){const n=Fs(t,"x","setdiff1d"),r=Fs(e,"y","setdiff1d");Z(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),Z(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),Z(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const s=await n.data(),a=await r.data(),i=new Set(a);let o=0;for(let t=0;t<s.length;t++)i.has(s[t])||o++;const u=new ss([o],n.dtype),l=new ss([o],"int32");for(let t=0,e=0;t<s.length;t++)i.has(s[t])||(u.values[e]=s[t],l.values[e]=t,e++);return[u.toTensor(),l.toTensor()]},zc=Ls({sign_:function(t){const e=Fs(t,"x","sign"),n={x:e};return Cs.runKernelFunc((t=>t.sign(e)),n,null,ar)}}),Bc=Ls({sin_:function(t){const e=Fs(t,"x","sin"),n={x:e};return Cs.runKernelFunc(((t,n)=>{const r=t.sin(e);return n([e]),r}),n,null,rr)}}),Pc=Ls({sinh_:function(t){const e=Fs(t,"x","sinh"),n={x:e};return Cs.runKernelFunc(((t,n)=>{const r=t.sinh(e);return n([e]),r}),n,null,sr)}}),Wc=Ls({slice1d_:function(t,e,n){const r=Fs(t,"x","slice1d");return Z(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),Su(r,[e],[n])}}),Vc=Ls({slice2d_:function(t,e,n){const r=Fs(t,"x","slice2d");return Z(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),Su(r,e,n)}}),Uc=Ls({slice3d_:function(t,e,n){const r=Fs(t,"x","slice3d");return Z(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),Su(r,e,n)}}),Gc=Ls({slice4d_:function(t,e,n){const r=Fs(t,"x","slice4d");return Z(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),Su(r,e,n)}}),jc=Ls({softmax_:function(t,e=-1){const n=Fs(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const r={logits:n},s={dim:e};return Cs.runKernelFunc(((t,r)=>{const s=t.softmax(n,e);return r([s]),s}),r,null,pr,s)}}),Hc=Ls({fft_:function(t){Z("complex64"===t.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`));const e={input:t};return Cs.runKernelFunc((e=>{const n=t.shape[t.shape.length-1],r=t.size/n,s=t.as2D(r,n);return e.fft(s).reshape(t.shape)}),e,null,We)}}),qc=Ls({ifft_:function(t){Z("complex64"===t.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`));const e={input:t};return Cs.runKernelFunc((e=>{const n=t.shape[t.shape.length-1],r=t.size/n,s=Qa(t,[r,n]),a=e.ifft(s);return Qa(a,t.shape)}),e,null,Ze)}}),Kc=Ls({irfft_:function(t){const e=t.shape[t.shape.length-1],n=t.size/e;let r;if(e<=2){const s=Qa(t,[n,e]);r=qc(s)}else{const s=[n,2*(e-1)],a=Qa(rc(t),[n,e]),i=Qa(wl(t),[n,e]),o=Ec(Su(a,[0,1],[n,e-2]),1),u=ho(Ec(Su(i,[0,1],[n,e-2]),1),No(-1)),l=Nu([a,o],1),c=Nu([i,u],1),h=Qa(zs(l,c),[s[0],s[1]]);r=qc(h)}if(r=rc(r),3===t.rank&&0!==t.shape[0]){const e=r,n=t.shape[0];r=Qa(r,[n,r.shape[0]/n,r.shape[1]]),e.dispose()}return r}});function Xc(t,e,n=0){let r=[];if("number"==typeof e)Z(t.shape[n]%e==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(e).fill(t.shape[n]/e);else{Z(e.reduce(((t,e)=>(-1===e&&(t+=1),t)),0)<=1,(()=>"There should be only one negative value in split array."));const s=e.indexOf(-1);if(-1!==s){const r=e.reduce(((t,e)=>e>0?t+e:t));e[s]=t.shape[n]-r}Z(t.shape[n]===e.reduce(((t,e)=>t+e)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=e}return r}const Yc=Ls({split_:function(t,e,n=0){const r=Fs(t,"x","split"),s={x:r},a={numOrSizeSplits:e,axis:n};return Cs.runKernelFunc(((t,s)=>{const a=pt(n,r.shape)[0],i=Xc(r,e,a);return t.split(r,i,a)}),s,null,hr,a)}}),Jc=Ls({rfft_:function(t,e){Z("float32"===t.dtype,(()=>"The dtype for rfft() must be real value but got "+t.dtype));let n=t.shape[t.shape.length-1];const r=t.size/n;let s;if(null!=e&&e<n){const r=t.shape.map((t=>0)),a=t.shape.map((t=>t));a[t.shape.length-1]=e,s=Su(t,r,a),n=e}else if(null!=e&&e>n){const r=t.shape.map((t=>t));r[t.shape.length-1]=e-n,s=Nu([t,Hl(r)],t.shape.length-1),n=e}else s=t;const a=mo(s),i=Qa(zs(s,a),[r,n]),o=Hc(i),u=Math.floor(n/2)+1,l=rc(o),c=wl(o),h=Yc(l,[u,n-u],l.shape.length-1),p=Yc(c,[u,n-u],c.shape.length-1),d=s.shape.slice();return d[s.shape.length-1]=u,Qa(zs(h[0],p[0]),d)}}),Zc=Ls({squaredDifference_:function(t,e){let n=Fs(t,"a","squaredDifference"),r=Fs(e,"b","squaredDifference");[n,r]=bs(n,r),Fo(n.shape,r.shape);const s={a:n,b:r};return Cs.runKernelFunc(((t,e)=>{const s=t.squaredDifference(n,r);return e([n,r]),s}),s,null,dr,{})}}),Qc=Ls({squeeze_:function(t,e){const n=Fs(t,"x","squeeze");return Qa(n,dt(n.shape,e).newShape)}}),th=Ls({stack_:function(t,e=0){const n=Os(t,"tensors","stack");if(Z(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),1===n.length)return ul(n[0],e);const r=n[0].rank,s=n[0].shape,a=n[0].dtype;Z(e<=r,(()=>"Axis must be <= rank of the tensor")),n.forEach((t=>{Q(s,t.shape,"All tensors passed to stack must have matching shapes"),Z(a===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=n.map((t=>ul(t,e)));return Nu(i,e)}}),eh=Ls({step_:function(t,e=0){const n=Fs(t,"x","step"),r={x:n},s={alpha:e};return Cs.runKernelFunc((t=>t.step(n,e)),r,null,Tr,s)}}),nh=Ls({stridedSlice_:function(t,e,n,r,s=0,a=0,i=0,o=0,u=0){let l=Fs(t,"x","stridedSlice");const c={x:l},h={begin:e,end:n,strides:r,beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};return Cs.runKernelFunc((t=>{null==r&&(r=new Array(e.length));const c=di(i);if(c.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==i&&0!==o)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==i&&0!==u)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const h=l.rank-e.length,p=di(o),d=l.shape.slice();p.forEach((t=>{e[t]=0,n[t]=1,d.splice(t,0,1)})),l=Qa(l,d);const{begin:f,end:m,strides:g}=bi(l.shape,c,h,e,n,r,s,a,i);e=f,n=m,r=g;const y=di(u);y.forEach((t=>{n[t]=e[t]+1,r[t]=1}));const b=fi(e,n,r),x=b.filter(((t,e)=>-1===y.indexOf(e)));if(r.every((t=>1===t)))return Qa(Su(l,e,b),x);const v=t.stridedSlice(l,e,n,r);return Qa(v,x)}),c,null,yr,h)}}),rh=Ls({tan_:function(t){const e=Fs(t,"x","tan"),n={x:e};return Cs.runKernelFunc(((t,n)=>{const r=t.tan(e);return n([e]),r}),n,null,br)}});function sh(t,e,n){if(tt(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Rs(t,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Bs(t,e,r,n)}function ah(t,e,n){if(tt(t),null!=e&&4!==e.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Rs(t,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Bs(t,e,r,n)}function ih(t,e,n){if(tt(t),null!=e&&5!==e.length)throw new Error("tensor5d() requires shape to have five numbers");const r=Rs(t,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Bs(t,e,r,n)}function oh(t,e,n){if(tt(t),null!=e&&6!==e.length)throw new Error("tensor6d() requires shape to have six numbers");const r=Rs(t,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Bs(t,e=e||r,r,n)}const uh=Ls({topk_:function(t,e=1,n=!0){const r=Fs(t,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(e>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got `+e);const a={x:r},i={k:e,sorted:n},[o,u]=Cs.runKernelFunc((t=>t.topk(r,e,n)),a,null,wr,i);return{values:o,indices:u}}}),lh=Ls({truncatedNormal_:function(t,e=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new yc(e,n,r,!0,s),i=_a(t,r);for(let t=0;t<i.values.length;t++)i.values[t]=a.nextValue();return i.toTensor()}}),ch=Ls({unique_:function(t,e=0){const n=Fs(t,"x","unique",null);Z(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},s={axis:e},[a,i]=Cs.runKernel(Nr,r,s);return{values:a,indices:i}}}),hh=Ls({unsortedSegmentSum_:function(t,e,n){const r=Fs(t,"x","unsortedSegmentSum"),s=Fs(e,"segmentIds","unsortedSegmentSum","int32");Z(at(n),(()=>"numSegments must be of dtype int"));const a={x:r,segmentIds:s},i={numSegments:n};return Cs.runKernelFunc(((t,e)=>{const a=t.unsortedSegmentSum(r,s,n);return e([s]),a}),a,null,Sr,i)}}),ph=Ls({unstack_:function(t,e=0){const n=Fs(t,"x","unstack");Z(e>=-n.shape.length&&e<n.shape.length,(()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`)),e<0&&(e+=n.shape.length);const r={value:n},s={axis:e};return Cs.runKernelFunc((t=>t.unstack(n,e)),r,null,Ir,s)}});function dh(t,e=!0,n,r){return Cs.makeVariable(t,e,n,r)}function fh(t,e){const n=[];for(let t=0;t<e.length;t++)e[t]&&n.push(t);const r=_a(t,"int32"),s=_a([n.length,t.length],"int32");for(let e=0;e<n.length;e++){const a=r.indexToLoc(n[e]),i=e*t.length;s.values.set(a,i)}return s.toTensor()}const mh=async function(t){const e=Fs(t,"condition","whereAsync","bool"),n=await e.data(),r=fh(e.shape,n);return t!==e&&e.dispose(),r},gh=async function(t,e,n){const r=Fs(t,"tensor","boolMask"),s=Fs(e,"mask","boolMask","bool"),a=null==n?0:n,i=s.rank,o=r.shape;Z(i>0,(()=>"mask cannot be scalar")),Q(o.slice(a,a+i),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let t=a;t<a+i;t++)u*=o[t];const l=o.slice(0,a).concat([u],o.slice(a+i)),c=Qa(r,l),h=Qa(s,[-1]),p=await mh(h),d=Qc(p,[1]),f=bl(c,d,a);return t!==r&&r.dispose(),e!==s&&s.dispose(),d.dispose(),c.dispose(),h.dispose(),p.dispose(),f},yh=Ls({equalStrict_:function(t,e){Gi("strict variants of ops have been deprecated and will be removed in future");const n=Fs(t,"a","equalStrict"),r=Fs(e,"b","equalStrict");return Q(n.shape,r.shape,"Error in equalStrict: "),el(n,r)}}),bh=Ls({greaterEqualStrict_:function(t,e){Gi("strict variants of ops have been deprecated and will be removed in future");const n=Fs(t,"a","greaterEqualStrict"),r=Fs(e,"b","greaterEqualStrict");return Q(n.shape,r.shape,"Error in greaterEqualStrict: "),vl(n,r)}}),xh=Ls({greaterStrict_:function(t,e){Gi("strict variants of ops have been deprecated and will be removed in future");const n=Fs(t,"a","greaterStrict"),r=Fs(e,"b","greaterStrict");return Q(n.shape,r.shape,"Error in greaterStrict: "),xl(n,r)}}),vh=Ls({lessEqualStrict_:function(t,e){Gi("strict variants of ops have been deprecated and will be removed in future");const n=Fs(t,"a","lessEqualStrict"),r=Fs(e,"b","lessEqualStrict");return Q(n.shape,r.shape,"Error in lessEqualStrict: "),Tl(n,r)}}),wh=Ls({lessStrict_:function(t,e){Gi("strict variants of ops have been deprecated and will be removed in future");const n=Fs(t,"a","lessStrict"),r=Fs(e,"b","lessStrict");return Q(n.shape,r.shape,"Error in lessStrict: "),Cl(n,r)}}),kh=Ls({notEqualStrict_:function(t,e){Gi("strict variants of ops have been deprecated and will be removed in future");const n=Fs(t,"a","notEqualStrict"),r=Fs(e,"b","notEqualStrict");return Q(n.shape,r.shape,"Error in notEqualStrict: "),nc(n,r)}}),Nh=Ls({addStrict_:function(t,e){Gi("strict variants of ops have been deprecated and will be removed in future");const n=Fs(t,"a","addStrict"),r=Fs(e,"b","addStrict");return Q(n.shape,r.shape,"Error in addStrict: "),uo(n,r)}}),Ih=Ls({divStrict_:function(t,e){Gi("strict variants of ops have been deprecated and will be removed in future");const n=Fs(t,"a","div"),r=Fs(e,"b","div");return Q(n.shape,r.shape,"Error in divideStrict: "),co(n,r)}}),Sh=Ls({maximumStrict_:function(t,e){Gi("strict variants of ops have been deprecated and will be removed in future");const n=Fs(t,"a","maximumStrict"),r=Fs(e,"b","maximumStrict");return Q(n.shape,r.shape,"Error in maximumStrict: "),Oo(n,r)}}),Ch=Ls({minimumStrict_:function(t,e){Gi("strict variants of ops have been deprecated and will be removed in future");const n=Fs(t,"a","minimumStrict"),r=Fs(e,"b","minimumStrict");return Q(n.shape,r.shape,"Error in minimumStrict: "),Yl(n,r)}}),Th=Ls({modStrict_:function(t,e){Gi("strict variants of ops have been deprecated and will be removed in future");const n=Fs(t,"a","modStrict"),r=Fs(e,"b","modStrict");return Q(n.shape,r.shape,"Error in modStrict: "),Zl(n,r)}}),Eh=Ls({mulStrict_:function(t,e){Gi("strict variants of ops have been deprecated and will be removed in future");const n=Fs(t,"a","mul"),r=Fs(e,"b","mul");return Q(n.shape,r.shape,"Error in multiplyStrict: "),ho(n,r)}}),$h=Ls({powStrict_:function(t,e){return Gi("strict variants of ops have been deprecated and will be removed in future"),Q(t.shape,e.shape,"Error in powStrict: "),Eo(t,e)}}),Ah=Ls({squaredDifferenceStrict_:function(t,e){Gi("strict variants of ops have been deprecated and will be removed in future");const n=Fs(t,"a","squaredDifferenceStrict"),r=Fs(e,"b","squaredDifferenceStrict");return Q(n.shape,r.shape,"Error in squaredDifferenceStrict: "),Zc(n,r)}}),Rh=Ls({subStrict_:function(t,e){Gi("strict variants of ops have been deprecated and will be removed in future");const n=Fs(t,"a","subStrict"),r=Fs(e,"b","subStrict");return Q(n.shape,r.shape,"Error in subStrict: "),$o(n,r)}});function _h(t,e,n=null){if(0===t.rank)return Ro(t);if(1!==t.rank&&null===n)return _h(Qa(t,[-1]),e,n);if(1===t.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===e)return Ml(Ro(t),n);if(e===1/0)return Ol(Ro(t),n);if(e===-1/0)return Xl(Ro(t),n);if("euclidean"===e||2===e)return po(Ml(Eo(Ro(t),No(2,"int32")),n));throw new Error("Error in norm: invalid ord value: "+e)}if(Array.isArray(n)&&2===n.length){if(1===e)return Ol(Ml(Ro(t),n[0]),n[1]-1);if(e===1/0)return Ol(Ml(Ro(t),n[1]),n[0]);if(e===-1/0)return Xl(Ml(Ro(t),n[1]),n[0]);if("fro"===e||"euclidean"===e)return po(Ml(fo(t),n));throw new Error("Error in norm: invalid ord value: "+e)}throw new Error("Error in norm: invalid axis: "+n)}const Dh=Ls({norm_:function(t,e="euclidean",n=null,r=!1){const s=_h(t=Fs(t,"x","norm"),e,n);let a=s.shape;if(r){const e=pt(n,t.shape);a=Ho(s.shape,e)}return Qa(s,a)}}),Fh=Ls({movingAverage_:function(t,e,n,r,s=!0){const a=Fs(t,"v","movingAverage"),i=Fs(e,"x","movingAverage"),o=Fs(n,"decay","movingAverage");xs(a,i),Z(st(a.shape,i.shape),(()=>"Shape mismatch in v and x"));const u=No(1),l=$o(u,o);let c=ho($o(i,a),l);if(s){Z(null!=r,(()=>"When using zeroDebias: true, step is required."));const t=Fs(r,"step","movingAverage");c=co(c,$o(u,Eo(o,t)))}return uo(a,c)}}),Oh=Ls({scatterND_:function(t,e,n){const r=Fs(t,"indices","scatterND","int32"),s=Fs(e,"updates","scatterND");ci(s,r,n);const a={indices:r,updates:s},i={shape:n};return Cs.runKernelFunc((t=>t.scatterND(r,s,n)),a,null,Qn,i)}}),Mh=Ls({sparseToDense_:function(t,e,n,r=0){const s=Fs(t,"sparseIndices","sparseToDense","int32"),a=Fs(e,"sparseValues","sparseToDense"),i=Fs(r,"defaultValue","sparseToDense",a.dtype);!function(t,e,n,r){if("int32"!==t.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${t.shape}.`);const s=t.rank>0?t.shape[0]:1,a=t.rank>1?t.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);const i=e.size;if(0!==e.rank&&(1!==e.rank||i!==s))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${s}]`);if(e.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,a,n,i);const o={sparseIndices:s,sparseValues:a,defaultValue:i},u={outputShape:n};return Cs.runKernelFunc((t=>t.sparseToDense(s,a,n,i)),o,null,gr,u)}}),Lh=Ls({gatherND_:function(t,e){const n=Fs(e,"indices","gatherND","int32"),r=Fs(t,"x","gatherND"),s={params:r,indices:n};return Cs.runKernelFunc((t=>t.gatherND(r,n)),s,null,Ke)}}),zh=Ls({dropout_:function(t,e,n,r){const s=Fs(t,"x","dropout");if(Z("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),Z(e>=0&&e<1,(()=>`rate must be a float in the range [0, 1), but got ${e}.`)),0===e)return t instanceof us?s.clone():s;const a=function(t,e){if(null==e)return t.shape.slice();if(st(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let r=0;r<t.shape.length;r++)null==e[r]&&null!=t.shape[r]?n.push(t.shape[r]):n.push(e[r]);return n}return e}(s,n),i=1-e,o=co(pl(uo(kc(a,0,1,"float32",r),i)),i);return ho(s,o)}});function Bh(t){return Math.floor(Math.pow(2,Math.ceil(Math.log(t)/Math.log(2))))}function Ph(t,e,n){const r=1-t%2,s=new Float32Array(t);for(let a=0;a<t;++a){const i=2*Math.PI*a/(t+r-1);s[a]=e-n*Math.cos(i)}return Nc(s,"float32")}const Wh=async function(t,e,n=1){const r=Fs(t,"predictions","inTopK"),s=Fs(e,"targets","inTopK");Z(r.rank>1,(()=>"inTopK() expects the predictions to be of rank 2 or higher, but got "+r.rank)),Z(r.rank-1===s.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`)),Q(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const a=r.shape[r.shape.length-1];Z(n>0&&n<=a,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`));const i=await r.data(),o=await s.data(),[u,l]=[i.length/a,a],c=ft("bool",u);for(let t=0;t<u;t++){const e=t*l,r=i.subarray(e,e+l),s=[];for(let t=0;t<r.length;t++)s.push({value:r[t],index:t});s.sort(((t,e)=>e.value-t.value)),c[t]=0;for(let e=0;e<n;e++)if(s[e].index===o[t]){c[t]=1;break}}return t!==r&&r.dispose(),e!==s&&s.dispose(),Ps(c,s.shape,"bool")},Vh=Ls({conv2DBackpropFilter_:function(t,e,n,r,s,a="NHWC",i){let o=t;3===t.rank&&(o=Qa(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u=e;3===u.rank&&(u=Qa(e,[1,e.shape[0],e.shape[1],e.shape[2]])),Z(4===o.rank,(()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+o.shape+".")),Z(4===u.rank,(()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+u.shape+".")),Z(4===n.length,(()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+n+"."));const l="NHWC"===a?o.shape[3]:o.shape[1],c="NHWC"===a?u.shape[3]:u.shape[1];Z(l===n[2],(()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`)),Z(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),null!=i&&Z(at(s),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const h={x:o,dy:u},p={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,filterShape:n};return Cs.runKernelFunc((t=>{const e=bu(a),l=lu(o.shape,n,r,1,s,i,!1,e);return t.conv2dDerFilter(o,u,l)}),h,null,ye,p)}});function Uh(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return ho(t,eh(e));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Gh(t,e){let n=e;const r=Do(t.shape,e.shape);return r.length>0&&(n=Ml(n,r)),Qa(n,t.shape)}function jh(t,e,n){if("linear"===e)return t;if("relu"===e)return Cc(t);if("elu"===e)return al(t);if("relu6"===e)return Tc(t);if("prelu"===e)return dc(t,n);throw new Error(`Unknown fused activation ${e}.`)}const Hh=(t,e)=>!(t>0)||"linear"===e,qh=Ls({fusedConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l}){if(u=u||"linear",!1===Hh(Cs.state.gradientDepth,u)){let c=Wu(t,e,n,r,s,a,i);return null!=o&&(c=uo(c,o)),jh(c,u,l)}const c=Fs(t,"x","conv2d"),h=Fs(e,"filter","conv2d");let p=c,d=!1;3===c.rank&&(d=!0,p=Qa(c,[1,c.shape[0],c.shape[1],c.shape[2]])),Z(4===p.rank,(()=>"Error in fused conv2d: input must be rank 4, but got rank "+p.rank+".")),Z(4===h.rank,(()=>"Error in fused conv2d: filter must be rank 4, but got rank "+h.rank+".")),null!=i&&Z(at(r),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`)),Z(p.shape[3]===h.shape[2],(()=>`Error in conv2d: depth of input (${p.shape[3]}) must match input depth for filter ${h.shape[2]}.`)),Z(yu(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),Z("NHWC"===s,(()=>`Error in conv2d: got dataFormat of ${s} but only NHWC is currently supported.`));const f=lu(p.shape,h.shape,n,a,r,i);let m,g;null!=o&&(m=Fs(o,"bias","fused conv2d"),[m]=bs(m,c),Fo(f.outShape,m.shape)),null!=l&&(g=Fs(l,"prelu weights","fused conv2d"));const y=(t,e)=>{const[s,i,o,l]=e,c=Uh(t,o,u);Z(gu(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const h=[Uu(i.shape,c,s,n,r),Vh(i,c,s.shape,n,r)];if(null!=l){const t=Gh(l,c);h.push(t)}return h},b=t=>t.fusedConv2d({input:p,filter:h,convInfo:f,bias:m,activation:u,preluActivationWeights:g}),x={x:p,filter:h,bias:m,preluActivationWeights:g},v={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:u};return null==o?wo(((t,e,n)=>{let r=Cs.runKernelFunc(b,x,null,Rr,v);return n([e,t,r]),d&&(r=Qa(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}}))(p,h):wo(((t,e,n,r)=>{let s=Cs.runKernelFunc(b,x,null,Rr,v);return r([e,t,s,n]),d&&(s=Qa(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:y}}))(p,h,m)}}),Kh=Ls({depthwiseConv2dNativeBackpropFilter_:function(t,e,n,r,s,a=[1,1],i){let o=t;3===t.rank&&(o=Qa(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u=e;3===u.rank&&(u=Qa(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const l={x:o,dy:u},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,filterShape:n};return Cs.runKernelFunc((e=>{const l=lu(t.shape,n,r,a,s,i,!0);return e.depthwiseConv2DDerFilter(o,u,l)}),l,null,Ee,c)}}),Xh=Ls({depthwiseConv2dNativeBackpropInput_:function(t,e,n,r,s,a=[1,1],i){let o=e,u=!1;3===e.rank&&(u=!0,o=Qa(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const l={dy:o,filter:n},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,inputShape:t},h=Cs.runKernelFunc((e=>{const u=lu(t,n.shape,r,a,s,i,!0);return e.depthwiseConv2DDerInput(o,n,u)}),l,null,$e,c);return u?Qa(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Yh=Ls({fusedDepthwiseConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l}){if(!1===Hh(Cs.state.gradientDepth,u)){let c=Zu(t,e,n,r,s,a,i);return null!=o&&(c=uo(c,o)),jh(c,u,l)}const c=Fs(t,"x","depthwiseConv2d"),h=Fs(e,"filter","depthwiseConv2d");let p=c,d=!1;3===c.rank&&(d=!0,p=Qa(c,[1,c.shape[0],c.shape[1],c.shape[2]])),Z(4===p.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`)),Z(4===h.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`)),Z(p.shape[3]===h.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`)),null==a&&(a=[1,1]),Z(yu(n,a),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),null!=i&&Z(at(r),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${r}.`));const f=lu(p.shape,h.shape,n,a,r,i,!0);let m,g;null!=o&&(m=Fs(o,"bias","fused conv2d"),[m]=bs(m,c),Fo(f.outShape,m.shape)),null!=l&&(g=Fs(l,"prelu weights","fused depthwiseConv2d"));const y=(t,e)=>{Z(gu(a),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`));const[s,o,l,c]=e,h=Uh(t,l,u),p=Xh(o.shape,h,s,n,r,a,i),d=Kh(o,h,s.shape,n,r,a,i);return null!=c?[p,d,Gh(m,h)]:[p,d]},b=t=>t.fusedDepthwiseConv2D({input:p,filter:h,convInfo:f,bias:m,activation:u,preluActivationWeights:g}),x={x:p,filter:h,bias:m,preluActivationWeights:g},v={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:u};return null==o?wo(((t,e,n)=>{let r=Cs.runKernelFunc(b,x,null,_r,v);return n([e,t,r]),d&&(r=Qa(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}}))(p,h):wo(((t,e,n,r)=>{let s=Cs.runKernelFunc(b,x,null,_r,v);return r([e,t,s,n]),d&&(s=Qa(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:y}}))(p,h,m)}}),Jh=Ls({fusedMatMul_:function({a:t,b:e,transposeA:n=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:i}){if(!1===Hh(Cs.state.gradientDepth,a)){let o=ti(t,e,n,r);return null!=s&&(o=uo(o,s)),jh(o,a,i)}let o=Fs(t,"a","fused matMul"),u=Fs(e,"b","fused matMul");[o,u]=bs(o,u);const l=n?o.shape[o.rank-2]:o.shape[o.rank-1],c=r?u.shape[u.rank-1]:u.shape[u.rank-2],h=n?o.shape[o.rank-1]:o.shape[o.rank-2],p=r?u.shape[u.rank-2]:u.shape[u.rank-1],d=o.shape.slice(0,-2),f=u.shape.slice(0,-2),m=nt(d),g=nt(f);Z(o.rank>=2&&u.rank>=2&&o.rank===u.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${o.rank} and ${u.rank}.`)),Z(st(d,f),(()=>`Error in fused matMul: outer dimensions (${d}) and (${f}) of Tensors with shapes ${o.shape} and `+u.shape+" must match.")),Z(l===c,(()=>`Error in fused matMul: inner shapes (${l}) and (${c}) of Tensors with shapes ${o.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`));const y=o.shape.slice(0,-2).concat([h,p]),b=Qa(o,n?[m,l,h]:[m,h,l]),x=Qa(u,r?[g,p,c]:[g,c,p]);let v,w;null!=s&&(v=Fs(s,"bias","fused matMul"),[v]=bs(v,o),Fo(y,v.shape)),null!=i&&(w=Fs(i,"prelu weights","fused matMul"));const k=(t,e)=>{const[i,o,u,l]=e,c=Uh(Qa(t,u.shape),u,a);let h,p;return n||r?!n&&r?(h=ti(c,o,!1,!1),p=ti(c,i,!0,!1)):n&&!r?(h=ti(o,c,!1,!0),p=ti(i,c,!1,!1)):(h=ti(o,c,!0,!0),p=ti(c,i,!0,!0)):(h=ti(c,o,!1,!0),p=ti(i,c,!0,!1)),null!=s?[h,p,Gh(l,c)]:[h,p]},N=t=>t.fusedBatchMatMul({a:b,b:x,transposeA:n,transposeB:r,bias:v,activation:a,preluActivationWeights:w}),I={a:b,b:x,bias:v,preluActivationWeights:w},S={transposeA:n,transposeB:r,activation:a};return null==s?wo(((t,e,n)=>{const r=Cs.runKernelFunc(N,I,null,Ar,S);return n([t,e,r]),{value:Qa(r,y),gradFunc:k}}))(b,x):wo(((t,e,n,r)=>{const s=Cs.runKernelFunc(N,I,null,Ar,S);return r([t,e,s,n]),{value:Qa(s,y),gradFunc:k}}))(b,x,v)}}),Zh=Ls({hammingWindow_:function(t){return Ph(t,.54,.46)}}),Qh=Ls({hannWindow_:function(t){return Ph(t,.5,.5)}}),tp=Ls({frame_:function(t,e,n,r=!1,s=0){let a=0;const i=[];for(;a+e<=t.size;)i.push(Su(t,a,e)),a+=n;if(r)for(;a<t.size;){const r=a+e-t.size,o=Nu([Su(t,a,e-r),Co([r],s)]);i.push(o),a+=n}return 0===i.length?sh([],[0,e]):Qa(Nu(i),[i.length,e])}}),ep=Ls({stft_:function(t,e,n,r,s=Qh){null==r&&(r=Bh(e));const a=tp(t,e,n),i=ho(a,s(e)),o=[];for(let t=0;t<a.shape[0];t++)o.push(Jc(Su(i,[t,0],[1,e]),r));return Nu(o)}}),np=Ls({cropAndResize_:function(t,e,n,r,s,a){const i=Fs(t,"image","cropAndResize"),o=Fs(e,"boxes","cropAndResize","float32"),u=Fs(n,"boxInd","cropAndResize","int32");s=s||"bilinear",a=a||0;const l=o.shape[0];Z(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),Z(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${o.shape}.`)),Z(1===u.rank&&u.shape[0]===l,(()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${o.shape}.`)),Z(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),Z(r[0]>=1&&r[1]>=1,(()=>"cropSize must be atleast [1,1], but was "+r)),Z("bilinear"===s||"nearest"===s,(()=>"method must be bilinear or nearest, but was "+s));const c={image:i,boxes:o,boxInd:u},h={method:s,extrapolationValue:a,cropSize:r};return Cs.runKernelFunc((t=>t.cropAndResize(i,o,u,r,s,a)),c,null,Se,h)}}),rp=Ls({flipLeftRight_:function(t){const e=Fs(t,"image","flipLeftRight","float32");Z(4===e.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`));const n={image:e};return Cs.runKernel(Ue,n,{})}}),sp=Ls({rotateWithOffset_:function(t,e,n=0,r=.5){const s=Fs(t,"image","rotateWithOffset","float32");Z(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const a={image:s},i={radians:e,fillValue:n,center:r};return Cs.runKernel($r,a,i)}});function ap(t,e,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=t.shape[0];return n=Math.min(n,i),Z(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),Z(2===t.rank,(()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`)),Z(4===t.shape[1],(()=>"boxes must have 4 columns, but 2nd dimension was "+t.shape[1])),Z(1===e.rank,(()=>"scores must be a 1D tensor")),Z(e.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was `+e.shape[0])),Z(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}const ip=Ls({nonMaxSuppression_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=Fs(t,"boxes","nonMaxSuppression"),i=Fs(e,"scores","nonMaxSuppression"),o=ap(a,i,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const u={maxOutputSize:n,iouThreshold:r,scoreThreshold:s};return Cs.runKernelFunc((t=>t.nonMaxSuppression(a,i,n,r,s)),{boxes:a,scores:i},null,An,u)}});function op(t,e,n){const r=function(t,e,n){return function(t,e,n){let r=0,s=t.length,a=0,i=!1;for(;r<s;){a=r+(s-r>>>1);const o=n(e,t[a]);o>0?r=a+1:(s=a,i=!o)}return i?r:-r-1}(t,e,n||up)}(t,e,n),s=r<0?-(r+1):r;t.splice(s,0,e)}function up(t,e){return t>e?1:t<e?-1:0}function lp(t,e,n,r,s){return pp(t,e,n,r,s,0).selectedIndices}function cp(t,e,n,r,s,a){return pp(t,e,n,r,s,0,!1,a,!0)}function hp(t,e,n,r,s,a){return pp(t,e,n,r,s,a,!0)}function pp(t,e,n,r,s,a,i=!1,o=!1,u=!1){const l=[];for(let t=0;t<e.length;t++)e[t]>s&&l.push({score:e[t],boxIndex:t,suppressBeginIndex:0});l.sort(mp);const c=a>0?-.5/a:0,h=[],p=[];for(;h.length<n&&l.length>0;){const e=l.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=e;if(n<s)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=dp(t,a,h[n]);if(i>=r){o=!0;break}if(e.score=e.score*fp(r,c,i),e.score<=s)break}e.suppressBeginIndex=h.length,o||(e.score===n?(h.push(a),p.push(e.score)):e.score>s&&op(l,e,mp))}const d=h.length,f=n-d;o&&f>0&&(h.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));const m={selectedIndices:Nc(h,"int32")};return i&&(m.selectedScores=Nc(p,"float32")),u&&(m.validOutputs=No(d,"int32")),m}function dp(t,e,n){const r=t.subarray(4*e,4*e+4),s=t.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),p=Math.max(s[1],s[3]),d=(o-a)*(u-i),f=(h-l)*(p-c);if(d<=0||f<=0)return 0;const m=Math.max(a,l),g=Math.max(i,c),y=Math.min(o,h),b=Math.min(u,p),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(d+f-x)}function fp(t,e,n){const r=Math.exp(e*n*n);return n<=t?r:0}function mp(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}const gp=Ls({nonMaxSuppressionWithScore_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=Fs(t,"boxes","nonMaxSuppression"),o=Fs(e,"scores","nonMaxSuppression"),u=ap(i,o,n,r,s,a),l={boxes:i,scores:o},c={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:s=u.scoreThreshold,softNmsSigma:a=u.softNmsSigma},h=Cs.runKernel(_n,l,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),yp=Ls({nonMaxSuppressionPadded_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=Fs(t,"boxes","nonMaxSuppression"),o=Fs(e,"scores","nonMaxSuppression"),u=ap(i,o,n,r,s,null),l={boxes:i,scores:o},c={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:a},h=Cs.runKernel(Rn,l,c);return{selectedIndices:h[0],validOutputs:h[1]}}}),bp=Ls({resizeBilinear_:function(t,e,n=!1){const r=Fs(t,"images","resizeBilinear");Z(3===r.rank||4===r.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`)),Z(2===e.length,(()=>"Error in resizeBilinear: new shape must 2D, but got shape "+e+"."));let s=r,a=!1;3===r.rank&&(a=!0,s=Qa(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[i,o]=e,u={images:s},l={alignCorners:n,size:e},c=Cs.runKernelFunc(((t,e)=>(e([s]),t.resizeBilinear(s,i,o,n))),u,null,qn,l);return a?Qa(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),xp=Ls({resizeNearestNeighbor_:function(t,e,n=!1){const r=Fs(t,"images","resizeNearestNeighbor");Z(3===r.rank||4===r.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`)),Z(2===e.length,(()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+e+".")),Z("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype"));let s=r,a=!1;3===r.rank&&(a=!0,s=Qa(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[i,o]=e,u={images:s},l={alignCorners:n,size:e},c=Cs.runKernelFunc(((t,e)=>(e([s]),t.resizeNearestNeighbor(s,i,o,n))),u,null,jn,l);return a?Qa(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),vp=Ls({bandPart_:function(t,e,n){Z(e%1==0,(()=>`bandPart(): numLower must be an integer, got ${e}.`)),Z(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=Fs(t,"a","bandPart");Z(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[a,i]=r.shape.slice(-2);if(!(e<=a))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);e<0&&(e=a),n<0&&(n=i);const o=Qa(Ic(0,a,1,"int32"),[-1,1]),u=Ic(0,i,1,"int32"),l=$o(o,u),c=Bl(Tl(l,No(+e,"int32")),vl(l,No(-n,"int32"))),h=Hl([a,i],r.dtype);return Qa(th(ph(Qa(r,[-1,a,i])).map((t=>nl(c,t,h)))),s)}}),wp=Ls({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,Z(null!=t&&t.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=t[0].shape[0];for(let e=1;e<t.length;++e)Z(t[e].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[e].shape[0]} vs. ${n})`))}else e=!0,t=Yc(t,t.shape[0],0).map((t=>Qc(t,[0])));Z(t.length<=t[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`));const n=[],r=t;for(let e=0;e<t.length;++e)n.push(Cs.tidy((()=>{let t=r[e];if(e>0)for(let r=0;r<e;++r){const e=ho(Ml(ho(n[r],t)),n[r]);t=$o(t,e)}return co(t,Dh(t,"euclidean"))})));return e?th(n,0):n}});function kp(t,e=!1){return Cs.tidy((()=>{Z(2===t.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`));const n=t.shape[0],r=t.shape[1];let s=hl(n),a=Fa(t);const i=sh([[1]],[1,1]);let o=Fa(i);const u=n>=r?r:n;for(let t=0;t<u;++t){const e=a,u=o,l=s;[o,a,s]=Cs.tidy((()=>{const e=Su(a,[t,t],[n-t,1]),u=Dh(e),l=Su(a,[t,t],[1,1]),c=nl(xl(l,0),sh([[-1]]),sh([[1]])),h=$o(l,ho(c,u)),p=co(e,h);o=1===p.shape[0]?Fa(i):Nu([i,Su(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const d=_l(co(ti(c,h),u)),f=Su(a,[t,0],[n-t,r]),m=ho(d,o),g=ni(o);if(0===t)a=$o(f,ti(m,ti(g,f)));else{const e=$o(f,ti(m,ti(g,f)));a=Nu([Su(a,[0,0],[t,r]),e],0)}const y=ni(m),b=Su(s,[0,t],[n,s.shape[1]-t]);if(0===t)s=$o(b,ti(ti(b,o),y));else{const e=$o(b,ti(ti(b,o),y));s=Nu([Su(s,[0,0],[n,t]),e],1)}return[o,a,s]})),Yi([e,u,l])}return!e&&n>r&&(s=Su(s,[0,0],[n,r]),a=Su(a,[0,0],[r,r])),[s,a]}))}const Np=Ls({qr_:function(t,e=!1){if(Z(t.rank>=2,(()=>"qr() requires input tensor to have a rank >= 2, but got rank "+t.rank)),2===t.rank)return kp(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce(((t,e)=>t*e)),r=ph(Qa(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),s=[],a=[];return r.forEach((t=>{const[n,r]=kp(t,e);s.push(n),a.push(r)})),[Qa(th(s,0),t.shape),Qa(th(a,0),t.shape)]}}});var Ip;!function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Ip||(Ip={}));const Sp=Ls({computeWeightedLoss_:function(t,e,n=Ip.SUM_BY_NONZERO_WEIGHTS){const r=Fs(t,"losses","computeWeightedLoss");let s=null;null!=e&&(s=Fs(e,"weights","computeWeightedLoss"));const a=null==s?r:ho(r,s);if(n===Ip.NONE)return a;if(n===Ip.SUM)return Ml(a);if(n===Ip.MEAN){if(null==s)return Kl(a);{const t=r.size/s.size,e=co(Ml(a),Ml(s));return t>1?co(e,No(t)):e}}if(n===Ip.SUM_BY_NONZERO_WEIGHTS){if(null==s)return co(Ml(a),No(r.size));{const t=ho(s,ql(r.shape)),e=Da(Ml(nc(t,No(0))),"float32");return co(Ml(a),e)}}throw Error("Unknown reduction: "+n)}}),Cp=Ls({absoluteDifference_:function(t,e,n,r=Ip.SUM_BY_NONZERO_WEIGHTS){const s=Fs(t,"labels","absoluteDifference"),a=Fs(e,"predictions","absoluteDifference");let i=null;null!=n&&(i=Fs(n,"weights","absoluteDifference")),Q(s.shape,a.shape,"Error in absoluteDifference: ");const o=Ro($o(s,a));return Sp(o,i,r)}}),Tp=Ls({cosineDistance_:function(t,e,n,r,s=Ip.SUM_BY_NONZERO_WEIGHTS){const a=Fs(t,"labels","cosineDistance"),i=Fs(e,"predictions","cosineDistance");let o=null;null!=r&&(o=Fs(r,"weights","cosineDistance")),Q(a.shape,i.shape,"Error in cosineDistance: ");const u=No(1),l=$o(u,Ml(ho(a,i),n,!0));return Sp(l,o,s)}}),Ep=Ls({hingeLoss_:function(t,e,n,r=Ip.SUM_BY_NONZERO_WEIGHTS){let s=Fs(t,"labels","hingeLoss");const a=Fs(e,"predictions","hingeLoss");let i=null;null!=n&&(i=Fs(n,"weights","hingeLoss")),Q(s.shape,a.shape,"Error in hingeLoss: ");const o=No(1);s=$o(ho(No(2),s),o);const u=Cc($o(o,ho(s,a)));return Sp(u,i,r)}}),$p=Ls({huberLoss_:function(t,e,n,r=1,s=Ip.SUM_BY_NONZERO_WEIGHTS){const a=Fs(t,"labels","huberLoss"),i=Fs(e,"predictions","huberLoss");let o=null;null!=n&&(o=Fs(n,"weights","huberLoss")),Q(a.shape,i.shape,"Error in huberLoss: ");const u=No(r),l=Ro($o(i,a)),c=Yl(l,u),h=$o(l,c),p=uo(ho(No(.5),fo(c)),ho(u,h));return Sp(p,o,s)}}),Ap=Ls({logLoss_:function(t,e,n,r=1e-7,s=Ip.SUM_BY_NONZERO_WEIGHTS){const a=Fs(t,"labels","logLoss"),i=Fs(e,"predictions","logLoss");let o=null;null!=n&&(o=Fs(n,"weights","logLoss")),Q(a.shape,i.shape,"Error in logLoss: ");const u=No(1),l=No(r),c=_l(ho(a,Al(uo(i,l)))),h=ho($o(u,a),Al(uo($o(u,i),l))),p=$o(c,h);return Sp(p,o,s)}}),Rp=Ls({meanSquaredError_:function(t,e,n,r=Ip.SUM_BY_NONZERO_WEIGHTS){const s=Fs(t,"labels","meanSquaredError"),a=Fs(e,"predictions","meanSquaredError");let i=null;null!=n&&(i=Fs(n,"weights","meanSquaredError")),Q(s.shape,a.shape,"Error in meanSquaredError: ");const o=Zc(s,a);return Sp(o,i,r)}}),_p=Ls({sigmoidCrossEntropy_:function(t,e,n,r=0,s=Ip.SUM_BY_NONZERO_WEIGHTS){let a=Fs(t,"multiClassLabels","sigmoidCrossEntropy");const i=Fs(e,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=Fs(n,"weights","sigmoidCrossEntropy")),Q(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const t=No(r),e=No(1),n=No(.5);a=uo(ho(a,$o(e,t)),ho(n,t))}const u=function(t,e){const n=Fs(t,"labels","sigmoidCrossEntropyWithLogits"),r=Fs(e,"logits","sigmoidCrossEntropyWithLogits");Q(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=Cc(r),a=ho(r,n),i=Rl(ol(_l(Ro(r))));return uo($o(s,a),i)}(a,i);return Sp(u,o,s)}}),Dp=Ls({softmaxCrossEntropy_:function(t,e,n,r=0,s=Ip.SUM_BY_NONZERO_WEIGHTS){let a=Fs(t,"onehotLabels","softmaxCrossEntropy");const i=Fs(e,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=Fs(n,"weights","softmaxCrossEntropy")),Q(a.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const t=No(r),e=No(1),n=No(a.shape[1]);a=uo(ho(a,$o(e,t)),co(t,n))}const u=function(t,e,n=-1){if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was `+n);return wo(((t,e,r)=>{const s=zl(e,[n],!0),a=$o(Da(e,"float32"),s);r([t,a]);const i=_l(ho(a,t));return{value:Ml(i,[n]),gradFunc:(t,e)=>{const[r,s]=e,a=Ho(t.shape,[n]);return[ho(Qa(t,a),$o(Da(r,"float32"),ol(s))),ho(Qa(t,a),$o(ol(s),Da(r,"float32")))]}}}))(t,e)}(a,i);return Sp(u,o,s)}}),Fp={fft:Hc,ifft:qc,rfft:Jc,irfft:Kc},Op={hammingWindow:Zh,hannWindow:Qh,frame:tp,stft:ep},Mp={flipLeftRight:rp,resizeNearestNeighbor:xp,resizeBilinear:bp,rotateWithOffset:sp,cropAndResize:np,nonMaxSuppression:ip,nonMaxSuppressionAsync:async function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=Fs(t,"boxes","nonMaxSuppressionAsync"),i=Fs(e,"scores","nonMaxSuppressionAsync"),o=ap(a,i,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const u=await Promise.all([a.data(),i.data()]),l=lp(u[0],u[1],n,r,s);return a!==t&&a.dispose(),i!==e&&i.dispose(),l},nonMaxSuppressionWithScore:gp,nonMaxSuppressionWithScoreAsync:async function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=Fs(t,"boxes","nonMaxSuppressionAsync"),o=Fs(e,"scores","nonMaxSuppressionAsync"),u=ap(i,o,n,r,s,a);n=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,a=u.softNmsSigma;const l=await Promise.all([i.data(),o.data()]),c=hp(l[0],l[1],n,r,s,a);return i!==t&&i.dispose(),o!==e&&o.dispose(),c},nonMaxSuppressionPadded:yp,nonMaxSuppressionPaddedAsync:async function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=Fs(t,"boxes","nonMaxSuppressionAsync"),o=Fs(e,"scores","nonMaxSuppressionAsync"),u=ap(i,o,n,r,s,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,[p,d]=await Promise.all([i.data(),o.data()]),f=cp(p,d,l,c,h,a);return i!==t&&i.dispose(),o!==e&&o.dispose(),f}},Lp={bandPart:vp,gramSchmidt:wp,qr:Np},zp={absoluteDifference:Cp,computeWeightedLoss:Sp,cosineDistance:Tp,hingeLoss:Ep,huberLoss:$p,logLoss:Ap,meanSquaredError:Rp,sigmoidCrossEntropy:_p,softmaxCrossEntropy:Dp};class Bp{static sgd(t){return new Lo(t)}static momentum(t,e,n=!1){return new zo(t,e,n)}static rmsprop(t,e=.9,n=0,r=null,s=!1){return new Bo(t,e,n,r,s)}static adam(t=.001,e=.9,n=.999,r=null){return new Ao(t,e,n,r)}static adadelta(t=.001,e=.95,n=null){return new So(t,e,n)}static adamax(t=.002,e=.9,n=.999,r=null,s=0){return new Mo(t,e,n,r,s)}static adagrad(t,e=.1){return new To(t,e)}}const Pp={sgd:Bp.sgd,momentum:Bp.momentum,adadelta:Bp.adadelta,adagrad:Bp.adagrad,rmsprop:Bp.rmsprop,adamax:Bp.adamax,adam:Bp.adam},Wp="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:t=>t();function Vp(){return new Promise((t=>Wp((()=>t()))))}function Up(t,e,n){return[n*("number"==typeof t?t:t[0]),e*("number"==typeof t?t:t[1])]}function Gp(t,e,n,r=!0){let s=[];if(r)s=s.concat(e.slice(0)),s.push(t[0]/n),s=s.concat(t.slice(1));else{s=s.concat(t[0]);const n=e.length;for(let r=0;r<n;++r)s=s.concat([t[r+1]/e[r],e[r]]);s=s.concat(t.slice(n+1))}return s}function jp(t,e,n=!0){const r=[];if(n){r.push(e);for(let n=e+1;n<t;++n)n<=2*e?(r.push(n),r.push(n-(e+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<t;++r)r>=2*e+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function Hp(t,e,n,r=!0){const s=[];r?s.push(t[0]/n):s.push(t[0]*n);for(let n=1;n<t.length;++n)n<=e.length?r?s.push(e[n-1]*t[n]):s.push(t[n]/e[n-1]):s.push(t[n]);return s}function qp(t,e){const n=[0];for(let r=0;r<e;++r)n.push(t[r][0]);return n}function Kp(t,e,n){const r=t.slice(0,1);for(let s=0;s<n;++s)r.push(t[s+1]-e[s][0]-e[s][1]);return r}const Xp=1.7580993408473768,Yp=1.0507009873554805,Jp=.3275911,Zp=.254829592,Qp=-.284496736,td=1.421413741,ed=-1.453152027,nd=1.061405429;function rd(...t){Bt().getBool("IS_TEST")||console.warn(...t)}function sd(...t){Bt().getBool("IS_TEST")||console.log(...t)}function ad(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(2*t.length);for(let r=0;r<n.length;r+=2)n[r]=t[r/2],n[r+1]=e[r/2];return n}function id(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<t.length;r+=2)e[r/2]=t[r],n[r/2]=t[r+1];return{real:e,imag:n}}function od(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let e=0;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],r[Math.floor(e/4)]=t[e+1];return{real:n,imag:r}}function ud(t){const e=Math.floor(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let e=2;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],r[Math.floor(e/4)]=t[e+1];return{real:n,imag:r}}function ld(t,e){return{real:t[2*e],imag:t[2*e+1]}}function cd(t,e,n,r){t[2*r]=e,t[2*r+1]=n}function hd(t,e){const n=new Float32Array(t/2),r=new Float32Array(t/2);for(let s=0;s<Math.ceil(t/2);s++){const a=(e?2:-2)*Math.PI*(s/t);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}function pd(t,e,n){const r=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(r),imag:Math.sin(r)}}function dd(t,e,n){if("complex64"===e){if("complex64"===t.dtype)return t.clone();const e=Hl(t.shape),r=Da(t,"float32"),s=n.complex(r,e);return e.dispose(),r.dispose(),s}if(!bt(t.dtype,e))return Cs.makeTensorFromDataId(t.dataId,t.shape,e);if("complex64"===t.dtype){const r=n.real(t),s=Da(r,e);return r.dispose(),s}if("int32"===e)return n.int(t);if("bool"===e){const e=No(0,t.dtype),r=n.notEqual(t,e);return e.dispose(),r}throw new Error(`Error in Cast: failed to cast ${t.dtype} to ${e}`)}function fd(t,e){return Cs.makeTensorFromDataId(t.dataId,e,t.dtype)}function md(t,e,n){const r=(e-t)/(n-1),s=_t(n,"float32");s[0]=t;for(let t=1;t<s.length;t++)s[t]=s[t-1]+r;return Nc(s,"float32")}function gd(t,e,n){const r=new Array(t.rank).fill(0),s=t.shape.slice();return e.map((e=>{const a=[...s];a[n]=e;const i=Su(t,r,a);return r[n]+=e,i}))}function yd(t,e){const n=new Array(t.rank);for(let r=0;r<n.length;r++)n[r]=t.shape[r]*e[r];const r=_a(n,t.dtype);for(let e=0;e<r.values.length;++e){const n=r.indexToLoc(e),s=new Array(t.rank);for(let e=0;e<s.length;e++)s[e]=n[e]%t.shape[e];const a=t.locToIndex(s);r.values[e]=t.values[a]}return r.toTensor()}function bd(t,e,n,r,s){const a=e[e.length-1],[i,o]=[t.length/a,a],u=ft(n,i*r),l=ft("int32",i*r);for(let e=0;e<i;e++){const n=e*o,s=t.subarray(n,n+o),a=[];for(let t=0;t<s.length;t++)a.push({value:s[t],index:t});a.sort(((t,e)=>e.value-t.value));const i=e*r,c=u.subarray(i,i+r),h=l.subarray(i,i+r);for(let t=0;t<r;t++)c[t]=a[t].value,h[t]=a[t].index}const c=e.slice();return c[c.length-1]=r,[Ps(u,c,n),Ps(l,c,"int32")]}const xd={kernelName:Gt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ho(t,eh(Da(n,"float32"),-1))}}},vd={kernelName:jt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=fo(Da(n,"float32")),r=po($o(No(1),e));return _l(co(t,r))}}}},wd={kernelName:Ht,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=po($o(fo(Da(n,"float32")),1));return co(t,e)}}}},kd={kernelName:qt,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Fo(n.shape,r.shape);return{a:()=>{let e=t;const r=Do(n.shape,s);return r.length>0&&(e=Ml(e,r)),Qa(e,n.shape)},b:()=>{let e=t;const n=Do(r.shape,s);return n.length>0&&(e=Ml(e,n)),Qa(e,r.shape)}}}},Nd={kernelName:Kt,saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach(((e,r)=>{n[r]=()=>t.clone()})),n}},Id={kernelName:Jt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>mo(n)}}},Sd={kernelName:Zt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>mo(n)}}},Cd={kernelName:Qt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>co(t,po($o(No(1),fo(Da(n,"float32")))))}}},Td={kernelName:te,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=po(uo(No(1),fo(Da(n,"float32"))));return co(t,e)}}}},Ed={kernelName:re,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Fo(n.shape,r.shape);return{a:()=>{const e=uo(fo(n),fo(r));let a=ho(t,co(r,e));const i=Do(n.shape,s);return i.length>0&&(a=Ml(a,i)),Qa(a,n.shape)},b:()=>{const e=uo(fo(n),fo(r));let a=_l(ho(t,co(n,e)));const i=Do(r.shape,s);return i.length>0&&(a=Ml(a,i)),Qa(a,r.shape)}}}},$d={kernelName:ee,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>co(t,uo(fo(Da(n,"float32")),1))}}},Ad={kernelName:ne,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>co(t,$o(No(1),fo(Da(n,"float32"))))}}},Rd=Ls({avgPool3dBackprop_:function(t,e,n,r,s=[1,1,1],a,i){const o=Fs(t,"dy","avgPool3dBackprop"),u=Fs(e,"input","avgPool3dBackprop");let l=o,c=u,h=!1;4===u.rank&&(h=!0,l=Qa(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=Qa(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),Z(5===l.rank,(()=>"Error in avgPool3dBackprop: dy must be rank 5 but got rank "+l.rank+".")),Z(5===c.rank,(()=>"Error in avgPool3dBackprop: input must be rank 5 but got rank "+c.rank+".")),Z(yu(r,s),(()=>`Error in avgPool3dBackprop: Either strides or dilations must be 1. Got strides ${r} and dilations '${s}'`)),null!=i&&Z(at(a),(()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const p={dy:l,input:c},d={filterSize:n,strides:r,dilations:s,pad:a,dimRoundingMode:i},f=Cs.runKernelFunc((t=>{const e=uu(c.shape,n,r,s,a,i);return t.avgPool3dBackprop(l,c,e)}),p,null,oe,d);return h?Qa(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),_d={kernelName:ie,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:s,strides:a,dilations:i,pad:o,dimRoundingMode:u}=n,l=null==i?[1,1,1]:i;return{x:()=>Rd(t,r,s,a,l,o,u)}}},Dd=Ls({avgPoolBackprop_:function(t,e,n,r,s){const a=Fs(t,"dy","avgPoolBackprop"),i=Fs(e,"input","avgPoolBackprop");Z(i.rank===a.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`));let o=i,u=a,l=!1;3===i.rank&&(l=!0,o=Qa(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=Qa(a,[1,a.shape[0],a.shape[1],a.shape[2]])),Z(4===u.rank,(()=>"Error in avgPoolBackprop: dy must be rank 4 but got rank "+u.rank+".")),Z(4===o.rank,(()=>"Error in avgPoolBackprop: input must be rank 4 but got rank "+o.rank+"."));const c={dy:u,input:o},h={filterSize:n,strides:r,pad:s},p=Cs.runKernelFunc((t=>{const e=ou(o.shape,n,r,1,s);return t.avgPoolBackprop(u,o,e)}),c,null,ae,h);return l?Qa(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),Fd={kernelName:se,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:s,strides:a,pad:i}=n;return{x:()=>Dd(t,r,s,a,i)}}},Od={kernelName:ue,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[r,s]=e,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>ti(t,s,!1,!1),b:()=>ti(t,r,!0,!1)}:a&&!i?{a:()=>ti(s,t,!1,!0),b:()=>ti(r,t,!1,!1)}:{a:()=>ti(s,t,!0,!0),b:()=>ti(t,r,!0,!0)}:{a:()=>ti(t,s,!1,!0),b:()=>ti(r,t,!0,!1)}}},Md={kernelName:le,gradFunc:(t,e,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>hc(t,r,s)}}},Ld={kernelName:ce,gradFunc:(t,e,n)=>{const r=n,s=r.inputShape,a=r.shape,i=Array.from(a);for(let t=s.length-1;t>=0;t--)if(s[t]===a[t])i[t]=1;else if(1!==s[t])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${a}].`);const o=[];for(let t=0;t<i.length;t++)i[t]>1&&o.push(t);return{x:()=>Ml(t,o,!0)}}},zd={kernelName:he,gradFunc:t=>({x:()=>t.clone()})},Bd={kernelName:pe,gradFunc:t=>({x:()=>mo(t)})},Pd={kernelName:de,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{clipValueMin:s,clipValueMax:a}=n;return{x:()=>nl(Bl(vl(r,s),Tl(r,a)),t,mo(t))}}},Wd={kernelName:me,saveAllInputs:!0,gradFunc:(t,e,n)=>{const r=e.map((t=>t.shape)),{axis:s}=n,a=pt(s,e[0].shape)[0],i=r.map((t=>t[a]));return Yc(t,i,a).map((t=>()=>t))}},Vd={kernelName:ge,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,{dilations:a,strides:i,pad:o,dataFormat:u}=n;return Z(gu(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>Uu(r.shape,t,s,i,o,u),filter:()=>Vh(r,t,s.shape,i,o,u)}}},Ud={kernelName:be,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,{strides:a,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>Wu(t,s,a,i,o,1,u),filter:()=>Vh(t,r,s.shape,a,i,o,u)}}},Gd=Ls({conv3DBackpropFilter_:function(t,e,n,r,s){let a=t;4===t.rank&&(a=Qa(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let i=e;4===i.rank&&(i=Qa(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),Z(5===a.rank,(()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+a.shape+".")),Z(5===i.rank,(()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+i.shape+".")),Z(5===n.length,(()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+n+".")),Z(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),Z(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:a,dy:i},u={strides:r,pad:s,filterShape:n};return Cs.runKernelFunc((t=>{const e=cu(a.shape,n,r,1,s);return t.conv3dDerFilter(a,i,e)}),o,null,ve,u)}}),jd={kernelName:xe,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:s,pad:a}=n;Z(gu(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[i,o]=e;return{x:()=>Hu(i.shape,t,o,s,a),filter:()=>Gd(i,t,o.shape,s,a)}}},Hd={kernelName:ke,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ho(_l(Bc(Da(n,"float32"))),t)}}},qd={kernelName:Ne,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ho(Pc(Da(n,"float32")),t)}}},Kd={kernelName:Ie,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:s,exclusive:a,reverse:i}=n;return{x:()=>{const e=Ko([s],r.rank);let n=Yu(t,s,a,!i);return null!=e&&(n=ni(n,e)),n}}}},Xd={kernelName:Te,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:s,pad:a,dimRoundingMode:i}=n,o=null==r?[1,1]:r;Z(gu(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[u,l]=e;return Z(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),Z(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`)),Z(u.shape[3]===l.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),Z(yu(s,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`)),null!=i&&Z(at(a),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`)),{x:()=>Xh(u.shape,t,l,s,a,r,i),filter:()=>Kh(u,t,l.shape,s,a,r,i)}}},Yd={kernelName:Re,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,a={x:r,filter:s,dy:t},i={x:r,filter:s,dy:t};return{x:()=>Cs.runKernel(_e,a,n),filter:()=>Cs.runKernel(De,i,n)}}},Jd={kernelName:Fe,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Fo(n.shape,r.shape);return{a:()=>{const e=co(t,Da(r,"float32")),a=Do(n.shape,s);return a.length>0?Qa(Ml(e,a),n.shape):e},b:()=>{let e=ho(t,Da(n,"float32"));const a=Do(r.shape,s);a.length>0&&(e=Qa(Ml(e,a),r.shape));const i=fo(r);return _l(co(e,Da(i,"float32")))}}}},Zd={kernelName:Oe,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,r=e=>e.eluDer(t,n),s={dy:t,y:n};return{x:()=>Cs.runKernelFunc(r,s,null,Me)}}},Qd={kernelName:Le,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=ho(ol(_l(fo(n))),2/Math.sqrt(Math.PI));return{x:()=>ho(t,r)}}},tf={kernelName:Be,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ho(t,n)}}},ef={kernelName:Pe,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ho(t,ol(n))}}},nf={kernelName:Ge,gradFunc:t=>({x:()=>mo(t)})},rf={kernelName:je,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Fo(n.shape,r.shape);return{a:()=>{const e=co(t,Da(r,"float32")),a=Do(n.shape,s);return a.length>0?Qa(Ml(e,a),n.shape):e},b:()=>{let e=ho(t,Da(n,"float32"));const a=Do(r.shape,s);a.length>0&&(e=Qa(Ml(e,a),r.shape));const i=fo(r);return _l(co(e,Da(i,"float32")))}}}},sf={kernelName:He,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:r}=n,[s,a,i,o]=e,u=null==o?No(1):o,l=Do(a.shape,s.shape),c=[];if(1===a.rank){for(let t=0;t<s.shape.length-1;++t)c.push(s.shape[t]);c.push(1)}const h=$o(s,a),p=ho(t,u),d=Fc(uo(i,No(r))),f=ho(ho(ho(d,d),d),No(-.5));return{x:()=>1===a.rank?Qa(ho(ho(t,cl(Qa(d,[1,1,1,a.shape[0]]),c)),u),s.shape):Qa(ho(ho(t,d),u),s.shape),mean:()=>{let t=ho(ho(d,No(-1)),p);return 1===a.rank&&(t=Ml(t,l)),Qa(t,a.shape)},variance:()=>{let t=ho(ho(f,h),p);return 1===a.rank&&(t=Ml(t,l)),Qa(t,a.shape)},scale:()=>{const e=ho(h,d);let n=ho(t,e);return 1===a.rank&&(n=Ml(n,l)),Qa(n,a.shape)},offset:()=>{let e=t;return 1===a.rank&&(e=Ml(e,l)),Qa(e,a.shape)}}}},af={kernelName:qe,inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[r,s]=e,{axis:a}=n,i=pt(a,r.shape)[0];return{x:()=>{const e=r.shape,n=s.size,o=e.slice(0,i),u=o.length,l=e.slice(a,e.length).slice(1),c=l.length,h=of(0,u),p=of(u+1,u+1+c),d=uf([o,[n],l]),f=Qa(t,d),m=Qa(s,[n]),g=uf([[u],h,p]),y=ni(f,g);let b=hh(y,m,r.shape[i]);const x=Xo(g);return b=ni(b,x),b},indices:()=>s}}};function of(t,e){const n=[];for(let r=t;r<e;++r)n.push(r);return n}function uf(t){const e=[];for(let n=0;n<t.length;++n)for(let r=0;r<t[n].length;++r)e.push(t[n][r]);return e}const lf={kernelName:Ye,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>mo(n),b:()=>mo(r)}}},cf={kernelName:Je,gradFunc:t=>({x:()=>Da(t,"float32")})},hf={kernelName:tn,gradFunc:t=>({x:()=>mo(t)})},pf={kernelName:en,gradFunc:t=>({x:()=>mo(t)})},df={kernelName:nn,gradFunc:t=>({x:()=>mo(t)})},ff={kernelName:un,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>co(t,uo(n,1))}}},mf={kernelName:on,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>co(t,Da(n,"float32"))}}},gf={kernelName:pn,inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{axis:s}=n;return{logits:()=>{const e=ol(r);return $o(t,ho(Ml(t,s,!0),e))}}}},yf=Ls({localResponseNormalizationBackprop_:function(t,e,n,r=5,s=1,a=1,i=.5){const o={x:t,y:e,dy:n},u={depthRadius:r,bias:s,alpha:a,beta:i};return Cs.runKernelFunc((o=>o.LRNGrad(n,t,e,r,s,a,i)),o,null,fn,u)}}),bf={kernelName:dn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{depthRadius:a,bias:i,alpha:o,beta:u}=n;return{x:()=>yf(r,s,t,a,i,o,u)}}};function xf(t,e,n,r){return e.rank<n.rank&&(e=Qa(e,Ho(e.shape,r))),t.rank<n.rank&&(t=Qa(t,Ho(t.shape,r))),{x:()=>ho(t,Da(el(n,e),t.dtype))}}const vf={kernelName:mn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{reductionIndices:s}=r,a=e[0],i=xf(t,e[1],a,pt(s,a.shape));return{x:()=>i.x()}}},wf={kernelName:gn,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>ho(t,Da(vl(n,r),"float32")),b:()=>ho(t,Da(Cl(n,r),"float32"))}}},kf=Ls({maxPool3dBackprop_:function(t,e,n,r,s,a=[1,1,1],i,o){const u=Fs(t,"dy","maxPool3dBackprop"),l=Fs(e,"input","maxPool3dBackprop"),c=Fs(n,"output","maxPool3dBackprop");let h=u,p=l,d=c,f=!1;4===l.rank&&(f=!0,h=Qa(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),p=Qa(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=Qa(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),Z(5===h.rank,(()=>"Error in maxPool3dBackprop: dy must be rank 5 but got rank "+h.rank+".")),Z(5===p.rank,(()=>"Error in maxPool3dBackprop: input must be rank 5 but got rank "+p.rank+".")),Z(5===d.rank,(()=>"Error in maxPool3dBackprop: output must be rank 5 but got rank "+d.rank+".")),Z(yu(s,a),(()=>`Error in maxPool3dBackprop: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`)),null!=o&&Z(at(i),(()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${o} but got pad ${i}.`));const m={dy:h,input:p,output:d},g={filterSize:r,strides:s,dilations:a,pad:i,dimRoundingMode:o},y=Cs.runKernelFunc((t=>{const e=uu(p.shape,r,s,a,i,o);return t.maxPool3dBackprop(h,p,d,e)}),m,null,vn,g);return f?Qa(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}}),Nf={kernelName:xn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{filterSize:a,strides:i,dilations:o,pad:u,dimRoundingMode:l}=n,c=null==o?[1,1,1]:o;return{x:()=>kf(t,r,s,a,i,c,u,l)}}},If=Ls({maxPoolBackprop_:function(t,e,n,r,s,a,i){const o=Fs(t,"dy","maxPoolBackprop"),u=Fs(e,"input","maxPoolBackprop"),l=Fs(n,"output","maxPoolBackprop");Z(u.rank===o.rank,(()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`)),Z(4===o.rank,(()=>"Error in maxPoolBackprop: dy must be rank 4 but got rank "+o.rank+".")),Z(4===u.rank,(()=>"Error in maxPoolBackprop: input must be rank 4 but got rank "+u.rank+".")),null!=i&&Z(at(a),(()=>`Error in maxPoolBackprop: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const c={dy:o,input:u,output:l},h={filterSize:r,strides:s,pad:a,dimRoundingMode:i};return Cs.runKernelFunc((t=>{const e=ou(u.shape,r,s,1,a,i);return t.maxPoolBackprop(o,u,l,e)}),c,null,bn,h)}}),Sf={kernelName:On,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:s}=n,a=s.map((t=>t[0]));return{x:()=>Su(t,a,r.shape)}}},Cf={kernelName:cr,gradFunc:(t,e,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>Eu(t,r,s)}}},Tf={kernelName:hr,gradFunc:(t,e,n)=>{const{axis:r}=n;return{x:()=>Nu(t,r)}}},Ef=[xd,vd,wd,kd,Nd,Id,Sd,Cd,Td,Ed,$d,Ad,_d,Fd,Od,Md,Ld,zd,Bd,Pd,Wd,Ud,Vd,jd,Hd,qd,Kd,Xd,Yd,Jd,Zd,Qd,tf,ef,rf,nf,sf,af,lf,cf,hf,pf,df,ff,mf,gf,bf,vf,vf,wf,Nf,{kernelName:yn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{filterSize:a,strides:i,pad:o}=n;return{x:()=>If(t,r,s,a,i,o)}}},{kernelName:Nn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{axis:s}=r,[a,i]=e,o=xf(t,i,a,pt(s,a.shape));return{x:()=>o.x()}}},{kernelName:In,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>ho(t,Da(Tl(n,r),"float32")),b:()=>ho(t,Da(xl(n,r),"float32"))}}},{kernelName:Sn,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:s}=n,a=s.map((t=>t[0]));return{x:()=>Su(t,a,r.shape)}}},{kernelName:Cn,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Fo(n.shape,r.shape);return{a:()=>{const e=Do(n.shape,s);return e.length>0?Qa(Ml(t,e),n.shape):t},b:()=>{const e=ho(t,_l(pl(co(n,r)))),a=Do(r.shape,s);return a.length>0?Qa(Ml(e,a),r.shape):e}}}},{kernelName:Tn,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Fo(n.shape,r.shape);return{a:()=>{const e=ho(t,Da(r,"float32")),a=Do(n.shape,s);return a.length>0?Qa(Ml(e,a),n.shape):e},b:()=>{const e=ho(t,Da(n,"float32")),a=Do(r.shape,s);return a.length>0?Qa(Ml(e,a),r.shape):e}}}},{kernelName:En,gradFunc:t=>({x:()=>_l(t)})},{kernelName:Fn,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>Hl(n.shape,"float32")}}},{kernelName:Dn,gradFunc:t=>({x:()=>mo(t)})},Sf,Sf,{kernelName:Ln,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,r,s]=e,a=n,i=r,o=Fo(a.shape,i.shape);return{a:()=>{const e=Da(i,"float32");let n=ho(t,ho(e,Eo(a,$o(e,No(1)))));const r=Do(a.shape,o);return r.length>0&&(n=Ml(n,r)),Qa(n,a.shape)},b:()=>{const e=xl(a,0),n=nl(e,Al(a),mo(a));let r=ho(t,ho(s,n));const u=Do(i.shape,o);return u.length>0&&(r=Ml(r,u)),Qa(r,i.shape)}}}},{kernelName:zn,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,r]=e,s=xl(n,0);return{x:()=>nl(s,t,ho(t,r)),alpha:()=>{let e=nl(s,mo(t),ho(t,n));const a=Do(r.shape,t.shape);return a.length>0&&(e=Ml(e,a)),Qa(e,r.shape)}}}},{kernelName:Vn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>co(t,_l(fo(n)))}}},{kernelName:Xn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=ho(Tl(n,6),eh(n));return{x:()=>ho(t,Da(r,"float32"))}}},{kernelName:Un,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ho(t,Da(eh(n),"float32"))}}},{kernelName:Gn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Qa(t,n.shape)}}},{kernelName:qn,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,s=e=>{const{alignCorners:s}=n;return e.resizeBilinearBackprop(t,r,s)},a={images:r};return{images:()=>Cs.runKernelFunc(s,a,null,Kn,n)}}},{kernelName:jn,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,s=e=>{const{alignCorners:s}=n;return e.resizeNearestNeighborBackprop(t,r,s)},a={images:r};return{images:()=>Cs.runKernelFunc(s,a,null,Hn,n)}}},{kernelName:Yn,gradFunc:(t,e,n)=>{const{dims:r}=n,s=pt(r,t.shape);return{x:()=>Ec(t,s)}}},{kernelName:Jn,gradFunc:t=>({x:()=>mo(t)})},{kernelName:Zn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>_l(co(t,ho(Eo(n,1.5),2)))}}},{kernelName:tr,inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>Da(mo(n),"float32"),t:()=>ho(t,Da(n,t.dtype)),e:()=>ho(t,Da(Pl(n),t.dtype))}}},{kernelName:er,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=xl(n,No(0)),r=No(Xp),s=No(Yp),a=ho(t,s),i=ho(ho(t,r),ol(Da(n,"float32")));return nl(e,a,i)}}}},{kernelName:ir,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ho(t,ho(n,$o(No(1),n)))}}},{kernelName:ar,gradFunc:t=>({x:()=>mo(t)})},{kernelName:rr,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ho(Ku(Da(n,"float32")),t)}}},{kernelName:sr,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ho(Xu(Da(n,"float32")),t)}}},{kernelName:nr,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{begin:s,size:a}=n,i=r.shape,[o,u]=Ci(r,s,a),l=[];for(let e=0;e<t.rank;e++)l.push([o[e],i[e]-o[e]-u[e]]);return{x:()=>ic(t,l)}}},{kernelName:pr,outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{dim:s}=n,a=ho(t,r);return{logits:()=>$o(a,ho(Ml(a,[s],!0),r))}}},{kernelName:or,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ho(t,Iu(n))}}},Cf,Cf,Tf,Tf,{kernelName:ur,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>co(t,ho(po(Da(n,"float32")),2))}}},{kernelName:dr,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=No(2);return{a:()=>ho(t,ho(s,$o(n,r))),b:()=>ho(t,ho(s,$o(r,n)))}}},{kernelName:fr,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ho(t,ho(Da(n,"float32"),2))}}},{kernelName:Tr,gradFunc:t=>({x:()=>mo(t)})},{kernelName:mr,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Fo(n.shape,r.shape);return{a:()=>{let e=t;const r=Do(n.shape,s);return r.length>0&&(e=Ml(e,r)),Qa(e,n.shape)},b:()=>{let e=t;const n=Do(r.shape,s);return n.length>0&&(e=Ml(e,n)),Qa(_l(e),r.shape)}}}},{kernelName:lr,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,s=r.shape.slice(),{axis:a}=n;pt(a,r.shape).forEach((t=>{s[t]=1}));const i=Qa(t,s),o=ho(i,ql(r.shape,"float32"));return{x:()=>o}}},{kernelName:br,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>co(t,fo(Ku(n)))}}},{kernelName:xr,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ho($o(No(1),fo(n)),t)}}},{kernelName:vr,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{reps:s}=n;return{x:()=>{let e=mo(r);if(1===r.rank)for(let n=0;n<s[0];++n)e=uo(e,Su(t,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)e=uo(e,Su(t,[n*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)e=uo(e,Su(t,[n*r.shape[0],a*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+r.rank+" tensors yet.");for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)for(let o=0;o<s[3];++o)e=uo(e,Su(t,[n*r.shape[0],a*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return e}}}},{kernelName:kr,gradFunc:(t,e,n)=>{const r=n,{perm:s}=r,a=Xo(s);return{x:()=>ni(t,a)}}},{kernelName:Ir,gradFunc:(t,e,n)=>{const r=n,{axis:s}=r;return{value:()=>th(t,s)}}},{kernelName:Sr,inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>function(t,e){const n=Oo(e,mo(e)),r=bl(t,n);let s=vl(e,No(0,"int32"));const a=r.rank-s.rank;for(let t=0;t<a;++t)s=ul(s,t+1);s=Bl(s,ql(r.shape,"bool"));const i=mo(r);return nl(s,r,i)}(t,n)}}},{kernelName:Cr,gradFunc:t=>({x:()=>mo(t)})}];for(const t of Ef)Br(t);let $f;function Af(){return null==$f&&($f=io().epsilon()),$f}us.prototype.abs=function(){return this.throwIfDisposed(),Ro(this)},us.prototype.acos=function(){return this.throwIfDisposed(),Po(this)},us.prototype.acosh=function(){return this.throwIfDisposed(),Wo(this)},us.prototype.addStrict=function(t){return this.throwIfDisposed(),Nh(this,t)},us.prototype.add=function(t){return this.throwIfDisposed(),uo(this,t)},us.prototype.all=function(t,e){return this.throwIfDisposed(),Jo(this,t,e)},us.prototype.any=function(t,e){return this.throwIfDisposed(),Zo(this,t,e)},us.prototype.argMax=function(t){return this.throwIfDisposed(),Qo(this,t)},us.prototype.argMin=function(t){return this.throwIfDisposed(),tu(this,t)},us.prototype.asScalar=function(){return this.throwIfDisposed(),Z(1===this.size,(()=>"The array must have only 1 element.")),Qa(this,[])},us.prototype.asType=function(t){return this.throwIfDisposed(),Da(this,t)},us.prototype.as1D=function(){return this.throwIfDisposed(),Qa(this,[this.size])},us.prototype.as2D=function(t,e){return this.throwIfDisposed(),Qa(this,[t,e])},us.prototype.as3D=function(t,e,n){return this.throwIfDisposed(),Qa(this,[t,e,n])},us.prototype.as4D=function(t,e,n,r){return this.throwIfDisposed(),Qa(this,[t,e,n,r])},us.prototype.as5D=function(t,e,n,r,s){return this.throwIfDisposed(),Qa(this,[t,e,n,r,s])},us.prototype.asin=function(){return this.throwIfDisposed(),eu(this)},us.prototype.asinh=function(){return this.throwIfDisposed(),nu(this)},us.prototype.atan=function(){return this.throwIfDisposed(),ru(this)},us.prototype.atan2=function(t){return this.throwIfDisposed(),su(this,t)},us.prototype.atanh=function(){return this.throwIfDisposed(),au(this)},us.prototype.avgPool=function(t,e,n,r){return this.throwIfDisposed(),xu(this,t,e,n,r)},us.prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),Eu(this,t,e)},us.prototype.batchNorm=function(t,e,n,r,s){return this.throwIfDisposed(),Au(this,t,e,n,r,s)},us.prototype.broadcastTo=function(t){return this.throwIfDisposed(),Fu(this,t)},us.prototype.cast=function(t){return this.throwIfDisposed(),Da(this,t)},us.prototype.ceil=function(){return this.throwIfDisposed(),Ou(this)},us.prototype.clipByValue=function(t,e){return this.throwIfDisposed(),Mu(this,t,e)},us.prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof us&&(t=[t]),Nu([this,...t],e)},us.prototype.conv1d=function(t,e,n,r,s,a){return this.throwIfDisposed(),Vu(this,t,e,n,r,s,a)},us.prototype.conv2dTranspose=function(t,e,n,r,s){return this.throwIfDisposed(),Gu(this,t,e,n,r,s)},us.prototype.conv2d=function(t,e,n,r,s,a){return this.throwIfDisposed(),Wu(this,t,e,n,r,s,a)},us.prototype.cos=function(){return this.throwIfDisposed(),Ku(this)},us.prototype.cosh=function(){return this.throwIfDisposed(),Xu(this)},us.prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),Yu(this,t,e,n)},us.prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),Ju(this,t,e)},us.prototype.depthwiseConv2D=function(t,e,n,r,s,a){return Gi("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),Zu(this,t,e,n,r,s,a)},us.prototype.depthwiseConv2d=function(t,e,n,r,s,a){return this.throwIfDisposed(),Zu(this,t,e,n,r,s,a)},us.prototype.dilation2d=function(t,e,n,r,s){return this.throwIfDisposed(),tl(this,t,e,n,r,s)},us.prototype.divNoNan=function(t){return this.throwIfDisposed(),rl(this,t)},us.prototype.divStrict=function(t){return this.throwIfDisposed(),Ih(this,t)},us.prototype.div=function(t){return this.throwIfDisposed(),co(this,t)},us.prototype.dot=function(t){return this.throwIfDisposed(),sl(this,t)},us.prototype.elu=function(){return this.throwIfDisposed(),al(this)},us.prototype.equalStrict=function(t){return this.throwIfDisposed(),yh(this,t)},us.prototype.equal=function(t){return this.throwIfDisposed(),el(this,t)},us.prototype.erf=function(){return this.throwIfDisposed(),il(this)},us.prototype.exp=function(){return this.throwIfDisposed(),ol(this)},us.prototype.expandDims=function(t){return this.throwIfDisposed(),ul(this,t)},us.prototype.expm1=function(){return this.throwIfDisposed(),ll(this)},us.prototype.fft=function(){return this.throwIfDisposed(),Hc(this)},us.prototype.flatten=function(){return this.throwIfDisposed(),Qa(this,[this.size])},us.prototype.floor=function(){return this.throwIfDisposed(),pl(this)},us.prototype.floorDiv=function(t){return this.throwIfDisposed(),lo(this,t)},us.prototype.gather=function(t,e){return this.throwIfDisposed(),bl(this,t,e)},us.prototype.greaterEqualStrict=function(t){return this.throwIfDisposed(),bh(this,t)},us.prototype.greaterEqual=function(t){return this.throwIfDisposed(),vl(this,t)},us.prototype.greaterStrict=function(t){return this.throwIfDisposed(),xh(this,t)},us.prototype.greater=function(t){return this.throwIfDisposed(),xl(this,t)},us.prototype.ifft=function(){return this.throwIfDisposed(),qc(this)},us.prototype.irfft=function(){return this.throwIfDisposed(),Kc(this)},us.prototype.isFinite=function(){return this.throwIfDisposed(),kl(this)},us.prototype.isInf=function(){return this.throwIfDisposed(),Nl(this)},us.prototype.isNaN=function(){return this.throwIfDisposed(),Il(this)},us.prototype.leakyRelu=function(t){return this.throwIfDisposed(),Sl(this,t)},us.prototype.lessEqualStrict=function(t){return this.throwIfDisposed(),vh(this,t)},us.prototype.lessEqual=function(t){return this.throwIfDisposed(),Tl(this,t)},us.prototype.lessStrict=function(t){return this.throwIfDisposed(),wh(this,t)},us.prototype.less=function(t){return this.throwIfDisposed(),Cl(this,t)},us.prototype.localResponseNormalization=function(t,e,n,r){return this.throwIfDisposed(),$l(this,t,e,n,r)},us.prototype.logSigmoid=function(){return this.throwIfDisposed(),Fl(this)},us.prototype.logSoftmax=function(t){return this.throwIfDisposed(),Ll(this,t)},us.prototype.logSumExp=function(t,e){return this.throwIfDisposed(),zl(this,t,e)},us.prototype.log=function(){return this.throwIfDisposed(),Al(this)},us.prototype.log1p=function(){return this.throwIfDisposed(),Rl(this)},us.prototype.logicalAnd=function(t){return this.throwIfDisposed(),Bl(this,t)},us.prototype.logicalNot=function(){return this.throwIfDisposed(),Pl(this)},us.prototype.logicalOr=function(t){return this.throwIfDisposed(),Wl(this,t)},us.prototype.logicalXor=function(t){return this.throwIfDisposed(),Vl(this,t)},us.prototype.matMul=function(t,e,n){return this.throwIfDisposed(),ti(this,t,e,n)},us.prototype.maxPool=function(t,e,n,r){return this.throwIfDisposed(),Ul(this,t,e,n,r)},us.prototype.max=function(t,e){return this.throwIfDisposed(),Ol(this,t,e)},us.prototype.maximumStrict=function(t){return this.throwIfDisposed(),Sh(this,t)},us.prototype.maximum=function(t){return this.throwIfDisposed(),Oo(this,t)},us.prototype.mean=function(t,e){return this.throwIfDisposed(),Kl(this,t,e)},us.prototype.min=function(t,e){return this.throwIfDisposed(),Xl(this,t,e)},us.prototype.minimumStrict=function(t){return this.throwIfDisposed(),Ch(this,t)},us.prototype.minimum=function(t){return this.throwIfDisposed(),Yl(this,t)},us.prototype.mirrorPad=function(t,e){return this.throwIfDisposed(),Jl(this,t,e)},us.prototype.modStrict=function(t){return this.throwIfDisposed(),Th(this,t)},us.prototype.mod=function(t){return this.throwIfDisposed(),Zl(this,t)},us.prototype.mulStrict=function(t){return this.throwIfDisposed(),Eh(this,t)},us.prototype.mul=function(t){return this.throwIfDisposed(),ho(this,t)},us.prototype.neg=function(){return this.throwIfDisposed(),_l(this)},us.prototype.norm=function(t,e,n){return this.throwIfDisposed(),Dh(this,t,e,n)},us.prototype.notEqualStrict=function(t){return this.throwIfDisposed(),kh(this,t)},us.prototype.notEqual=function(t){return this.throwIfDisposed(),nc(this,t)},us.prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),ei(this,t,e,n)},us.prototype.onesLike=function(){return this.throwIfDisposed(),sc(this)},us.prototype.pad=function(t,e){return this.throwIfDisposed(),ic(this,t,e)},us.prototype.pool=function(t,e,n,r,s){return this.throwIfDisposed(),pc(this,t,e,n,r,s)},us.prototype.powStrict=function(t){return this.throwIfDisposed(),$h(this,t)},us.prototype.pow=function(t){return this.throwIfDisposed(),Eo(this,t)},us.prototype.prelu=function(t){return this.throwIfDisposed(),dc(this,t)},us.prototype.prod=function(t,e){return this.throwIfDisposed(),fc(this,t,e)},us.prototype.reciprocal=function(){return this.throwIfDisposed(),Sc(this)},us.prototype.relu=function(){return this.throwIfDisposed(),Cc(this)},us.prototype.relu6=function(){return this.throwIfDisposed(),Tc(this)},us.prototype.reshapeAs=function(t){return this.throwIfDisposed(),Qa(this,t.shape)},us.prototype.reshape=function(t){return this.throwIfDisposed(),Qa(this,t)},us.prototype.resizeBilinear=function(t,e){return this.throwIfDisposed(),bp(this,t,e)},us.prototype.resizeNearestNeighbor=function(t,e){return this.throwIfDisposed(),xp(this,t,e)},us.prototype.reverse=function(t){return this.throwIfDisposed(),Ec(this,t)},us.prototype.rfft=function(){return this.throwIfDisposed(),Jc(this)},us.prototype.round=function(){return this.throwIfDisposed(),Dc(this)},us.prototype.rsqrt=function(){return this.throwIfDisposed(),Fc(this)},us.prototype.selu=function(){return this.throwIfDisposed(),Oc(this)},us.prototype.separableConv2d=function(t,e,n,r,s,a){return this.throwIfDisposed(),Mc(this,t,e,n,r,s,a)},us.prototype.sigmoid=function(){return this.throwIfDisposed(),Iu(this)},us.prototype.sign=function(){return this.throwIfDisposed(),zc(this)},us.prototype.sin=function(){return this.throwIfDisposed(),Bc(this)},us.prototype.sinh=function(){return this.throwIfDisposed(),Pc(this)},us.prototype.slice=function(t,e){return this.throwIfDisposed(),Su(this,t,e)},us.prototype.softmax=function(t){return this.throwIfDisposed(),jc(this,t)},us.prototype.softplus=function(){return this.throwIfDisposed(),Dl(this)},us.prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),hc(this,t,e)},us.prototype.split=function(t,e){return this.throwIfDisposed(),Yc(this,t,e)},us.prototype.sqrt=function(){return this.throwIfDisposed(),po(this)},us.prototype.square=function(){return this.throwIfDisposed(),fo(this)},us.prototype.squaredDifference=function(t){return this.throwIfDisposed(),Zc(this,t)},us.prototype.squaredDifferenceStrict=function(t){return this.throwIfDisposed(),Ah(this,t)},us.prototype.squeeze=function(t){return this.throwIfDisposed(),Qc(this,t)},us.prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof us?[this,t]:[this,...t];return th(n,e)},us.prototype.step=function(t){return this.throwIfDisposed(),eh(this,t)},us.prototype.stridedSlice=function(t,e,n,r,s,a,i,o){return this.throwIfDisposed(),nh(this,t,e,n,r,s,a,i,o)},us.prototype.subStrict=function(t){return this.throwIfDisposed(),Rh(this,t)},us.prototype.sub=function(t){return this.throwIfDisposed(),$o(this,t)},us.prototype.sum=function(t,e){return this.throwIfDisposed(),Ml(this,t,e)},us.prototype.tan=function(){return this.throwIfDisposed(),rh(this)},us.prototype.tanh=function(){return this.throwIfDisposed(),Cu(this)},us.prototype.tile=function(t){return this.throwIfDisposed(),cl(this,t)},us.prototype.toBool=function(){return this.throwIfDisposed(),Da(this,"bool")},us.prototype.toFloat=function(){return this.throwIfDisposed(),Da(this,"float32")},us.prototype.toInt=function(){return this.throwIfDisposed(),Da(this,"int32")},us.prototype.topk=function(t,e){return this.throwIfDisposed(),uh(this,t,e)},us.prototype.transpose=function(t){return this.throwIfDisposed(),ni(this,t)},us.prototype.unique=function(t){return this.throwIfDisposed(),ch(this,t)},us.prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),hh(this,t,e)},us.prototype.unstack=function(t){return this.throwIfDisposed(),ph(this,t)},us.prototype.where=function(t,e){return this.throwIfDisposed(),nl(t,this,e)},us.prototype.zerosLike=function(){return this.throwIfDisposed(),mo(this)};class Rf extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Rf.prototype)}}class _f extends Error{constructor(t){super(t),Object.setPrototypeOf(this,_f.prototype)}}class Df extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Df.prototype)}}class Ff extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Ff.prototype)}}class Of extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Of.prototype)}}function Mf(t,e){if(Array.isArray(t)){let n=[];for(let r=0;r<e;r++)n=n.concat(t);return n}{const n=new Array(e);return n.fill(t),n}}function Lf(t,e){if(!t)throw new Of(e)}function zf(t,e){let n=0;for(const r of t)r===e&&n++;return n}function Bf(t){return 1===t.length?t[0]:t}function Pf(t){return Array.isArray(t)?t:[t]}function Wf(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function Vf(t){return t.length<=1||-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,((t,e)=>e.toUpperCase()))}Error;let Uf={};function Gf(t){if(null==t)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function jf(t){if(null!=t&&"object"==typeof t)if(Array.isArray(t))t.forEach((t=>jf(t)));else{const e=Object.keys(t);for(const n of e){const e=t[n];null!=e&&"object"==typeof e&&(Array.isArray(e)||"ndarray"!==e.type||"number"!=typeof e.value?jf(e):t[n]=e.value)}}}function Hf(t,e={},n={},r="object",s=!1){if("string"==typeof t){const s=t;let a;if(s in n)a=n[s];else if(s in Uf)a=Uf[s];else if(a=e[s],null==a)throw new Df(`Unknown ${r}: ${t}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=t;if(null==a.className||null==a.config)throw new Df(r+": Improper config format: "+JSON.stringify(a)+".\n'className' and 'config' must set.");const i=a.className;let o,u;if(i in n?[o,u]=n[i]:i in Uf?[o,u]=Uf.className:i in e&&([o,u]=e[i]),null==o)throw new Df(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const t={};for(const e of Object.keys(Uf))t[e]=Uf[e];for(const e of Object.keys(n))t[e]=n[e];a.config.customObjects=t;const e=Object.assign({},Uf);for(const t of Object.keys(n))Uf[t]=n[t];jf(a.config);const r=u(o,a.config,n,s);return Uf=Object.assign({},e),r}{const t=Object.assign({},Uf);for(const t of Object.keys(n))Uf[t]=n[t];const e=new o(a.config);return Uf=Object.assign({},t),e}}}function qf(t,e){return-1*function(t,e){return t<e?-1:t>e?1:0}(t,e)}function Kf(t){if(null==t)return t;const e=[];for(const n of t)-1===e.indexOf(n)&&e.push(n);return e}function Xf(t){if(null==t)throw new Df("Invalid value in obj: "+JSON.stringify(t));for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function Yf(t,e,n){if(null!=n&&t.indexOf(n)<0)throw new Df(`${n} is not a valid ${e}.  Valid values are ${t} or null/undefined.`)}function Jf(t,e,n=0,r=1/0){return Lf(n>=0),Lf(r>=n),Array.isArray(t)&&t.length>=n&&t.length<=r&&t.every((t=>typeof t===e))}function Zf(t,e){Array.isArray(t)?(Z(t.length>0,(()=>e+" is unexpectedly an empty array.")),t.forEach(((t,n)=>Zf(t,`element ${n+1} of ${e}`)))):Z(Number.isInteger(t)&&t>0,(()=>`Expected ${e} to be a positive integer, but got `+Qf(t)+"."))}function Qf(t){return null===t?"null":Array.isArray(t)?"["+t.map((t=>Qf(t))).join(",")+"]":"string"==typeof t?`"${t}"`:""+t}function tm(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}function em(t,e){return Xi((()=>po(Ml(ho(t,t),e,!0))))}class nm extends Ti{getConfig(){return{}}}class rm extends nm{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Xi((()=>{const e=em(t,this.axis),n=Mu(e,0,this.maxValue);return ho(t,co(n,uo(Af(),e)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}rm.className="MaxNorm",$i(rm);class sm extends nm{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Xi((()=>co(t,uo(Af(),em(t,this.axis)))))}getConfig(){return{axis:this.axis}}}sm.className="UnitNorm",$i(sm);class am extends nm{apply(t){return Cc(t)}}am.className="NonNeg",$i(am);class im extends nm{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Xi((()=>{const e=em(t,this.axis),n=uo(ho(this.rate,Mu(e,this.minValue,this.maxValue)),ho(1-this.rate,e));return ho(t,co(n,uo(Af(),e)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}im.className="MinMaxNorm",$i(im);const om={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function um(t){return Gf(t)}function lm(t,e={}){return Hf(t,Ei.getMap().classNameMap,e,"constraint")}function cm(t){return null==t?null:"string"==typeof t?lm({className:t in om?om[t]:t,config:{}}):t instanceof nm?t:lm(t)}function hm(t){return new rm(t)}function pm(t){return new sm(t)}function dm(){return new am}function fm(t){return new im(t)}const mm=["channelsFirst","channelsLast"],gm=["valid","same","causal"],ym=["max","avg"],bm=["sum","mul","concat","ave"],xm=new Map;function vm(t){Yf(mm,"DataFormat",t)}function wm(t){Yf(gm,"PaddingMode",t)}function km(t){Yf(ym,"PoolMode",t)}const Nm=[];function Im(t,e){Nm.push(t);try{const t=e();return Nm.pop(),t}catch(t){throw Nm.pop(),t}}function Sm(t){if(!Em(t))throw new Error("Not a valid tensor name: '"+t+"'");return(0===Nm.length?"":Nm.join("/")+"/")+t}function Cm(t){if(!Em(t))throw new Error("Not a valid tensor name: '"+t+"'");xm.has(t)||xm.set(t,0);const e=xm.get(t);if(xm.set(t,xm.get(t)+1),e>0){const n=`${t}_${e}`;return xm.set(n,1),n}return t}const Tm=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Em(t){return!!t.match(Tm)}function $m(t,e,n){null==e&&(e=0),null==n&&(n=t.length);let r=1;for(let s=e;s<n;++s)r*=t[s];return r}function Am(t){return Nc(t=Array.isArray(t)?new Float32Array(t):t)}function Rm(t){return Xl(Am(t)).dataSync()[0]}function _m(t){return Ol(Am(t)).dataSync()[0]}function Dm(t,e){if(e<t)throw new Df(`end (${e}) < begin (${t}) is forbidden.`);const n=[];for(let r=t;r<e;++r)n.push(r);return n}function Fm(t,e){return t.asType(e)}function Om(t,e=-1){const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),t.reshape(n)}function Mm(t,e,n){return Xi((()=>{switch(t.rank){case 1:return Wc(t,e,n);case 2:return Vc(t,[e,0],[n,t.shape[1]]);case 3:return Uc(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return Gc(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return Su(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return Su(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new Df("sliceAlongFirstAxis() received an unsupported tensor rank: "+t.rank)}}))}function Lm(t,e,n){return Xi((()=>{switch(t.rank){case 1:return Wc(t,e,n);case 2:return Vc(t,[0,e],[t.shape[0],n]);case 3:return Uc(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return Gc(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new Df("sliceAlongLastAxis() received an unsupported tensor rank: "+t.rank)}}))}function zm(t,e,n,r){return Xi((()=>{switch(t.rank){case 1:return Wc(t,e,n);case 2:switch(r){case 1:return Mm(t,e,n);case 2:return Lm(t,e,n);default:throw new Df("The axis is not within the rank of the tensor "+r)}case 3:switch(r){case 1:return Mm(t,e,n);case 2:return Uc(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return Lm(t,e,n);default:throw new Df("The axis is not within the rank of the tensor "+r)}case 4:switch(r){case 1:return Mm(t,e,n);case 2:return Gc(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return Gc(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return Lm(t,e,n);default:throw new Df("The axis is not within the rank of the tensor "+r)}default:throw new Df("sliceAlongLastAxis() received an unsupported tensor rank: "+t.rank)}}))}function Bm(t,e=-1){let n;return e<0&&(n=t[0].rank,e=0!==n?n:0),e===t[0].rank&&(e=-1),Nu(t,e)}function Pm(t,e){switch(t.rank){case 1:return Lu([t,e]);case 2:return zu([t,e],0);case 3:return Bu([t,e],0);case 4:return Pu([t,e],0);default:throw new Df("concatAlongFirstAxis() received an unsupported tensor rank: "+t.rank)}}function Wm(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new Df(`The length of input n (${e.length}) does not match the number of dimensions in input x (${t.rank})`);return cl(t,e)}function Vm(t,e=0,n=1,r,s){return wc(t,e,n,r,s)}function Um(t,e,n,r){if(t.rank<2||e.rank<2)throw new Ff(`dot requires both inputs to be rank >= 2 but got x shape = ${t.shape} and y shape = ${e.shape}`);if(e.rank>=3&&t.shape.slice(-1)[0]!==e.shape.slice(-2)[0])throw new Ff(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${t.shape} and  y shape = `+e.shape);if(2===t.rank&&2===e.rank)return Jh({a:t,b:e,transposeA:!1,transposeB:!1,bias:r?Hm(t.rank,r,"channelsLast"):null,activation:n});{const s=t.shape.slice(),a=s.pop();t=t.reshape([-1,a]);const i=e.shape.slice(),o=i.pop(),u=i.pop(),l=[...i,o],c=Array.from({length:e.rank},((t,n)=>0===n?e.rank-2:n<=e.rank-2?n-1:n));e=e.transpose(c).reshape([u,-1]);const h=[...s,...l];return Jh({a:t,b:e,transposeA:!1,transposeB:!1,bias:r?Hm(t.rank,r,"channelsLast"):null,activation:n}).reshape(h)}}function Gm(t,e,n){return Xi((()=>(e=Array.isArray(e)?Nc(e,"int32"):e.toInt(),bl(t,e,n))))}function jm(t){return ho(t,t)}function Hm(t,e,n){const r=e.shape;if(1!==e.rank&&e.rank!==t)throw new Df("Unexpected bias dimensions: "+e.rank+"; expected it to be 1 or "+t);if(5===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1,1,1]):e.reshape([1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,1,1,r[0]]):e.reshape([1].concat(r))}else if(4===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1,1]):e.reshape([1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,1,r[0]]):e.reshape([1].concat(r))}else if(3===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1]):e.reshape([1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,r[0]]):e.reshape([1].concat(r))}else if(t<3)return e;throw new Df("Unsupported input rank by biasAdd: "+e.rank)}function qm(t,e,n){return Xi((()=>(null==n&&(n="channelsLast"),vm(n),t.add(Hm(t.rank,e,n)))))}function Km(t,e,n,r){return Xi((()=>zh(t,e,n,r)))}function Xm(t,e,n=!1){return n?t():e()}const Ym=["fanIn","fanOut","fanAvg"],Jm=["normal","uniform","truncatedNormal"];class Zm extends Ti{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Qm extends Zm{apply(t,e){return Hl(t,e)}}Qm.className="Zeros",$i(Qm);class tg extends Zm{apply(t,e){return ql(t,e)}}tg.className="Ones",$i(tg);class eg extends Zm{constructor(t){if(super(),"object"!=typeof t)throw new Df("Expected argument of type ConstantConfig but got "+t);if(void 0===t.value)throw new Df("config must have value set but got "+t);this.value=t.value}apply(t,e){return Xi((()=>ho(No(this.value),ql(t,e))))}getConfig(){return{value:this.value}}}eg.className="Constant",$i(eg);class ng extends Zm{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return kc(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}ng.className="RandomUniform",$i(ng);class rg extends Zm{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Ff(`randomNormal does not support dType ${e}.`);return Vm(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}rg.className="RandomNormal",$i(rg);class sg extends Zm{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Ff(`truncatedNormal does not support dType ${e}.`);return lh(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}sg.className="TruncatedNormal",$i(sg);class ag extends Zm{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return Xi((()=>{if(2!==t.length||t[0]!==t[1])throw new Df("Identity matrix initializer can only be used for 2D square matrices.");return ho(this.gain,hl(t[0]))}))}getConfig(){return{gain:this.gain}}}ag.className="Identity",$i(ag);class ig extends Zm{constructor(t){if(super(),t.scale<0)throw new Df("scale must be a positive float. Got: "+t.scale);var e;this.scale=null==t.scale?1:t.scale,this.mode=null==t.mode?"fanIn":t.mode,e=this.mode,Yf(Ym,"FanMode",e),this.distribution=null==t.distribution?"normal":t.distribution,function(t){Yf(Jm,"Distribution",t)}(this.distribution),this.seed=t.seed}apply(t,e){const n=function(t,e="channelsLast"){let n,r;if(vm(e),2===t.length)n=t[0],r=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===e){const e=$m(t,2);n=t[1]*e,r=t[0]*e}else if("channelsLast"===e){const e=$m(t,0,t.length-2);n=t[t.length-2]*e,r=t[t.length-1]*e}}else{const e=$m(t);n=Math.sqrt(e),r=Math.sqrt(e)}return[n,r]}(t),r=n[0],s=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,r):"fanOut"===this.mode?a/=Math.max(1,s):a/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Ff(`${this.getClassName()} does not support dType ${e}.`);return lh(t,0,n,e,this.seed)}{const n=Math.sqrt(3*a);return kc(t,-n,n,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}ig.className="VarianceScaling",$i(ig);class og extends ig{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return ig.className}}og.className="GlorotUniform",$i(og);class ug extends ig{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return ig.className}}ug.className="GlorotNormal",$i(ug);class lg extends ig{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return ig.className}}lg.className="HeNormal",$i(lg);class cg extends ig{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return ig.className}}cg.className="HeUniform",$i(cg);class hg extends ig{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return ig.className}}hg.className="LeCunNormal",$i(hg);class pg extends ig{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return ig.className}}pg.className="LeCunNormal",$i(pg);class dg extends Zm{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=null==t.gain?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,null!=this.seed)throw new Ff("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return Xi((()=>{if(t.length<2)throw new Ff("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const e=Vm(t[0]>t[1]?[t[1],t[0]]:t,0,1,"float32");let n=Lp.gramSchmidt(e);return t[0]>t[1]&&(n=n.transpose()),ho(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}dg.className="Orthogonal",$i(dg);const fg={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function mg(t,e={}){return Hf(t,Ei.getMap().classNameMap,e,"initializer")}function gg(t){return Gf(t)}function yg(t){if("string"==typeof t){const e=t in fg?fg[t]:t;if("GlorotNormal"===e)return new ug;if("GlorotUniform"===e)return new og;if("HeNormal"===e)return new lg;if("HeUniform"===e)return new cg;if("LeCunNormal"===e)return new hg;if("LeCunUniform"===e)return new pg;{const t={};return t.className=e,t.config={},mg(t)}}return t instanceof Zm?t:mg(t)}function bg(){return new Qm}function xg(){return new tg}function vg(t){return new eg(t)}function wg(t){return new ng(t)}function kg(t){return new rg(t)}function Ng(t){return new sg(t)}function Ig(t){return new ag(t)}function Sg(t){return new ig(t)}function Cg(t){return new og(t)}function Tg(t){return new ug(t)}function Eg(t){return new lg(t)}function $g(t){return new cg(t)}function Ag(t){return new hg(t)}function Rg(t){return new pg(t)}function _g(t){return new dg(t)}let Dg=0;function Fg(){return Dg++}const Og={};function Mg(t=""){return t in Og||(Og[t]=0),Og[t]+=1,t+Og[t].toString()}function Lg(t){return Array.isArray(t)&&Array.isArray(t[0])}function zg(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function Bg(t){let e;if(Array.isArray(t)){if(1!==t.length)throw new Df("Expected Tensor length to be 1; got "+t.length);e=t[0]}else e=t;return e}function Pg(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return(t=t)[0];throw new Df("Expected exactly 1 Shape; got "+t.length)}return t}function Wg(t){let e=0;for(const n of t)0===n.shape.length?e+=1:e+=n.shape.reduce(((t,e)=>t*e));return e}class Vg{constructor(t,e="float32",n="Variable",r=!0,s=null){this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=Fg(),n=null==n?"Variable":n,this.originalName=Sm(n),this.name=Cm(this.originalName),this.trainable_=r,this.constraint=s,this.val=dh(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function Ug(t){return t.map((t=>t.read()))}function Gg(t){t.forEach((t=>{t[0].write(t[1])}))}class jg{constructor(t){this.dtype=t.dtype,this.shape=t.shape,null!=t.shape?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class Hg{constructor(t,e,n,r,s,a,i){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=i,this.id=Fg(),null!=a&&(this.originalName=Sm(a),this.name=Cm(this.originalName)),this.rank=e.length}}let qg=0;class Kg{constructor(t,e){this.callArgs=e,this.id=qg++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const e of t.inboundLayers)null!=e&&e.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)null!=e?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Xg=0;class Yg extends Ti{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Xg++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const t=this.getClassName();e=Wf(t)+"_"+Mg(t)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let e;if(null!=t.batchInputShape)e=t.batchInputShape;else if(null!=t.inputShape){let n=null;null!=t.batchSize&&(n=t.batchSize),e=[n].concat(t.inputShape)}this.batchInputShape=e;let n=t.dtype;null==n&&(n=t.inputDType),null==n&&(n="float32"),this.dtype=n}null!=t.weights?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new _f(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new Df(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return Bf(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return Bf(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Rf("Layer "+this.name+' has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use `getInputAt(nodeIndex)` instead.');if(0===this.inboundNodes.length)throw new Rf("Layer "+this.name+" is not connected, no input to return.");return Bf(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Rf("Layer "+this.name+" has no inbound nodes.");if(this.inboundNodes.length>1)throw new Rf("Layer "+this.name+' has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use `getOutputAt(nodeIndex)` instead.');return Bf(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((t=>t()))}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach((e=>e.trainable=t)),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((t=>t.trainable)):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((t=>!t.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=Pf(t),null==this.inputSpec||0===this.inputSpec.length)return;const e=Pf(this.inputSpec);if(t.length!==e.length)throw new Df(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: `+t);for(let n=0;n<t.length;n++){const r=t[n],s=e[n];if(null==s)continue;const a=r.rank;if(null!=s.ndim&&a!==s.ndim)throw new Df(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(null!=s.maxNDim&&a>s.maxNDim)throw new Df(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(null!=s.minNDim&&a<s.minNDim)throw new Df(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new Df(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const t=r.shape;for(const e in s.axes){const r=Number(e),a=s.axes[e],i=r>=0?t[r]:t[t.length+r];if(null!=a&&-1===[a,null].indexOf(i))throw new Df(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${a} but got shape ${t}.`)}}if(null!=s.shape)for(let t=0;t<s.shape.length;++t){const e=s.shape[t],a=r.shape[t];if(null!=e&&null!=a&&e!==a)throw new Df(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=Pf(t);let r=!0;for(const t of n)if(!(t instanceof Hg)){r=!1;break}let s=!0;for(const t of n)if(t instanceof Hg){s=!1;break}if(r===s)throw new Df("Arguments to apply() must be all SymbolicTensors or all Tensors");return Im(this.name,(()=>{if(!this.built){this.assertInputCompatibility(t);const e=[];for(const n of Pf(t))e.push(n.shape);this.build(Bf(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(t),s){let r=this.call(t,e);const s=Pf(r),a=[];for(let t of s)-1!==n.indexOf(t)&&(t=t.clone()),a.push(t);if(r=Bf(a),null!=this.activityRegularizer)throw new Ff("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(t){t=Pf(t);const e=[];for(const n of t)e.push(n.shape);return Bf(e)}(t),r=this.computeOutputShape(n);let s;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new Hg(a,n,this,Pf(t),e,this.name,r))):new Hg(a,r,this,Pf(t),e,this.name),this.addInboundNode(t,s,null,null,n,r,e),this._refCount++,null!=this.activityRegularizer)throw new Ff("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn("The rank of the input tensor provided (shape: "+JSON.stringify(t)+") does not match that of the "+`batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer `+this.name);else{let e=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=t[r]&&t[r]!==n&&(e=!0)})),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: `+JSON.stringify(this.batchInputShape))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Rf(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);-1===t.indexOf(n)&&t.push(n)}if(1===t.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new Rf(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new _f(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Wg(this.weights)}build(t){this.built=!0}getWeights(t=!1){return Ug(t?this.trainableWeights:this.weights)}setWeights(t){Xi((()=>{const e=this.weights;if(e.length!==t.length)throw new Df(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(0===e.length)return;const n=[],r=Ug(e);for(let s=0;s<r.length;++s){const a=r[s],i=e[s],o=t[s];if(!st(a.shape,o.shape))throw new Df(`Layer weight shape ${a.shape} not compatible with provided weight shape `+o.shape);n.push([i,o])}Gg(n)}))}addWeight(t,e,n,r,s,a,i){if(-1!==this._addedWeightNames.indexOf(t))throw new Df(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=yg("zeros"));const o=r.apply(e,n),u=new Vg(o,n,t,a,i);return o.dispose(),null!=s&&this.addLoss((()=>s.apply(u.read()))),null==a&&(a=!0),a?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=Pf(t),void 0!==this._losses&&null!==this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);e.forEach((t=>{if(null!=t)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return e}addInboundNode(t,e,n,r,s,a,i=null){const o=Pf(t);e=Pf(e),n=Pf(n),r=Pf(r),s=zg(s),a=zg(a);const u=[],l=[],c=[];for(const t of o)u.push(t.sourceLayer),l.push(t.nodeIndex),c.push(t.tensorIndex);new Kg({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:o,outputTensors:e,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},i);for(let t=0;t<e.length;t++)e[t].sourceLayer=this,e[t].nodeIndex=this.inboundNodes.length-1,e[t].tensorIndex=t}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach((t=>t.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return 0==--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function Jg(t,e,n){if((null==e||null!=n&&n>0)&&(e=t.sourceLayer,n=t.nodeIndex),0===e.inboundNodes.length)return[t];{const t=e.inboundNodes[n];if(0===t.inboundLayers.length)return t.inputTensors;{const e=[];for(let n=0;n<t.inboundLayers.length;n++){const r=Jg(t.inputTensors[n],t.inboundLayers[n],t.nodeIndices[n]);for(const t of r)-1===e.indexOf(t)&&e.push(t)}return e}}}class Zg extends Yg{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:Mg("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new Df("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new Df("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new Df("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const r=new Hg(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Kg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new Df("Cannot pass any input to an InputLayer's apply() method. InputLayer name: "+this.name)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function Qg(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new Df("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));let n=t.dtype;return null==n&&(n="float32"),new Zg({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}async function ty(t){if(null==t)return;const e=[],n=[],r=[];for(const s in t){const a=t[s];if("number"!=typeof a){const t=a;e.push(t.data()),n.push(s),r.push(t)}}if(e.length>0){const s=await Promise.all(e);for(let e=0;e<s.length;++e)t[n[e]]=s[e][0];Yi(r)}}function ey(t){if(null!=t)for(const e in t){const n=t[e];"number"!=typeof n&&n.dispose()}}var ny;Zg.className="InputLayer",$i(Zg),function(t){t[t.SILENT=0]="SILENT",t[t.VERBOSE=1]="VERBOSE"}(ny||(ny={}));class ry{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class sy{constructor(t,e=10){null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class ay extends ry{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){null==e&&(e={});const n=null==e.size?0:e.size;this.seen+=n;for(const t in e){const r=e[t];if("number"==typeof r)this.totals.hasOwnProperty(t)||(this.totals[t]=0),this.totals[t]=this.totals[t]+r*n;else{let e;t in this.totals?e=this.totals[t]:this.totals[t]=0;const s=Xi((()=>uo(this.totals[t],ho(r,n))));this.totals[t]=s,null!=e&&e.dispose()}}}async onEpochEnd(t,e){if(null!=e)for(const t of this.params.metrics)null!=this.totals[t]&&("number"==typeof this.totals[t]?e[t]=this.totals[t]/this.seen:Xi((()=>{const n=ho(co(1,this.seen),this.totals[t]);e[t]=n,this.totals[t].dispose(),Ji(e[t])})))}}class iy extends ry{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){null==e&&(e={}),this.epoch.push(t);for(const t in e)null==this.history[t]&&(this.history[t]=[]),this.history[t].push(e[t])}async syncData(){const t=[],e=[],n=[];for(const r in this.history){const s=this.history[r];for(let a=0;a<s.length;++a)if("number"!=typeof s[a]){const i=s[a];t.push(i.data()),e.push(r),n.push(a)}}const r=await Promise.all(t);for(let t=0;t<r.length;++t)this.history[e[t]][n[t]].dispose(),this.history[e[t]][n[t]]=r[t][0]}}class oy extends ry{constructor(t,e){if(super(),this.currentEpoch=0,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");It(this.yieldEvery)&&(this.maybeWait=function(t,e){let n,r=ts();return(...s)=>{const a=ts();return a-r<e||(r=a,n=t(...s)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const r=[];null!=this.yield&&(await ty(n),r.push(this.yield(t,e,n))),r.push(Vp()),await Promise.all(r)}async onEpochBegin(t,e){this.currentEpoch=t,null!=this.epochBegin&&(await ty(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];null!=this.epochEnd&&(await ty(e),n.push(this.epochEnd(t,e))),"epoch"===this.yieldEvery&&n.push(Vp()),await Promise.all(n)}async onBatchBegin(t,e){null!=this.batchBegin&&(await ty(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];null!=this.batchEnd&&(await ty(e),n.push(this.batchEnd(t,e))),"batch"===this.yieldEvery?n.push(Vp()):It(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){null!=this.trainBegin&&(await ty(t),await this.trainBegin(t))}async onTrainEnd(t){null!=this.trainEnd&&(await ty(t),await this.trainEnd(t))}}function uy(t,e){return null==t&&(t={}),t instanceof ry?[t]:Array.isArray(t)&&t[0]instanceof ry?t:Pf(t).map((t=>new oy(t,e)))}class ly{constructor(){}static registerCallbackConstructor(t,e){Z(t>=0&&Number.isInteger(t),(()=>"Verbosity level is expected to be an integer >= 0, but got "+t)),ly.checkForDuplicate(e),null==ly.constructors[t]&&(ly.constructors[t]=[]),ly.constructors[t].push(e)}static checkForDuplicate(t){for(const e in ly.constructors)ly.constructors[+e].forEach((e=>{if(e===t)throw new Df("Duplicate callback constructor.")}))}static clear(){ly.constructors={}}static createCallbacks(t){const e=[];for(const n in ly.constructors){const r=+n;t>=r&&e.push(...ly.constructors[r])}return e.map((t=>new t))}}function cy(t,e,n,r,s,a,i,o,u){const l=new iy,c=[new ay,...ly.createCallbacks(e)];null!=t&&c.push(...t),c.push(l);const h=new sy(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:i,verbose:e,doValidation:o,metrics:u}),{callbackList:h,history:l}}function hy(t,e={},n=!1){return Hf(t,Ei.getMap().classNameMap,e,"layer",n)}function py(t,e){return Xi((()=>{"float32"!==t.dtype&&(t=t.asType("float32"));const n=Ml(jm(t),e,!0),r=Co(n.shape,Af()),s=po(Oo(n,r));return co(t,s)}))}function dy(t,e){return Xi((()=>Kl(jm($o(e,t)),-1)))}function fy(t,e){return Xi((()=>Kl(Ro($o(e,t)),-1)))}function my(t,e){return Xi((()=>{const n=$o(t,e),r=Mu(Ro(t),Af(),Number.MAX_VALUE),s=Ro(co(n,r));return ho(100,Kl(s,-1))}))}function gy(t,e,n=!1){return Xi((()=>{if(n)e=jc(e);else{const t=Ml(e,e.shape.length-1,!0);e=co(e,t)}return e=Mu(e,Af(),1-Af()),_l(Ml(ho(t.toFloat(),Al(e)),e.shape.length-1))}))}function yy(t,e,n=!1){return Xi((()=>{const r=pl(function(t){const e=[$m(t.shape)];return t.reshape(e)}(t)).toInt(),s=(e=Mu(e,Af(),1-Af())).shape;return gy(ei(r,s[s.length-1]).reshape(s),e,n)}))}function by(t,e){return Xi((()=>{let n;return n=Mu(e,Af(),1-Af()),n=Al(co(n,$o(1,n))),Kl(function(t,e){if(!st(t.shape,e.shape))throw new Df(`logits and labels must have the same shape, but got shapes ${JSON.stringify(t.shape)} and ${JSON.stringify(e.shape)}`);return Xi((()=>{const n=e.relu(),r=e.abs().neg();return n.sub(e.mul(t)).add(r.exp().log1p())}))}(t,n),-1)}))}function xy(t,e){return Xi((()=>{const n=py(t,-1),r=py(e,-1),s=ho(n,r);return _l(Ml(s,-1))}))}ly.constructors={};const vy={meanSquaredError:dy,meanAbsoluteError:fy,meanAbsolutePercentageError:my,meanSquaredLogarithmicError:function(t,e){return Xi((()=>{const n=Mu(e,Af(),Number.MAX_VALUE),r=Al(uo(1,n)),s=Mu(t,Af(),Number.MAX_VALUE),a=Al(uo(1,s));return Kl(jm($o(r,a)),-1)}))},squaredHinge:function(t,e){return Xi((()=>{const n=Oo(0,$o(1,ho(t,e)));return Kl(jm(n),-1)}))},hinge:function(t,e){return Xi((()=>{const n=Oo(0,$o(1,ho(t,e)));return Kl(n,-1)}))},categoricalHinge:function(t,e){return Xi((()=>{const n=Ml(ho(t,e),-1),r=Ol(ho($o(1,t),e),-1);return Oo(0,uo(1,$o(r,n)))}))},logcosh:function(t,e){return Xi((()=>{const n=Math.log(2),r=$o(e,t),s=$o(uo(r,Dl(ho(-2,r))),n);return Kl(s,-1)}))},categoricalCrossentropy:gy,sparseCategoricalCrossentropy:yy,binaryCrossentropy:by,kullbackLeiblerDivergence:function(t,e){return Xi((()=>{const n=Mu(t,Af(),1),r=Mu(e,Af(),1);return Ml(ho(t,Al(co(n,r))),-1)}))},poisson:function(t,e){return Xi((()=>{const n=Al(uo(Af(),e));return Kl($o(e,ho(t,n)),-1)}))},cosineProximity:xy};function wy(t){if("string"==typeof t){if(t in vy)return vy[t];let e="Unknown loss "+t;throw t.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${t}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Df(e)}return t}function ky(t,e){return Xi((()=>{const n=ho(.5,sc(e)),r=Fm(xl(e,n),t.dtype);return Kl(el(t,r),-1)}))}function Ny(t,e){return Xi((()=>Fm(el(Qo(t,-1),Qo(e,-1)),"float32")))}function Iy(t,e){return Xi((()=>Bl(t.equal(1),e.equal(1)).sum().cast("float32")))}function Sy(t,e){return Xi((()=>{const n=Iy(t,e),r=function(t,e){return Xi((()=>Bl(t.equal(0),e.equal(1)).sum().cast("float32")))}(t,e),s=n.add(r);return nl(xl(s,0),n.div(s),0).cast("float32")}))}function Cy(t,e){return by(t,e)}function Ty(t,e){return t.rank===e.rank&&(t=t.squeeze([t.rank-1])),(e=e.argMax(-1)).dtype!==t.dtype&&(e=e.asType(t.dtype)),el(t,e).asType("float32")}const Ey=gy,$y=yy,Ay={binaryAccuracy:ky,categoricalAccuracy:Ny,precision:Sy,categoricalCrossentropy:Ey,sparseCategoricalCrossentropy:$y,mse:dy,MSE:dy,mae:fy,MAE:fy,mape:my,MAPE:my,cosine:xy};function Ry(t){if("string"==typeof t&&t in Ay)return Ay[t];if("string"!=typeof t&&null!=t)return t;throw new Df("Unknown metric "+t)}function _y(t){if(Lf(null!==t,"Unknown LossOrMetricFn "+t),"string"==typeof t)return t;{let e;for(const n of Object.keys(vy))if(vy[n]===t){e=n;break}if(void 0!==e)return e;for(const n of Object.keys(Ay))if(Ay[n]===t){e=n;break}return void 0!==e?e:t.name}}function Dy(t,e,n=!1){if(null==t||"object"!=typeof t||Object.getPrototypeOf(t)!==Object.prototype||!Fy(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(t);n.length>1048576&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Fy(t){if(null===t)return!0;if("object"==typeof t){if(Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);for(const n of e){if("string"!=typeof n)return!1;if(!Fy(t[n]))return!1}return!0}if(Array.isArray(t)){for(const e of t)if(!Fy(e))return!1;return!0}return!1}{const e=typeof t;return"string"===e||"number"===e||"boolean"===e}}function Oy(t,e,n=console.log){let r="";for(let n=0;n<t.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=t[n],r=r.slice(0,e[n]),r+=" ".repeat(e[n]-r.length);n(r)}function My(t,e,n){let r;try{r=JSON.stringify(t.outputShape)}catch(t){r="multiple"}Oy([`${t.name} (${t.getClassName()})`,r,t.countParams().toString()],e,n)}function Ly(t,e,n,r){let s;try{s=JSON.stringify(t.outputShape)}catch(t){s="multiple"}const a=[];for(const e of t.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(e)))for(let t=0;t<e.inboundLayers.length;++t){const n=e.inboundLayers[t].name,r=e.nodeIndices[t],s=e.tensorIndices[t];a.push(`${n}[${r}][${s}]`)}const i=t.name,o=t.getClassName(),u=0===a.length?"":a[0];Oy([`${i} (${o})`,s,t.countParams().toString(),u],e,r);for(let t=1;t<a.length;++t)Oy(["","","",a[t]],e,r)}function zy(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"==typeof n}function By(t,e){if(null===t)return null;if("string"==typeof t)return Vf(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let s=0;s<r;++s){const r=t[s];zy(e,s,r)?n.push(r):n.push(By(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];if("name"===n&&"string"==typeof r)e[n]=r;else{const t=Vf(n);e[t]=By(r,t)}}return e}}function Py(t,e){if(null==t)return null;if("string"==typeof t)return Wf(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let s=0;s<r;++s){const r=t[s];zy(e,s,r)?n.push(r):n.push(Py(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];e[Wf(n)]="name"!==n&&"className"!==n||"string"!=typeof r?Py(r,n):r}return e}}const Wy="2.7.0";class Vy{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof Vy)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(null!=this.id2Value[t.id])throw new Df(`Duplicate key: name=${t.name}, id=${t.id}`);return this.id2Value[t.id]=function(t,e){if(null==t.dtype||t.dtype===e.dtype)return e;try{return Da(e,t.dtype)}catch(n){throw new Df(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${t.name}' (${t.dtype}).`)}}(t,e),this.name2Id[t.name]=t.id,null!=n&&(this.id2Mask[t.id]=n),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof Hg){if(null==this.id2Value[t.id])throw new Df("Nonexistent key: "+t.name);return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new Df("Feed dict has no SymbolicTensor name: "+t);return this.id2Value[e]}}getMask(t){if(t instanceof Hg){if(null==this.id2Value[t.id])throw new Df("Nonexistent key: "+t.name);return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new Df("Feed dict has no SymbolicTensor name: "+t);return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&Yi(this.id2Mask)}}const Uy={},Gy={};function jy(t,e,n,r){const s=null!=n&&n.training,a=Array.isArray(t),i=a?t:[t],o=i.map((t=>t.name)),u=[],l=e.names();for(const t of o)-1!==l.indexOf(t)?u.push(e.getValue(t)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+e.names().join(",");let h,p;if(null==Uy[c]){const t=function(t,e){Z(null!=t&&t.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===t.length){const s=qy(t[0],e);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const a of t){const{sorted:t,recipientMap:i}=qy(a,e);for(const e of t)s.has(e.name)||(n.push(e),s.add(e.name));for(const t in i)null==r[t]&&(r[t]=new Set),i[t].forEach((e=>r[t].add(e)))}}return{sorted:n,recipientCounts:Hy(r)}}(i,e);h=t.sorted,p=t.recipientCounts,Uy[c]=h,Gy[c]=p}h=Uy[c],p={},s||Object.assign(p,Gy[c]);const d=new Vy(e);for(let t=0;t<h.length;++t){if(null!=r){const t=qi().numTensors;t>r.maxNumTensors&&(r.maxNumTensors=t),t<r.minNumTensors&&(r.minNumTensors=t)}const a=h[t],i=a.sourceLayer;if(i instanceof Zg)continue;const l=[],c=[],f=[];let m=!1;for(const t of a.inputs){const n=d.getValue(t),r=d.getMask(t);l.push(n),c.push(r),null!=r&&(m=!0),s||(p[t.name]--,0!==p[t.name]||e.hasKey(t)||-1!==o.indexOf(t.name)||n.isDisposed||!0===t.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=Pf(i.apply(l,n));let y=null;i.supportsMasking&&(y=i.computeMask(l,c));const b=Ky(a),x=Array.isArray(b)?b:[b];for(let t=0;t<x.length;++t){d.hasKey(x[t])||d.add(x[t],g[t],Array.isArray(y)?y[0]:y);const e=o.indexOf(x[t].name);-1!==e&&(u[e]=g[t])}s||Yi(f)}return d.disposeMasks(),a?u:u[0]}function Hy(t){const e={};for(const n in t)e[n]=t[n].size;return e}function qy(t,e){const n=new Set,r=[],s={};for(const t of e.names())n.add(t);const a=[],i=[];for(a.push(t);a.length>0;){const t=a[a.length-1];if(n.has(t.name)){a.pop();continue}const e=i[i.length-1]===a.length-1;if(0===t.inputs.length||e)a.pop(),r.push(t),n.add(t.name),e&&i.pop();else{i.push(a.length-1);for(const e of t.inputs)null==s[e.name]&&(s[e.name]=new Set),s[e.name].add(t.name),n.has(e.name)||a.push(e)}}return{sorted:r,recipientMap:s}}function Ky(t){let e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{let n=null;for(let e=0;e<t.sourceLayer.inboundNodes.length;++e)for(const r of t.sourceLayer.inboundNodes[e].outputTensors)if(r.id===t.id){n=e;break}e=t.sourceLayer.getOutputAt(n)}return e}class Xy extends Yg{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const t=this.getClassName().toLowerCase();this.name=Mg(t)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],Kf(this.inputs).length!==this.inputs.length)throw new Df("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+this.inputs.map((t=>t.name)));Kf(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+this.outputs.map((t=>t.name))),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const t of this.outputs){const e=t.sourceLayer,n=t.nodeIndex,r=t.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const t of this.inputs){const e=t.sourceLayer,n=t.nodeIndex,r=t.tensorIndex;Lf(0===n,"input layer has >1 nodes"),Lf(0===r,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e];if(!(n instanceof Zg))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${e} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const t of this.outputLayers)this.outputNames.push(t.name);this.internalInputShapes=this.inputs.map((t=>t.shape)),this.internalOutputShapes=this.outputs.map((t=>t.shape));const e={},n={},r={},s={},a={},i=[],o=(t,e,n,r,s,u)=>{null!=r&&null!=s&&null!=u||(r=t.sourceLayer,s=t.nodeIndex,u=t.tensorIndex);const l=r.inboundNodes[s];if(-1!==n.indexOf(l))throw new _f(`The tensor ${t.name} at layer "${r.name}" is part of a cycle.`);if(-1!==e.indexOf(l))return;this.containerNodes.add(Xy.nodeKey(r,s)),r.id in a||(a[r.id]=Object.keys(a).length),-1===n.indexOf(l)&&n.push(l);const c=l.inboundLayers.length;for(let t=0;t<c;t++){const r=l.inputTensors[t],s=l.inboundLayers[t],a=l.nodeIndices[t],i=l.tensorIndices[t];o(r,e,n,s,a,i)}for(e.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);i.push(l)},u=[],l=[];for(const t of this.outputs)o(t,u,l);const c=i.slice().reverse();for(const t of c){n[t.id]=t,t.id in e||(e[t.id]=0);let a=e[t.id];const i=null==r[t.outboundLayer.id]?0:r[t.outboundLayer.id];a=Math.max(a,i),r[t.outboundLayer.id]=a,s[t.outboundLayer.id]=t.outboundLayer,e[t.id]=a;for(let r=0;r<t.inboundLayers.length;r++){const s=t.inboundLayers[r],i=t.nodeIndices[r],o=s.inboundNodes[i],u=null==e[o.id]?0:e[o.id];e[o.id]=Math.max(a+1,u),n[o.id]=o}}const h={};for(const t in e){const r=e[t];r in h||(h[r]=[]),h[r].push(n[t])}const p={};for(const t in r){const e=r[t];e in p||(p[e]=[]),p[e].push(s[t])}let d=Object.keys(p).map((t=>parseInt(t,10))).sort(qf);this.layers=[];for(const t of d){const e=p[t];e.sort(((t,e)=>{const n=a[t.id],r=a[e.id];return n<r?-1:n>r?1:0}));for(const t of e)t instanceof Xy&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=p,d=Object.keys(h).map((t=>parseInt(t,10))).sort(qf);const f=this.inputs.slice(),m=[];for(const t of d)for(const e of h[t]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new _f("Graph disconnected: cannot obtain value for tensor "+n+` at layer "${t.name}". The following previous layers were accessed without issue: `+m);for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=h;const g=this.layers.map((t=>t.name));for(const t of g){const e=g.filter((e=>e===t)).length;if(1!==e)throw new _f(`The name "${t}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Kg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((t=>null)),outputMasks:this.outputs.map((t=>null)),inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs.map((t=>t.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach((e=>{e._trainableWeights.forEach((e=>e.trainable=t))})),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new Df("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.layers)e.push(...t.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const n={};let r=0;for(const t of this.layers)for(const e of t.weights){if(null!=n[e.originalName])throw new Df("Duplicate weight name: "+e.originalName);n[e.originalName]=e,r++}const s=[];for(const r in t){let a=r;if(null==n[r]){const t=r.split("/");a=t.slice(0,-2).concat([t[t.length-1]]).join("/")}if(null!=n[a])s.push([n[a],t[r]]);else if(e)throw new Df("Provided weight data has no target variable: "+r);delete n[a]}if(e){const t=[];for(const e in n)t.push(e);if(t.length>0)throw new Df(`${t.length} of ${r} weights are not set: `+t)}Gg(s)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion="tfjs-layers "+Wy,e.backend="TensorFlow.js",e}toJSON(t,e=!0){const n=Py(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return Xi((()=>{t=Pf(t);const n=new Vy;for(let e=0;e<this.inputs.length;++e)n.add(this.inputs[e],t[e]);return jy(this.outputs,n,e)}))}computeMask(t,e){return Xi((()=>{let n;return t=Pf(t),n=null==e?Mf(null,t.length):Pf(e),this.runInternalGraph(t,n)[1]}))}computeOutputShape(t){const e=zg(t);if(e.length!==this.inputLayers.length)throw new Df(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let t=0;t<e.length;t++){const r=this.inputLayers[t],s=e[t];n[r.name+"_0_0"]=s}const r=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(qf);if(r.length>1)for(const t of r){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((t=>t.id)).indexOf(e.id))continue;const r=[];for(let e=0;e<t.inboundLayers.length;e++){const s=t.inboundLayers[e],a=t.nodeIndices[e],i=t.tensorIndices[e],o=n[`${s.name}_${a}_${i}`];r.push(o)}const s=zg(e.computeOutputShape(Bf(r))),a=e.inboundNodes.indexOf(t);for(let t=0;t<s.length;t++)n[`${e.name}_${a}_${t}`]=s[t]}}const s=[],a=[];for(let t=0;t<this.outputLayers.length;t++){const e=this.outputLayers[t],n=this.outputLayersNodeIndices[t],r=this.outputLayersTensorIndices[t],s=`${e.name}_${n}_${r}`;a.push(s)}for(let t=0;t<a.length;t++){const e=a[t];Lf(e in n),s.push(n[e])}return Bf(s)}runInternalGraph(t,e){null==e&&(e=Mf(null,t.length));const n={};for(let r=0;r<this.inputs.length;++r){const s=this.inputs[r],a=t[r],i=e[r];n[s.id]=[a,i]}const r=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(qf);for(const t of r){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer,r=t.inputTensors,s=t.outputTensors,a=new Array;for(const t of r)t.id in n&&a.push(n[t.id]);if(a.length===r.length){let r,i,o,u,l={};if(null!=t.callArgs&&(l=t.callArgs),1===a.length){const[t,n]=a[0];null==l.mask&&(l.mask=n),o=Pf(e.call(t,l)),u=Pf(e.computeMask(t,n)),r=[t],i=[n]}else r=a.map((t=>t[0])),i=a.map((t=>t[1])),null==l.mask&&(l.mask=i),o=Pf(e.call(r,l)),u=Pf(e.computeMask(r,i));if(e.activityRegularizer)throw new Ff("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let t=0;t<s.length;++t){const e=s[t],r=o[t],a=u[t];n[e.id]=[r,a]}}}}const s=[],a=[],i=[];for(const t of this.outputs){Lf(t.id in n,`Could not compute output ${t.name} : ${t.id}`);const[e,r]=n[t.id];i.push(e.shape),s.push(e),a.push(r)}return[s,a,i]}buildNodeConversionMap(t){const e={};let n;for(const t of this.layers){n=t instanceof Xy?1:0;for(let r=0;r<t.inboundNodes.length;r++){const s=Xy.nodeKey(t,r);this.containerNodes.has(s)&&(e[s]=n,n+=1)}}return e}getLayer(t,e){if(null!=e){if(this.layers.length<=e)throw new Df(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}if(null==t)throw new Df("Provide either a layer name or layer index");for(const e of this.layers)if(e.name===t)return e;throw new Df("No such layer: "+t)}calculateLosses(){return Xi((()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const r=Xy.nodeKey(e,n);this.containerNodes.has(r)&&t.push(...e.calculateLosses())}return t}))}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const t of this.layers){const r=t.getClassName(),s=t.getConfig(),a=[];for(let n=0;n<t.inboundNodes.length;n++){const r=t.inboundNodes[n],s=Xy.nodeKey(t,n);let i={};if(this.containerNodes.has(s)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(e){console.warn(`Layer ${t.name} was passed non-serializable keyword arguments: `+r.callArgs+". They will not be included in the serialized model (and thus will be missing at deserialization time)."),i={}}if(r.inboundLayers.length>0){const t=[];for(let n=0;n<r.inboundLayers.length;n++){const s=r.inboundLayers[n],a=r.nodeIndices[n],o=r.tensorIndices[n];let u=e[Xy.nodeKey(s,a)];null==u&&(u=0),t.push([s.name,u,o,i])}a.push(t)}}}const i={};i.name=t.name,i.className=r,i.config=s,i.inboundNodes=a,n.push(i)}t.layers=n;const r=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t],s=this.inputLayersNodeIndices[t],a=Xy.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let i=e[a];null==i&&(i=0);const o=this.inputLayersTensorIndices[t];r.push([n.name,i,o])}t.inputLayers=r;const s=[];for(let t=0;t<this.outputLayers.length;t++){const n=this.outputLayers[t],r=this.outputLayersNodeIndices[t],a=Xy.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let i=e[a];null==i&&(i=0);const o=this.outputLayersTensorIndices[t];s.push([n.name,i,o])}return t.outputLayers=s,t}static fromConfig(t,e,n={},r=!1){const s={},a={};function i(t,e){t.name in a?a[t.name].push(e):a[t.name]=[e]}function o(t,e){const n=[];let r;for(const a of e){const o=a[0],u=a[1],l=a[2];if(r=null==a[3]?{}:a[3],!(o in s))return void i(t,e);const c=s[o];if(c.inboundNodes.length<=u)return void i(t,e);const h=c.inboundNodes[u];n.push(h.outputTensors[l])}n.length>0&&t.apply(Bf(n),r)}function u(t){const n=t.name,a=hy(t,null!=e.customObjects?e.customObjects:{});a.setFastWeightInitDuringBuild(r),s[n]=a,t.inboundNodes.forEach((t=>{if(!(t instanceof Array))throw new Df("Corrupted configuration, expected array for nodeData: "+t);i(a,t)}))}const l=e.name,c=e.layers;for(const t of c)u(t);for(;!Xf(a);)for(const t of c){const e=s[t.name];if(e.name in a){const t=a[e.name];delete a[e.name];for(const n of t)o(e,n)}}const h=[],p=[],d=e.inputLayers;for(const t of d){const e=t[0],n=t[1],r=t[2];Lf(e in s);const a=s[e].inboundNodes[n].outputTensors;h.push(a[r])}const f=e.outputLayers;for(const t of f){const e=t[0],n=t[1],r=t[2];Lf(e in s);const a=s[e].inboundNodes[n].outputTensors;p.push(a[r])}return new t({inputs:h,outputs:p,name:l})}get stateful(){if(this._stateful)throw new Df("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){Xi((()=>{this.layers.forEach((t=>{t.stateful&&t.resetStates()}))}))}}function Yy(t,e){return function(t,e,n){const r=e.length;if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>null));if(1===r)return Array.isArray(t)&&1===t.length?t:"object"==typeof t&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==r)throw new Error(`Provided ${n} is an array of ${t.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return t}if("object"==typeof t&&Object.keys(t).length>0&&"object"==typeof t[Object.keys(t)[0]]){const n=[];return e.forEach((e=>{e in t?n.push(t[e]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${e} keys. Provided ${n} not understood: ${JSON.stringify(t)}`)}(t,e,"classWeight")}async function Jy(t,e,n,r){if(null!=e||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const e=Xi((()=>{if(1===t.shape.length)return t.clone();if(2===t.shape.length){if(t.shape[1]>1){const e=1;return t.argMax(e)}if(1===t.shape[1])return t.reshape([t.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${t.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${t.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await e.data());Yi(e);const s=[];return r.forEach((t=>{if(null==n[t])throw new Error(`classWeight must contain all classes in the training data. The class ${t} exists in the data but not in classWeight`);s.push(n[t])})),Nc(s,"float32")}return null}function Zy(t,e){return ho(t,e)}function Qy(t,e){let n,r;const s=e;n=s.xs,r=s.ys,Z(null!=n&&null!=r,(()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+e));const a=tb("input",t.inputNames,n),i=tb("output",t.outputNames,r),o=a[0].shape[0];Z(a.length===t.inputs.length,(()=>`LayersModel has ${t.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: `+JSON.stringify(t.inputNames)+")")),Z(i.length===t.outputs.length,(()=>`LayersModel has ${t.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: `+JSON.stringify(t.outputNames)+")"));for(let e=0;e<a.length;e++)Z(a[e].shape[0]===o,(()=>`Batch size mismatch: input ${t.inputNames[e]} has ${a[e].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`));for(let e=0;e<i.length;e++)Z(i[e].shape[0]===o,(()=>`Batch size mismatch: output ${t.outputNames[e]} has ${i[e].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`));return{xs:a,ys:i}}function tb(t,e,n){if(n instanceof us)return[n];if(Array.isArray(n))return Z(n.length===e.length,(()=>`Received an array of ${n.length} Tensors, but expected ${e.length} to match the ${t} keys ${e}.`)),n;{const r=[];for(const s of e){if(null==n[s])throw new Df(`The feature data generated by the dataset lacks the required ${t} key '${s}'.`);r.push(n[s])}return r}}function eb(t){return"function"==typeof t.iterator}function nb(t){Z(t>0&&Number.isInteger(t),(()=>"batchSize is required to be a positive integer, but got "+t))}function rb(t,e,n){return null==t?[null]:Array.isArray(t)?t.map((t=>Mm(t,e,n-e))):Mm(t,e,n-e)}function sb(t,e){return Xi((()=>null==t?null:Array.isArray(t)?t.map((t=>sb(t,e))):Gm(t,"int32"===e.dtype?e:e.toInt())))}function ab(t,e){const n=[];let r=0,s=null;for(;r<t;)s=r+e,s>=t&&(s=t),n.push([r,s]),r=s;return n}function ib(t){const e=[];t instanceof us&&(t=[t]);for(let n=0;n<t.length;++n){const r=t[n];if(1===r.rank)e.push(Om(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(r)}}return e}function ob(t,e){if(null==t)return;const n=[];if(e instanceof us)n.push(e.id);else if(Array.isArray(e))e.forEach((t=>n.push(t.id)));else if(null!=e)for(const t in e){const r=e[t];n.push(r.id)}const r=[];if(t instanceof us)-1===n.indexOf(t.id)&&r.push(t);else if(Array.isArray(t))t.forEach((t=>{-1===n.indexOf(t.id)&&r.push(t)}));else if(null!=t)for(const e in t){const s=t[e];-1===n.indexOf(s.id)&&r.push(s)}r.forEach((t=>{t.isDisposed||t.dispose()}))}function ub(t){return Array.isArray(t)}function lb(t){return!function(t){return t instanceof us}(t)&&!ub(t)}function cb(t,e,n,r=!0,s=""){if(null==e||0===e.length){if(null!=t){let e=!1;if(ub(t)&&t.length>0)e=!0;else if(lb(t)){for(const n in t)if(t.hasOwnProperty(n)){e=!0;break}}else e=!0;if(e)throw new Df(`Error when checking model ${s} expected no data, but got `+t)}return[]}if(null==t)return e.map((t=>null));let a;if(lb(t)){t=t,a=[];for(const n of e){if(null==t[n])throw new Df(`No data provided for "${n}". Need data for each key in: `+e);a.push(t[n])}}else if(ub(t)){if((t=t).length!==e.length)throw new Df(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): `+t);a=t}else{if(t=t,e.length>1)throw new Df(`The model ${s} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape `+t.shape);a=[t]}if(a=ib(a),null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const i=a[t];if(i.shape.length!==n[t].length)throw new Df(`Error when checking ${s}: expected ${e[t]} to have ${n[t].length} dimension(s). but got array with shape `+i.shape);for(let a=0;a<n[t].length;++a){if(0===a&&!r)continue;const o=i.shape[a],u=n[t][a];if(null!=u&&u>=0&&o!==u)throw new Df(`Error when checking ${s}: expected ${e[t]} to have shape [${n[t]}], but got array with shape [${i.shape}].`)}}return a}function hb(t,e,n,r=!0,s=""){let a;if(Array.isArray(t)){if(t.length!==e.length)throw new Df(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${t.length} Tensors(s).`);a=t}else{if(e.length>1)throw new Df(`The model expects ${e.length} ${s} Tensors, but only received one Tensor. Found: array with shape `+JSON.stringify(t.shape)+".");a=[t]}if(null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const i=a[t];if(i.shape.length!==n[t].length)throw new Df(`Error when checking ${s}: expected ${e[t]} to have ${n[t].length} dimension(s), but got array with shape `+JSON.stringify(i.shape));for(let a=0;a<n[t].length;++a){if(0===a&&!r)continue;const o=i.shape[a],u=n[t][a];if(null!=u&&u!==o)throw new Df(`Error when checking ${s}: expected ${e[t]} to have shape ${JSON.stringify(n[t])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class pb extends Xy{constructor(t){super(t),this.isTraining=!1}summary(t,e,n=console.log){if(!this.built)throw new Df("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(t,e,n,r=console.log){const s=function(t){let e=!0;const n=[],r=[];for(const e in t.nodesByDepth)n.push(t.nodesByDepth[e]);for(const t of n){if(t.length>1||1===t.length&&t[0].inboundLayers.length>1){e=!1;break}r.push(...t)}if(e)for(const n of t.layers){let t=!1;for(const s of n.inboundNodes)if(-1!==r.indexOf(s)){if(t){e=!1;break}t=!0}if(!e)break}return e}(t),a=["Layer (type)","Output shape","Param #"];let i;if(s?(e=e||65,n=n||[.45,.85,1]):(e=e||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((t=>Math.floor(e*t)))),!s){a.push("Receives inputs"),i=[];for(const e in t.nodesByDepth)i.push(...t.nodesByDepth[e])}r("_".repeat(e)),Oy(a,n,r),r("=".repeat(e));const o=t.layers;for(let t=0;t<o.length;++t)s?My(o[t],n,r):Ly(o[t],n,i,r),r((t===o.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const u=function(t){let e;return e=null!=t.collectedTrainableWeights?Wg(t.collectedTrainableWeights):Wg(t.trainableWeights),e}(t),l=Wg(t.nonTrainableWeights);r("Total params: "+(u+l)),r("Trainable params: "+u),r("Non-trainable params: "+l),r("_".repeat(e))}(this,t,e,n)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"==typeof t.optimizer)this.optimizer_=function(t){const e={Adagrad:()=>Pp.adagrad(.01),Adadelta:()=>Pp.adadelta(1,.95,Af()),Adam:()=>Pp.adam(.001,.9,.999,Af()),Adamax:()=>Pp.adamax(.002,.9,.999,Af(),0),RMSProp:()=>Pp.rmsprop(.001,.9,0,Af()),SGD:()=>Pp.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new Df("Unknown Optimizer "+t)}(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof Io))throw new Df("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"==typeof t.loss||"function"==typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new Df(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);const n=t.loss;e=n.map((t=>wy(t)))}else{const n=wy(t.loss);this.outputs.forEach((t=>{e.push(n)}))}else{t.loss=t.loss;for(const e in t.loss)if(-1===this.outputNames.indexOf(e))throw new Df(`Unknown entry in loss dictionary: "${e}". Only expected the following keys: `+this.outputNames);for(const n of this.outputNames)null==t.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),e.push(wy(t.loss[n]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let t=0;t<this.outputs.length;++t){const e=this.internalOutputShapes[t],n=this.outputNames[t];this.feedOutputNames.push(n),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[t])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Im("loss",(()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=this.lossFunctions[t];this.outputs.length>1&&(this.metricsTensors.push([e,t]),this.metricsNames.push(this.outputNames[t]+"_loss"))}}));const r=function(t,e){if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>[]));let n;if("string"==typeof t||"function"==typeof t)n=[t];else{if(!Array.isArray(t)&&"object"!=typeof t)throw new TypeError("Type of metrics argument not understood. Expected an string,function, Array, or Object, found: "+t);n=t}if(Array.isArray(n))return e.map((t=>n));{const t=[];for(const r of e){let e=n.hasOwnProperty(r)?n[r]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}}(t.metrics,this.outputNames),s=(t,e,n)=>{this.outputNames.length>1&&(e=this.outputNames[t]+"_"+e),this.metricsNames.push(e),this.metricsTensors.push([n,t])};Im("metric",(()=>{for(let t=0;t<this.outputs.length;++t)-1===n.indexOf(t)&&(e=>{let n,r,a;for(const i of e){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const e=this.internalOutputShapes[t];let s;1===e[e.length-1]||this.lossFunctions[t]===by?-1!==["accuracy","acc"].indexOf(i)?r=ky:-1!==["crossentropy","ce"].indexOf(i)&&(r=Cy):this.lossFunctions[t]===yy?-1!==["accuracy","acc"].indexOf(i)?r=Ty:-1!==["crossentropy","ce"].indexOf(i)&&(r=$y):-1!==["accuracy","acc"].indexOf(i)?r=Ny:-1!==["crossentropy","ce"].indexOf(i)&&(r=Ey),-1!==["accuracy","acc"].indexOf(i)?s="acc":-1!==["crossentropy","ce"].indexOf(i)&&(s="ce"),a=r,n=""+s}else{const t=Ry(i);a=t,n=""+_y(i)}let e;Im(n,(()=>{e=a})),s(t,n,e)}})(r[t])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,n={}){const r=null==n.batchSize?32:n.batchSize;nb(r);const s=this.standardizeUserDataXY(t,e,!0,r);try{const a=s[0].concat(s[1]);this.makeTestFunction();const i=this.testFunction;return Bf(this.testLoop(i,a,r,n.verbose,n.steps))}finally{ob(s[0],t),ob(s[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),async function(t,e,n){const r=null!=(n=n||{}).batches,s=t.testFunction;let a=[];if(n.verbose>0)throw new Ff("Verbose mode is not implemented yet.");Z(!r||n.batches>0&&Number.isInteger(n.batches),(()=>"Test loop expects `batches` to be a positive integer, but received "+JSON.stringify(n.batches)));const i="function"==typeof e.next?e:await e.iterator();let o=0,u=0;for(;!r||u<n.batches;){const e=await i.next();if(a=Xi((()=>{if(e.value){const{xs:n,ys:r}=Qy(t,e.value),i=n.concat(r),l=Xi((()=>s(i)));if(Yi(i),0===u)for(let t=0;t<l.length;++t)a.push(No(0));const c=i[0].shape[0];for(let t=0;t<l.length;++t){const e=l[t],n=a[t];a[t]=Xi((()=>uo(a[t],ho(c,e)))),u>0&&Yi(n)}Yi(l),o+=c,++u}return a})),e.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let t=0;t<a.length;++t){const e=a[t];a[t]=co(a[t],o),Yi(e)}return Bf(a)}(this,t,e)}checkNumSamples(t,e,n,r="steps"){let s;if(null!=n){if(s=null,null!=e)throw new Df(`If ${r} is set, batchSize must be null or undefined.Got batchSize = `+e)}else{if(null==t)throw new Df("Either the input data should have a defined shape, or "+r+" shoud be specified.");s=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return s}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new Df("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),r=n?e:[e],s=this.retrieveSymbolicTensors(r),a=new Vy;if(t instanceof us&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new Df(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let e=0;e<this.inputs.length;++e)a.add(this.inputs[e],t[e])}else for(const e of this.inputs){const n=t[e.name];if(null==n)throw new Df("No value is provided for the model's input "+e.name);a.add(e,n)}const i=jy(s,a);return n?i:i[0]}retrieveSymbolicTensors(t){const e=Mf(null,t.length);let n=t.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],a=s.map((t=>t.name));for(let r=0;r<t.length;++r){const i=a.indexOf(t[r]);if(-1!==i&&(e[r]=s[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw e.forEach(((e,r)=>{null==e&&n.push(t[r])})),new Df("Cannot find SymbolicTensors for output name(s): "+JSON.stringify(n))}return e}predictLoop(t,e=32,n=!1){return Xi((()=>{const r=this.checkNumSamples(t);if(n)throw new Ff("Verbose predictLoop() is not implemented yet.");const s=ab(r,e),a=this.outputs.map((t=>[]));for(let e=0;e<s.length;++e)Xi((()=>{const n=s[e][0],r=s[e][1],a=rb(t,n,r),i=[];if(Array.isArray(a))for(let t=0;t<a.length;++t)i.push({key:this.inputs[t],value:a[t]});else i.push({key:this.inputs[0],value:a});const o=new Vy(i);return jy(this.outputs,o)})).forEach(((t,e)=>a[e].push(t)));return Bf(a.map((t=>Nu(t,0))))}))}predict(t,e={}){const n=ib(t);hb(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==e.batchSize?32:e.batchSize;return nb(r),this.predictLoop(n,r)}finally{ob(n,t)}}predictOnBatch(t){hb(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,n=!0,r){if(null==this.optimizer_)throw new _f("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let t=0;t<this.feedOutputShapes.length;++t){const e=this.feedOutputShapes[t];this.feedLossFns[t]===yy?s.push(e.slice(0,e.length-1).concat([1])):s.push(e)}if(function(t,e,n){const r=Kf(t.map((t=>t.shape[0])));r.sort();const s=Kf(e.map((t=>t.shape[0])));if(s.sort(),r.length>1)throw new Df("All input Tensors (x) should have the same number of samples. Got array shapes: "+JSON.stringify(t.map((t=>t.shape))));if(s.length>1)throw new Df("All target Tensors (y) should have the same number of samples. Got array shapes: "+JSON.stringify(e.map((t=>t.shape))));if(r.length>0&&s.length>0&&!st(r,s))throw new Df(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}(t=cb(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=cb(e,this.feedOutputNames,s,!1,"target")),function(t,e,n){const r=[dy,by,gy];for(let s=0;s<t.length;++s){const a=t[s],i=e[s],o=n[s];if(null!=i){if(i===gy&&1===a.shape[a.shape.length-1])throw new Df(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const t=a.shape.slice(1),e=o.slice(1);for(let n=0;n<t.length;++n){const r=t[n],s=e[n];if(null!=s&&r!==s)throw new Df(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&t[0].shape[0]%r!=0)throw new Df(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,n,r,s=!0,a){const[i,o]=this.standardizeUserDataXY(t,e,s,a);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const t=Yy(r,this.outputNames);u=[];for(let e=0;e<t.length;++e)u.push(await Jy(o[e],null,t[e]))}return[i,o,u]}testLoop(t,e,n,r=0,s){return Xi((()=>{const a=this.checkNumSamples(e,n,s,"steps"),i=[];if(r>0)throw new Ff("Verbose mode is not implemented yet.");if(null!=s)throw new Ff("steps mode in testLoop() is not implemented yet");{const r=ab(a,n),s=Nc(Dm(0,a));for(let n=0;n<r.length;++n){const a=r[n][0],o=r[n][1],u=Mm(s,a,o-a),l=sb(e,u),c=t(l);if(0===n)for(let t=0;t<c.length;++t)i.push(No(0));for(let t=0;t<c.length;++t){const e=c[t];i[t]=uo(i[t],ho(o-a,e))}}for(let t=0;t<i.length;++t)i[t]=co(i[t],a)}return i}))}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const r=t[n];let s=r;zf(t,r)>1&&(s+="_"+zf(t.slice(0,n),r)),e.push(s)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map((t=>t.read()));return[this.optimizer_.minimize((()=>{const t=[];for(let e=0;e<this.inputs.length;++e)t.push({key:this.inputs[e],value:n[e]});const i=new Vy(t),o=jy(this.outputs,i,{training:!0});let u;for(let t=0;t<this.lossFunctions.length;++t){let n=(0,this.lossFunctions[t])(r[t],o[t]);null!=s[t]&&(n=Zy(n,s[t]));const a=Kl(n);e.push(a),u=0===t?n:uo(u,n)}for(let t=0;t<this.metricsTensors.length;++t){let n;if(this.outputs.length>1&&t<this.outputs.length)n=e[t];else{const e=this.metricsTensors[t][0],s=this.metricsTensors[t][1];n=Kl(e(r[s],o[s]))}Ji(n),a.push(n)}return u=Kl(u),this.calculateLosses().forEach((t=>{u=uo(u,t)})),u}),!0,i)].concat(a)}}makeTestFunction(){this.testFunction=t=>Xi((()=>{const e=[];let n;const r=t.slice(0,this.inputs.length),s=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let t=0;t<this.inputs.length;++t)a.push({key:this.inputs[t],value:r[t]});const i=new Vy(a),o=jy(this.outputs,i);for(let t=0;t<this.lossFunctions.length;++t){const r=this.lossFunctions[t],a=Kl(r(s[t],o[t]));n=0===t?a:uo(n,a),e.push(n)}for(let t=0;t<this.metricsTensors.length;++t){const n=this.metricsTensors[t][0],r=this.metricsTensors[t][1],a=Kl(n(s[r],o[r]));e.push(a)}return e}))}async fit(t,e,n={}){return async function(t,e,n,r={}){if(t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,a,i,o,u,l,c;t.isTraining=!0;try{const h=null==r.batchSize?32:r.batchSize;nb(h);const p=!1,d=await t.standardizeUserData(e,n,r.sampleWeight,r.classWeight,p,h);s=d[0],a=d[1],c=d[2];let f,m=!1;if(null!=r.validationData&&r.validationData.length>0){if(m=!0,2!==r.validationData.length)throw 3===r.validationData.length?new Ff("validationData including sample weights is not supported yet."):new Df("When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; "+r.validationData+" is invalid.");i=r.validationData[0],o=r.validationData[1];const e=!0,n=await t.standardizeUserData(i,o,null,null,e,h);u=n[0],l=n[1],f=u.concat(l)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){m=!0;const t=Math.floor(s[0].shape[0]*(1-r.validationSplit)),e=s[0].shape[0];u=rb(s,t,e),s=rb(s,0,t),l=rb(a,t,e),a=rb(a,0,t),f=u.concat(l)}else null!=r.validationSteps&&(m=!0);const g=s.concat(a).concat(c);t.checkTrainableWeightsConsistency();const y=t.makeTrainFunction(),b=t.getDedupedMetricsNames();let x,v;m?(t.makeTestFunction(),x=t.testFunction,v=b.slice().concat(b.map((t=>"val_"+t)))):(x=null,f=[],v=b.slice());const w=uy(r.callbacks,r.yieldEvery);return await async function(t,e,n,r,s,a,i,o,u,l,c,h,p,d,f){null==s&&(s=32),null==a&&(a=1),null==c&&(c=!0),null==p&&(p=0);let m=!1;null!=u&&null!=l&&(m=!0);const g=t.checkNumSamples(n,s,d,"steps_per_epoch");let y;null!=g&&(y=Dm(0,g)),null==i&&(i=1);const{callbackList:b,history:x}=cy(o,i,a,p,g,d,s,m,h);b.setModel(t),t.history=x,await b.onTrainBegin(),t.stopTraining_=!1;for(let i=p;i<a;++i){await b.onEpochBegin(i);const a={};{if("batch"===c)throw new Ff("batch shuffling is not implemneted yet");c&&H(y);const i=Nc(y),o=ab(g,s);for(let c=0;c<o.length;++c){const h={};if(await b.onBatchBegin(c,h),Xi((()=>{const p=o[c][0],d=o[c][1],f=Mm(i,p,d-p);h.batch=c,h.size=d-p;const g=sb(n,f),y=e(g);for(let t=0;t<r.length;++t){const e=r[t],n=y[t];h[e]=n,Ji(n)}if(c===o.length-1&&m){const e=t.testLoop(u,l,s);for(let t=0;t<r.length;++t){const n=r[t],s=e[t];Ji(s),a["val_"+n]=s}}})),await b.onBatchEnd(c,h),ey(h),t.stopTraining_)break}i.dispose()}if(await b.onEpochEnd(i,a),t.stopTraining_)break}return await b.onTrainEnd(),await t.history.syncData(),t.history}(t,y,g,b,h,r.epochs,r.verbose,w,x,f,r.shuffle,v,r.initialEpoch,null)}finally{t.isTraining=!1,ob(s,e),ob(a,n),ob(u,i),ob(l,o),null!=c&&Yi(c)}}(this,t,e,n)}async fitDataset(t,e){return async function(t,e,n){const r=null!=n.batchesPerEpoch;if(Z(null!=t.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),Z(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),Z(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>"For fitDataset(), config.epochs is expected to be a positive integer, but got "+n.epochs)),Z(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>"For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got "+n.batchesPerEpoch)),Z(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const s=null!=n.validationData;let a,i;if(s)if(eb(n.validationData))Z(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got "+n.validationBatches));else{const t=function(t){if(3===t.length)throw new Ff("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}(n.validationData);a=t.xs,i=t.ys}const o=t.makeTrainFunction(),u=t.getDedupedMetricsNames();let l;l=s?u.slice().concat(u.map((t=>"val_"+t))):u.slice();const c=uy(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:d}=cy(c,h,n.epochs,null,null,function(t,e){let n=null;return null!=e.batchesPerEpoch?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size),n}(e,n),null,s,l);p.setModel(t),t.history=d,await p.onTrainBegin(),t.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await e.iterator();for(;f<n.epochs;){const l={};await p.onEpochBegin(f);let c=0,h=0;for(r||(m=await e.iterator());!r||c<n.batchesPerEpoch;){const e=await m.next();if(r&&e.done){console.warn("You provided `batchesPerEpoch` as "+n.batchesPerEpoch+", but your dataset iterator ran out of data after "+c+" batches; interrupting training. Make sure that your dataset can generate at least `batchesPerEpoch * epochs` batches (in this case, "+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=e.value){const{xs:r,ys:s}=Qy(t,e.value),a={};a.batch=h,a.size=r[0].shape[0],await p.onBatchBegin(h,a);const i=[];if(null!=n.classWeight){const e=Yy(n.classWeight,t.outputNames);for(let t=0;t<e.length;++t)i.push(await Jy(s[t],null,e[t]))}const l=r.concat(s).concat(i),d=o(l);Yi(l);for(let t=0;t<u.length;++t){const e=u[t],n=d[t];a[e]=n,Ji(n)}await p.onBatchEnd(h,a),ey(a),h++,c++}if(r?c>=n.batchesPerEpoch:e.done){if(s){let e;e=eb(n.validationData)?Pf(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):Pf(t.evaluate(a,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<t.metricsNames.length;++n)l["val_"+t.metricsNames[n]]=e[n]}break}if(t.stopTraining_)break}if(await p.onEpochEnd(f,l),f++,t.stopTraining_)break}return await p.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),r=n[0],s=n[1],a=this.makeTrainFunction()(r.concat(s)),i=[];for(const t of a){const e=await t.data();i.push(e[0])}return Yi(a),Bf(i)}getNamedWeights(t){const e=[],n=null!=t&&t.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let t=0;t<r.length;++t)n&&!r[t].trainable||e.push({name:r[t].originalName,tensor:s[t]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const e=qi().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-qi().numTensors}return t}getLossIdentifiers(){let t;if("string"==typeof this.loss)t=Wf(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!=typeof t)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map((t=>Wf(t)))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const r of e){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");t[r]=Wf(n[r])}}return t}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Wf(_y(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((t=>Wf(_y(t))));{const t={};for(const e in this.metrics)t[e]=Wf(_y(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=hy(By(t.optimizer_config));let n,r;if("string"==typeof t.loss)n=Vf(t.loss);else if(Array.isArray(t.loss))n=t.loss.map((t=>Vf(t)));else if(null!=t.loss){n={};for(const e in t.loss)n[e]=Vf(t.loss[e])}if(Array.isArray(t.metrics))r=t.metrics.map((t=>Vf(t)));else if(null!=t.metrics){r={};for(const e in t.metrics)r[e]=Vf(t.metrics[e])}this.compile({loss:n,metrics:r,optimizer:e})}async save(t,e){if("string"==typeof t){const e=ta(t);if(0===e.length)throw new Df(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new Df(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new Df("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await Vs(this.getNamedWeights(e)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v"+Wy,convertedBy:null};if(null!=e&&e.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const t="optimizer",{data:e,specs:s}=await Vs(await this.optimizer.getWeights(),t);n.specs.push(...s),n.data=qs([n.data,e])}if(null!=this.userDefinedMetadata){const t=!0;Dy(this.userDefinedMetadata,this.name,t),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,t.save(r)}setUserDefinedMetadata(t){Dy(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}pb.className="Model",$i(pb);class db extends pb{}async function fb(t,e){"modelTopology"in t||(t={modelTopology:t});let n=(t=t).modelTopology;null!=n.model_config&&(n=n.model_config);const r=hy(By(n),e);if(null!=t.weightsManifest){const e=await Va(t.weightsManifest,t.pathPrefix,r.weights.map((t=>t.originalName))),n={};for(const t of r.weights)n[t.originalName]=e[t.originalName];r.loadWeights(n),Yi(e)}return r}db.className="Functional",$i(db);class mb extends pb{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:Mg("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some((t=>t<0)))throw new Df("Negative dimension size caused by adding layer "+t.name+" with input shape ["+t.inboundNodes[0].inputTensors[0].shape+"]")}add(t){const e=t instanceof mb||t instanceof pb;let n;if(e){if(n=t,1!==n.outputs.length)throw new Df("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Df("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new Df("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const e=Qg({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new Df(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(1!==t.inboundNodes[0].outputTensors.length)throw new Df("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=Jg(this.outputs[0])}this.inboundNodes=[],new Kg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Mf(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs[0].shape})}else{const e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(Pg(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new pb({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,n=console.log){this.built||this.build(),super.summary(t,e,n)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e,n={}){if(!this.built)throw new _f("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new _f("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,n={}){if(!this.built)throw new _f("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new _f("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,n={},r=!1){let s,a={};if(e instanceof Array){if(null==e[0].className||"Merge"===e[0].className)throw new Df("Legacy serialization format not supported yet.");s=e}else Z(null!=e.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),s=e.layers,delete e.layers,a=e;const i=new t(a);if(!(i instanceof mb))throw new Ff("Sequential.fromConfig called on non-Sequential input: "+i);for(const t of s){const e=hy(t,void 0,r);r&&e.setFastWeightInitDuringBuild(!0),i.add(e)}return i}set stopTraining(t){if(null==this.model)throw new Df("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new Df("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}function gb(t){return new pb(t)}function yb(t){return new mb(t)}function bb(t,e){return null==e&&(e={}),async function(t,e){if(null==e&&(e={}),"string"==typeof t){const n=ea(t,e);if(0===n.length)n.push(Ka(t,e));else if(n.length>1)throw new Df(`Found more than one (${n.length}) load handlers for URL '${t}'`);t=n[0]}return async function(t,e,n){if(null==n&&(n={}),null==t.load)throw new Df("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await t.load();let s=r.modelTopology;null!=s.model_config&&(s=s.model_config);const a=null==n.strict||n.strict,i=null!=r.weightData&&null!=r.weightSpecs&&a,o=hy(By(s),void 0,i),u=r.trainingConfig;if(null!=u&&o.loadTrainingConfig(u),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new Df("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:t,optimizerWeights:e}=function(t,e){const n=Us(t,e),r={},s=[];return e.forEach((t=>{"optimizer"===t.group?s.push({name:t.name,tensor:n[t.name]}):r[t.name]=n[t.name]})),{modelWeights:r,optimizerWeights:s}}(r.weightData,r.weightSpecs);o.loadWeights(t,a),null!=o.optimizer&&e.length>0&&await o.optimizer.setWeights(e),Yi(t),Yi(e.map((t=>t.tensor)))}return o}(t,0,e)}(t,e)}function xb(t){return Qg(t)}function vb(t,e){ly.registerCallbackConstructor(t,e)}mb.className="Sequential",$i(mb);class wb extends Ti{getConfig(){return{}}}class kb extends wb{apply(t,e=1){return function(t,e=1){if(1!==e)throw new Ff(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return al(t)}(t,e)}}kb.className="elu",$i(kb);class Nb extends wb{apply(t){return Oc(t)}}Nb.className="selu",$i(Nb);class Ib extends wb{apply(t){return Cc(t)}}Ib.className="relu",$i(Ib);class Sb extends wb{apply(t){return Xi((()=>Yl(6,Cc(t))))}}Sb.className="relu6",$i(Sb);class Cb extends wb{apply(t){return t}}Cb.className="linear",$i(Cb);class Tb extends wb{apply(t){return Iu(t)}}Tb.className="sigmoid",$i(Tb);class Eb extends wb{apply(t){return function(t){return Xi((()=>{const e=uo(.5,ho(.2,t));return Mu(e,0,1)}))}(t)}}Eb.className="hardSigmoid",$i(Eb);class $b extends wb{apply(t){return Dl(t)}}$b.className="softplus",$i($b);class Ab extends wb{apply(t){return function(t){return Xi((()=>co(t,Ro(t).add(1))))}(t)}}Ab.className="softsign",$i(Ab);class Rb extends wb{apply(t){return Cu(t)}}Rb.className="tanh",$i(Rb);class _b extends wb{apply(t,e=-1){return jc(t,e)}}_b.className="softmax",$i(_b);class Db extends wb{apply(t,e=-1){return Ll(t,e)}}Db.className="logSoftmax",$i(Db);class Fb extends wb{apply(t,e=1){return Xi((()=>Iu(t.mul(e)).mul(t)))}}function Ob(t){return t.getClassName()}function Mb(t,e={}){return Hf(t,Ei.getMap().classNameMap,e,"activation")}function Lb(t){if(null==t){return Mb({className:"linear",config:{}})}if("string"==typeof t){const e={};return e.className=t,e.config={},Mb(e)}return t instanceof wb?t:Mb(t)}function zb(t){if(null!=t&&"object"!=typeof t)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an object, but received: "+t)}Fb.className="swish",$i(Fb);class Bb extends Ti{}class Pb extends Bb{constructor(t){super(),zb(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return Xi((()=>{let e=Hl([1]);return this.hasL1&&(e=uo(e,Ml(ho(this.l1,Ro(t))))),this.hasL2&&(e=uo(e,Ml(ho(this.l2,jm(t))))),e.asScalar()}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}Pb.className="L1L2",$i(Pb);const Wb={l1l2:"L1L2"};function Vb(t){return Gf(t)}function Ub(t,e={}){return Hf(t,Ei.getMap().classNameMap,e,"regularizer")}function Gb(t){return null==t?null:"string"==typeof t?Ub({className:t in Wb?Wb[t]:t,config:{}}):t instanceof Bb?t:Ub(t)}class jb extends Yg{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=Bg(t);let n=Cc(t);return null!=this.maxValue&&(n=Mu(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}jb.className="ReLU",$i(jb);class Hb extends Yg{constructor(t){super(null==t?{}:t),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=Bg(t);return Sl(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}Hb.className="LeakyReLU",$i(Hb);class qb extends Yg{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=yg(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Gb(t.alphaRegularizer),this.alphaConstraint=cm(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!=typeof t.sharedAxes)throw new Df("Expected sharedAxes to be a number or an array of numbers, but got "+t.sharedAxes);this.sharedAxes=[t.sharedAxes]}}build(t){const e=(t=Pg(t)).slice(1);if(null!=this.sharedAxes)for(const t of this.sharedAxes)e[t-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let e=1;e<t.length;++e)n[e]=t[e];this.inputSpec=[new jg({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=Bg(t),dc(t,this.alpha.read())}getConfig(){const t={alphaInitializer:gg(this.alphaInitializer),alphaRegularizer:Vb(this.alphaRegularizer),alphaConstraint:um(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}qb.className="PReLU",$i(qb);class Kb extends Yg{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new Ff(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=Bg(t);return al(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}Kb.className="ELU",$i(Kb);class Xb extends Yg{constructor(t){super(null==t?{}:t),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,e){const n=Bg(t);return n.mul(Fm(n.greater(this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}Xb.className="ThresholdedReLU",$i(Xb);class Yb extends Yg{constructor(t){super(null==t?{}:t),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new _b).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,e){const n=Bg(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function Jb(t,e,n){if("number"==typeof t)return Mf(t,e);if(t.length!==e)throw new Df(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${t.length} elements.`);for(let s=0;s<e;++s){const a=t[s];if((r=a)!==parseInt(r.toString(),10))throw new Df(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(t)} including a non-integer number `+a)}return t;var r}function Zb(t,e,n,r,s=1){if(null==t)return t;let a;return a="same"===n?t:t-(e+(e-1)*(s-1))+1,Math.floor((a+r-1)/r)}function Qb(t,e,n,r){if(null==t)return null;if("valid"===r)t=t*e+_m([n-e,0]);else{if("same"!==r)throw new Df(`Unsupport padding mode: ${r}.`);t*=e}return t}function tx(t,e){return Xi((()=>(vm(e),"channelsFirst"===e?ni(t,[0,2,3,1]):t)))}function ex(t,e){return Xi((()=>(vm(e),"channelsFirst"===e?ni(t,[0,2,3,4,1]):t)))}function nx(t,e,n,r=[1,1],s="valid",a,i,o=null){return Xi((()=>{if(null==a&&(a="channelsLast"),vm(a),3!==t.rank&&4!==t.rank)throw new Df(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${t.rank}.`);if(3!==e.rank&&4!==e.rank)throw new Df(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${t.rank}.`);let u=tx(t,a);if("causal"===s)throw new Ff("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=qh({x:u,filter:e,strides:r,pad:"same"===s?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(u=ni(u,[0,3,1,2])),u}))}Yb.className="Softmax",$i(Yb);class rx extends Yg{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",rx.verifyArgs(e),this.rank=t,Zf(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Ff(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Jb(e.kernelSize,t,"kernelSize"),this.strides=Jb(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,wm(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,vm(this.dataFormat),this.activation=Lb(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=yg(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=cm(e.biasConstraint),this.biasRegularizer=Gb(e.biasRegularizer),this.activityRegularizer=Gb(e.activityRegularizer),this.dilationRate=Jb(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Df("dilationRate must be a number or an array of a single number for 1D convolution, but received "+JSON.stringify(this.dilationRate));if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Df("dilationRate must be a number or array of two numbers for 2D convolution, but received "+JSON.stringify(this.dilationRate))}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Df("dilationRate must be a number or array of three numbers for 3D convolution, but received "+JSON.stringify(this.dilationRate))}static verifyArgs(t){if(Lf("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!=typeof t.kernelSize&&!Jf(t.kernelSize,"number",1,3))throw new Df(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Ob(this.activation),useBias:this.useBias,biasInitializer:gg(this.biasInitializer),biasRegularizer:Vb(this.biasRegularizer),activityRegularizer:Vb(this.activityRegularizer),biasConstraint:um(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class sx extends rx{constructor(t,e){super(t,e),this.kernel=null,sx.verifyArgs(e),this.filters=e.filters,Zf(this.filters,"filters"),this.kernelInitializer=yg(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=cm(e.kernelConstraint),this.kernelRegularizer=Gb(e.kernelRegularizer)}build(t){t=Pg(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new Df("The channel dimension of the input should be defined. Found "+t[e]);const n=t[e],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return Xi((()=>{let e;t=Bg(t);const n=null==this.bias?null:this.bias.read(),r=tm(this.activation.getClassName());if(null!=r&&2===this.rank)e=nx(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)e=function(t,e,n,r=1,s="valid",a,i=1){return Xi((()=>{if(null==a&&(a="channelsLast"),vm(a),3!==t.shape.length)throw new Df("The input of a conv1dWithBias operation should be 3, but is "+t.shape.length+" instead.");if(3!==e.shape.length)throw new Df("The kernel for a conv1dWithBias operation should be 3, but is "+e.shape.length+" instead");if(null!=n&&1!==n.shape.length)throw new Df("The bias for a conv1dWithBias operation should be 1, but is "+e.shape.length+" instead");if("channelsFirst"===a&&(t=ni(t,[0,2,1])),"causal"===s)throw new Ff("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Vu(t,e,r,"same"===s?"same":"valid","NWC",i);return null!=n&&(o=qm(o,n)),o}))}(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)e=nx(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Ff("convolutions greater than 3D are not implemented yet.");e=function(t,e,n,r=[1,1,1],s="valid",a,i){return Xi((()=>{if(null==a&&(a="channelsLast"),vm(a),4!==t.rank&&5!==t.rank)throw new Df("conv3dWithBias expects input to be of rank 4 or 5, but received "+t.rank+".");if(4!==e.rank&&5!==e.rank)throw new Df("conv3dWithBias expects kernel to be of rank 4 or 5, but received "+t.rank+".");let o=ex(t,a);if("causal"===s)throw new Ff("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=ju(o,e,r,"same"===s?"same":"valid","NDHWC",i),null!=n&&(o=qm(o,n)),"channelsFirst"===a&&(o=ni(o,[0,4,1,2,3])),o}))}(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(e=this.activation.apply(e))}return e}))}computeOutputShape(t){t=Pg(t);const e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let t=0;t<n.length;++t){const r=Zb(n[t],this.kernelSize[t],this.padding,this.strides[t],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[t]);e.push(r)}let r=[t[0]];return"channelsLast"===this.dataFormat?(r=r.concat(e),r.push(this.filters)):(r.push(this.filters),r=r.concat(e)),r}getConfig(){const t={filters:this.filters,kernelInitializer:gg(this.kernelInitializer),kernelRegularizer:Vb(this.kernelRegularizer),kernelConstraint:um(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!=typeof t.filters||t.filters<1)throw new Df("Convolution layer expected config.filters to be a 'number' > 0 but got "+JSON.stringify(t.filters))}}class ax extends sx{constructor(t){super(2,t),ax.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!Jf(t.kernelSize,"number",1,2))throw new Df(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}ax.className="Conv2D",$i(ax);class ix extends sx{constructor(t){super(3,t),ix.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new Df(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}ix.className="Conv3D",$i(ix);class ox extends ax{constructor(t){if(super(t),this.inputSpec=[new jg({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Df("Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode "+this.padding)}build(t){if(4!==(t=Pg(t)).length)throw new Df("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new Df("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new jg({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return Xi((()=>{let e=Bg(t);if(4!==e.shape.length)throw new Df("Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-"+e.shape.length);const n=e.shape,r=n[0];let s,a;"channelsFirst"===this.dataFormat?(s=2,a=3):(s=1,a=2);const i=n[s],o=n[a],u=this.kernelSize[0],l=this.kernelSize[1],c=this.strides[0],h=this.strides[1],p=[r,Qb(i,c,u,this.padding),Qb(o,h,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=ni(e,[0,2,3,1]));let d=Gu(e,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(d=ni(d,[0,3,1,2])),null!=this.bias&&(d=qm(d,this.bias.read(),this.dataFormat)),null!=this.activation&&(d=this.activation.apply(d)),d}))}computeOutputShape(t){const e=(t=Pg(t)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return e[n]=this.filters,e[r]=Qb(e[r],o,a,this.padding),e[s]=Qb(e[s],u,i,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}ox.className="Conv2DTranspose",$i(ox);class ux extends sx{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new Df("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new Df("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new Df(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received `+JSON.stringify(e.padding));this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=yg(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Gb(e.depthwiseRegularizer),this.depthwiseConstraint=cm(e.depthwiseConstraint),this.pointwiseInitializer=yg(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Gb(e.pointwiseRegularizer),this.pointwiseConstraint=cm(e.pointwiseConstraint)}build(t){if((t=Pg(t)).length<this.rank+2)throw new Df(`Inputs to SeparableConv${this.rank}D should have rank `+(this.rank+2)+", but received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||t[e]<0)throw new Df("The channel dimension of the inputs should be defined, but found "+JSON.stringify(t[e]));const n=t[e],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let t=0;t<this.rank;++t)s.push(1);s.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new jg({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return Xi((()=>{let e;if(t=Bg(t),1===this.rank)throw new Ff("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=ni(t,[0,2,3,1])),e=Mc(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(e=qm(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),"channelsFirst"===this.dataFormat&&(e=ni(e,[0,3,1,2])),e}))}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=gg(this.depthwiseInitializer),t.pointwiseInitializer=gg(this.pointwiseInitializer),t.depthwiseRegularizer=Vb(this.depthwiseRegularizer),t.pointwiseRegularizer=Vb(this.pointwiseRegularizer),t.depthwiseConstraint=um(this.depthwiseConstraint),t.pointwiseConstraint=um(this.pointwiseConstraint),t}}ux.className="SeparableConv";class lx extends ux{constructor(t){super(2,t)}}lx.className="SeparableConv2D",$i(lx);class cx extends sx{constructor(t){super(1,t),cx.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!Jf(t.kernelSize,"number",1,1))throw new Df(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}cx.className="Conv1D",$i(cx);class hx extends Yg{constructor(t){super(t),"number"==typeof t.cropping?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"==typeof t.cropping[0]?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return Xi((()=>{if(t=Bg(t),"channelsLast"===this.dataFormat){const e=zm(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return zm(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const e=zm(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return zm(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}hx.className="Cropping2D",$i(hx);class px extends Yg{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat}computeOutputShape(t){if("channelsFirst"===this.dataFormat){const e=null==t[2]?null:this.size[0]*t[2],n=null==t[3]?null:this.size[1]*t[3];return[t[0],t[1],e,n]}{const e=null==t[1]?null:this.size[0]*t[1],n=null==t[2]?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return Xi((()=>{let e=Bg(t);const n=e.shape;if("channelsFirst"===this.dataFormat){e=ni(e,[0,2,3,1]);const t=this.size[0]*n[2],r=this.size[1]*n[3],s=e.resizeNearestNeighbor([t,r]);return ni(s,[0,3,1,2])}{const t=this.size[0]*n[1],r=this.size[1]*n[2];return e.resizeNearestNeighbor([t,r])}}))}getConfig(){const t={size:this.size,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}px.className="UpSampling2D",$i(px);class dx extends rx{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=yg(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=cm(t.depthwiseConstraint),this.depthwiseRegularizer=Gb(t.depthwiseRegularizer)}build(t){if((t=Pg(t)).length<4)throw new Df(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||t[e]<0)throw new Df(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const n=t[e],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Xi((()=>{let e=function(t,e,n=[1,1],r="valid",s,a){return Xi((()=>{null==s&&(s="channelsLast"),vm(s);let i=tx(t,s);if(4!==t.rank)throw new Df("Input for depthwiseConv2d is required to be 4-D, but is instead "+t.rank+"-D");if(4!==e.rank)throw new Df("depthwiseKernel is required to be 4-D, but is instead "+e.rank+"-D");return i=Zu(i,e,n,"same"===r?"same":"valid","NHWC",a),"channelsFirst"===s&&(i=ni(i,[0,3,1,2])),i}))}(t=Bg(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(e=qm(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e}))}computeOutputShape(t){t=Pg(t);const e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,s=Zb(e,this.kernelSize[0],this.padding,this.strides[0]),a=Zb(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],r,s,a]:[t[0],s,a,r]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=gg(this.depthwiseInitializer),t.depthwiseRegularizer=Vb(this.depthwiseRegularizer),t.depthwiseConstraint=um(this.depthwiseRegularizer),t}}function fx(t,e,n,r){if(Array.isArray(t)){if(null!=e||null!=n)throw new Df("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=t.slice(t.length-r,t.length),t=t.slice(0,t.length-r)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function s(t){return null==t||Array.isArray(t)?t:[t]}return{inputs:t,initialState:e=s(e),constants:n=s(n)}}function mx(t,e,n,r=!1,s,a,i=!1,o=!1){return Xi((()=>{const u=e.shape.length;if(u<3)throw new Df(`Input should be at least 3D, but is ${u}D.`);const l=[1,0].concat(Dm(2,u));if(e=ni(e,l),null!=a)throw new Ff("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=s.asType("bool").asType("float32")).rank===u-1&&(s=ul(s,-1)),s=ni(s,l)),r&&(e=Ec(e,0),null!=s&&(s=Ec(s,0)));const c=[];let h,p=n;const d=e.shape[0],f=ph(e);let m,g;null!=s&&(m=ph(s));for(let e=0;e<d;++e){const n=f[e],r=Xi((()=>t(n,p)));if(null==s)h=r[0],p=r[1];else{const t=Xi((()=>{const t=m[e],n=sc(t).sub(t);return{output:r[0].mul(t).add(p[0].mul(n)),newStates:p.map(((e,s)=>r[1][s].mul(t).add(e.mul(n))))}}));h=t.output,p=t.newStates}o&&c.push(h)}return o&&(g=th(c,1)),[h,g,p]}))}dx.className="DepthwiseConv2D",$i(dx);class gx extends Yg{constructor(t){let e;if(super(t),null==t.cell)throw new Df("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new Ix({cells:t.cell}):t.cell,null==e.stateSize)throw new Df("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this._stateful=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new jg({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?Dm(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((t=>null)):this.states_}setStates(t){this.states_=t}computeOutputShape(t){Lg(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let r;if(r=this.returnSequences?[t[0],t[1],n]:[t[0],n],this.returnState){const n=[];for(const r of e)n.push([t[0],r]);return[r].concat(n)}return r}computeMask(t,e){return Xi((()=>{Array.isArray(e)&&(e=e[0]);const t=this.returnSequences?e:null;if(this.returnState){const e=this.states.map((t=>null));return[t].concat(e)}return t}))}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){if(null!=this.numConstants)throw new Ff("Constants support is not implemented in RNN yet.");Lg(t)&&(t=t[0]),t=t;const e=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new jg({shape:[e,null,...n]});const r=[t[0]].concat(t.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!st(this.stateSpec.map((t=>t.shape[t.shape.length-1])),s))throw new Df(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is `+this.cell.stateSize)}else this.stateSpec=s.map((t=>new jg({shape:[null,t]})));this.stateful&&this.resetStates()}resetStates(t,e=!1){Xi((()=>{if(!this.stateful)throw new Rf("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Df("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>Hl([n,t]))):this.states_=[Hl([n,this.cell.stateSize])];else if(null==t)Yi(this.states_),null!=this.keptStates&&(Yi(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>Hl([n,t]))):this.states_[0]=Hl([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new Df(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: `+t);!0===e?this.keptStates.push(this.states_.slice()):Yi(this.states_);for(let e=0;e<this.states_.length;++e){const r=t[e],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,a=[n,s];if(!st(r.shape,a))throw new Df(`State ${e} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[e]=r}}this.states_=this.states_.map((t=>Ji(t.clone())))}))}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const s=fx(t,n,r,this.numConstants);t=s.inputs,n=s.initialState,r=s.constants;let a=[],i=[];if(null!=n){e.initialState=n,a=a.concat(n),this.stateSpec=[];for(const t of n)this.stateSpec.push(new jg({shape:t.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(e.constants=r,a=a.concat(r),this.numConstants=r.length),a[0]instanceof Hg){const n=[t].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,e);return this.inputSpec=s,o}return super.apply(t,e)}call(t,e){return Xi((()=>{const n=null==e?null:e.mask,r=null==e?null:e.training;let s=null==e?null:e.initialState;t=Bg(t),null==s&&(s=this.stateful?this.states_:this.getInitialState(t));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new Df(`RNN Layer has ${a} state(s) but was passed `+s.length+" initial state(s).");this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=mx(((t,e)=>{const n=this.cell.call([t].concat(e),i);return[n[0],n.slice(1)]}),t,s,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],l=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?l:u;return this.returnState?[h].concat(c):h}))}getInitialState(t){return Xi((()=>{let e=Hl(t.shape);return e=Ml(e,[1,2]),e=Om(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((t=>t>1?Wm(e,[1,t]):e)):this.cell.stateSize>1?[Wm(e,[1,this.cell.stateSize])]:[e]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(e.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===gx.className&&(e.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,t,e)}static fromConfig(t,e,n={}){const r=hy(e.cell,n);return new t(Object.assign(e,{cell:r}))}}gx.className="RNN",$i(gx);class yx extends Yg{}class bx extends yx{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Zf(this.units,"units"),this.activation=Lb(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=yg(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=yg(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=yg(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Gb(t.kernelRegularizer),this.recurrentRegularizer=Gb(t.recurrentRegularizer),this.biasRegularizer=Gb(t.biasRegularizer),this.kernelConstraint=cm(t.kernelConstraint),this.recurrentConstraint=cm(t.recurrentConstraint),this.biasConstraint=cm(t.biasConstraint),this.dropout=Rm([1,_m([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Rm([1,_m([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Pg(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Xi((()=>{if(2!==(t=t).length)throw new Df(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let n=t[1];t=t[0];const r=null!=e.training&&e.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Sx({ones:()=>sc(t),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Sx({ones:()=>sc(n),rate:this.recurrentDropout,training:r}));const a=this.dropoutMask,i=this.recurrentDropoutMask;s=Um(null!=a?ho(t,a):t,this.kernel.read()),null!=this.bias&&(s=qm(s,this.bias.read())),null!=i&&(n=ho(n,i));let o=uo(s,Um(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Ob(this.activation),useBias:this.useBias,kernelInitializer:gg(this.kernelInitializer),recurrentInitializer:gg(this.recurrentInitializer),biasInitializer:gg(this.biasInitializer),kernelRegularizer:Vb(this.kernelRegularizer),recurrentRegularizer:Vb(this.recurrentRegularizer),biasRegularizer:Vb(this.biasRegularizer),activityRegularizer:Vb(this.activityRegularizer),kernelConstraint:um(this.kernelConstraint),recurrentConstraint:um(this.recurrentConstraint),biasConstraint:um(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},t,e)}}bx.className="SimpleRNNCell",$i(bx);class xx extends gx{constructor(t){t.cell=new bx(t),super(t)}call(t,e){return Xi((()=>{null!=this.cell.dropoutMask&&(Yi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Yi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}static fromConfig(t,e){return new t(e)}}xx.className="SimpleRNN",$i(xx);class vx extends yx{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new Df("GRUCell does not support reset_after parameter set to true.");this.units=t.units,Zf(this.units,"units"),this.activation=Lb(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Lb(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=yg(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=yg(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=yg(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Gb(t.kernelRegularizer),this.recurrentRegularizer=Gb(t.recurrentRegularizer),this.biasRegularizer=Gb(t.biasRegularizer),this.kernelConstraint=cm(t.kernelConstraint),this.recurrentConstraint=cm(t.recurrentConstraint),this.biasConstraint=cm(t.biasConstraint),this.dropout=Rm([1,_m([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Rm([1,_m([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){const e=(t=Pg(t))[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Xi((()=>{if(2!==(t=t).length)throw new Df("GRUCell expects 2 input Tensors (inputs, h, c), got "+t.length+".");const n=null!=e.training&&e.training;let r=t[1];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Sx({ones:()=>sc(t),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Sx({ones:()=>sc(r),rate:this.recurrentDropout,training:n,count:3}));const s=this.dropoutMask,a=this.recurrentDropoutMask;let i,o,u;0<this.dropout&&this.dropout<1&&(t=ho(t,s[0]));let l=Um(t,this.kernel.read());this.useBias&&(l=qm(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=ho(r,a[0]));const c=this.recurrentKernel.read(),[h,p]=Yc(c,[2*this.units,this.units],c.rank-1),d=Um(r,h),[f,m,g]=Yc(l,3,l.rank-1),[y,b]=Yc(d,2,d.rank-1);i=this.recurrentActivation.apply(uo(f,y)),o=this.recurrentActivation.apply(uo(m,b));const x=Um(ho(o,r),p);u=this.activation.apply(uo(g,x));const v=uo(ho(i,r),ho(uo(1,_l(i)),u));return[v,v]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Ob(this.activation),recurrentActivation:Ob(this.recurrentActivation),useBias:this.useBias,kernelInitializer:gg(this.kernelInitializer),recurrentInitializer:gg(this.recurrentInitializer),biasInitializer:gg(this.biasInitializer),kernelRegularizer:Vb(this.kernelRegularizer),recurrentRegularizer:Vb(this.recurrentRegularizer),biasRegularizer:Vb(this.biasRegularizer),activityRegularizer:Vb(this.activityRegularizer),kernelConstraint:um(this.kernelConstraint),recurrentConstraint:um(this.recurrentConstraint),biasConstraint:um(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},t,e)}}vx.className="GRUCell",$i(vx);class wx extends gx{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new vx(t),super(t)}call(t,e){return Xi((()=>{null!=this.cell.dropoutMask&&(Yi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Yi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}wx.className="GRU",$i(wx);class kx extends yx{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Zf(this.units,"units"),this.activation=Lb(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Lb(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=yg(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=yg(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=yg(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=Gb(t.kernelRegularizer),this.recurrentRegularizer=Gb(t.recurrentRegularizer),this.biasRegularizer=Gb(t.biasRegularizer),this.kernelConstraint=cm(t.kernelConstraint),this.recurrentConstraint=cm(t.recurrentConstraint),this.biasConstraint=cm(t.biasConstraint),this.dropout=Rm([1,_m([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Rm([1,_m([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;const n=(t=Pg(t))[t.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const t=this.biasInitializer,n=this.units;r=new((e=class extends Zm{apply(e,r){const s=t.apply([n]),a=(new tg).apply([n]),i=t.apply([2*n]);return Pm(Pm(s,a),i)}}).className="CustomInit",e)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return Xi((()=>{const n=null!=e.training&&e.training;if(3!==(t=t).length)throw new Df("LSTMCell expects 3 input Tensors (inputs, h, c), got "+t.length+".");let r=t[1];const s=t[2];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Sx({ones:()=>sc(t),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Sx({ones:()=>sc(r),rate:this.recurrentDropout,training:n,count:4}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,u,l,c;0<this.dropout&&this.dropout<1&&(t=ho(t,a[0]));let h=Um(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=ho(r,i[0])),h=uo(h,Um(r,this.recurrentKernel.read())),this.useBias&&(h=qm(h,this.bias.read()));const[p,d,f,m]=Yc(h,4,h.rank-1);o=this.recurrentActivation.apply(p),u=this.recurrentActivation.apply(d),l=uo(ho(u,s),ho(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=ho(c,this.activation.apply(l));return[g,g,l]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Ob(this.activation),recurrentActivation:Ob(this.recurrentActivation),useBias:this.useBias,kernelInitializer:gg(this.kernelInitializer),recurrentInitializer:gg(this.recurrentInitializer),biasInitializer:gg(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Vb(this.kernelRegularizer),recurrentRegularizer:Vb(this.recurrentRegularizer),biasRegularizer:Vb(this.biasRegularizer),activityRegularizer:Vb(this.activityRegularizer),kernelConstraint:um(this.kernelConstraint),recurrentConstraint:um(this.recurrentConstraint),biasConstraint:um(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},t,e)}}kx.className="LSTMCell",$i(kx);class Nx extends gx{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new kx(t),super(t)}call(t,e){return Xi((()=>{null!=this.cell.dropoutMask&&(Yi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Yi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}Nx.className="LSTM",$i(Nx);class Ix extends yx{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return Xi((()=>{let n=(t=t).slice(1);const r=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?r.push(n.splice(0,t.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],a=0===i?[t[0]].concat(n):[a[0]].concat(n),a=o.call(a,e),s.push(a.slice(1))}n=[];for(const t of s.slice().reverse())n.push(...t);return[a[0]].concat(n)}))}build(t){let e;Lg(t)&&(t=t[0]),t=t,this.cells.forEach(((n,r)=>{Im("RNNCell_"+r,(()=>{n.build(t),e=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,t=[t[0],e]}))})),this.built=!0}getConfig(){const t=super.getConfig(),e={cells:this.cells.map((t=>({className:t.getClassName(),config:t.getConfig()})))};return Object.assign({},t,e)}static fromConfig(t,e,n={}){const r=[];for(const t of e.cells)r.push(hy(t,n));return new t({cells:r})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return Ug(t)}setWeights(t){const e=[];for(const n of this.cells){const r=n.weights.length,s=t.splice(r);for(let t=0;t<n.weights.length;++t)e.push([n.weights[t],s[t]])}Gg(e)}}function Sx(t){const{ones:e,rate:n,training:r=!1,count:s=1}=t,a=()=>Km(e(),n),i=()=>Xm(a,e,r);return!s||s<=1?Ji(i().clone()):Array(s).fill(void 0).map(i).map((t=>Ji(t.clone())))}Ix.className="StackedRNNCells",$i(Ix);class Cx extends gx{constructor(t){if(t.unroll)throw new Ff("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new Ff("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new jg({ndim:5})]}call(t,e){return Xi((()=>{if(null!=this.cell.dropoutMask&&(Yi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Yi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new Df("ConvRNN2D cell does not support constants");const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return Xi((()=>{const{stateSize:e}=this.cell,n=t.shape,r=this.computeSingleOutputShape(n),s=Hl([r[0],...r.slice(2)]);return Array.isArray(e)?Array(e.length).fill(s):[s]}))}resetStates(t,e=!1){Xi((()=>{if(!this.stateful)throw new Rf("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new Df("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Hl(s))):this.states_=[Hl(s)];else if(null==t)Yi(this.states_),null!=this.keptStates&&(Yi(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Hl(s))):this.states_[0]=Hl(s);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new Df(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: `+t);e?this.keptStates.push(this.states_.slice()):Yi(this.states_);for(let e=0;e<this.states_.length;++e){const n=t[e],r=s;if(!st(n.shape,r))throw new Df(`State ${e} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[e]=n}}this.states_=this.states_.map((t=>Ji(t.clone())))}))}computeSingleOutputShape(t){const{dataFormat:e,filters:n,kernelSize:r,padding:s,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===e,u=t[o?3:2],l=t[o?4:3],c=Zb(u,r[0],s,a[0],i[0]),h=Zb(l,r[1],s,a[1],i[1]);return[...t.slice(0,2),...o?[n,c,h]:[c,h,n]]}}Cx.className="ConvRNN2D";class Tx extends kx{constructor(t){const{filters:e,kernelSize:n,strides:r,padding:s,dataFormat:a,dilationRate:i}=t;super(Object.assign({},t,{units:e})),this.filters=e,Zf(this.filters,"filters"),this.kernelSize=Jb(n,2,"kernelSize"),this.kernelSize.forEach((t=>Zf(t,"kernelSize"))),this.strides=Jb(r||1,2,"strides"),this.strides.forEach((t=>Zf(t,"strides"))),this.padding=s||"valid",wm(this.padding),this.dataFormat=a||"channelsLast",vm(this.dataFormat),this.dilationRate=Jb(i||1,2,"dilationRate"),this.dilationRate.forEach((t=>Zf(t,"dilationRate")))}build(t){var e;t=Pg(t);const n="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[n])throw new Df("The channel dimension of the input should be defined. Found "+t[n]);const r=t[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let t;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;t=new((e=class extends Zm{apply(t,e){return Bm([n.apply([r]),ql([r]),n.apply([2*r])])}}).className="CustomInit",e)}else t=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,t,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return Xi((()=>{if(3!==t.length)throw new Df("ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got "+t.length+".");const n=e.training||!1,r=t[0],s=t[1],a=t[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Sx({ones:()=>sc(r),rate:this.dropout,training:n,count:4}));const i=this.dropoutMask,o=(t,e,n)=>e&&e[n]?ho(e[n],t):t;let u=o(r,i,0),l=o(r,i,1),c=o(r,i,2),h=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Sx({ones:()=>sc(s),rate:this.recurrentDropout,training:n,count:4}));const p=this.recurrentDropoutMask;let d=o(s,p,0),f=o(s,p,1),m=o(s,p,2),g=o(s,p,3);const[y,b,x,v]=Yc(this.kernel.read(),4,3),[w,k,N,I]=this.useBias?Yc(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,y,w,this.padding),l=this.inputConv(l,b,k,this.padding),c=this.inputConv(c,x,N,this.padding),h=this.inputConv(h,v,I,this.padding);const[S,C,T,E]=Yc(this.recurrentKernel.read(),4,3);d=this.recurrentConv(d,S),f=this.recurrentConv(f,C),m=this.recurrentConv(m,T),g=this.recurrentConv(g,E);const $=this.recurrentActivation.apply(uo(u,d)),A=this.recurrentActivation.apply(uo(l,f)),R=uo(ho(A,a),ho($,this.activation.apply(uo(c,m)))),_=ho(this.recurrentActivation.apply(uo(h,g)),this.activation.apply(R));return[_,_,R]}))}getConfig(){const t=super.getConfig(),{units:e}=t,n=function(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(t);s<r.length;s++)e.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(t,r[s])&&(n[r[s]]=t[r[s]])}return n}(t,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(t,e,n,r){const s=Wu(t,e,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?qm(s,n,this.dataFormat):s}recurrentConv(t,e){return Wu(t,e,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Tx.className="ConvLSTM2DCell",$i(Tx);class Ex extends Cx{constructor(t){const e=new Tx(t);super(Object.assign({},t,{cell:e}))}static fromConfig(t,e){return new t(e)}}Ex.className="ConvLSTM2D",$i(Ex);class $x extends Yg{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,n=[];for(let t=0;t<this.noiseShape.length;++t)n.push(null==this.noiseShape[t]?e[t]:this.noiseShape[t]);return n}call(t,e){return Xi((()=>{this.invokeCallHook(t,e);const n=Bg(t);if(0<this.rate&&this.rate<1){const t=null!=e.training&&e.training,r=this.getNoiseShape(n);return Xm((()=>Km(n,this.rate,r,this.seed)),(()=>n),t)}return t}))}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}$x.className="Dropout",$i($x);class Ax extends $x{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}Ax.className="SpatialDropout1D",$i(Ax);class Rx extends Yg{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,Zf(this.units,"units"),this.activation=Lb(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=yg(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=yg(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=cm(t.kernelConstraint),this.biasConstraint=cm(t.biasConstraint),this.kernelRegularizer=Gb(t.kernelRegularizer),this.biasRegularizer=Gb(t.biasRegularizer),this.activityRegularizer=Gb(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const e=(t=Pg(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){const e=(t=Pg(t)).slice();return e[e.length-1]=this.units,e}call(t,e){return Xi((()=>{this.invokeCallHook(t,e);const n=Bg(t),r=tm(this.activation.getClassName());let s;return null!=r?s=Um(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=Um(n,this.kernel.read()),null!=this.bias&&(s=qm(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const t={units:this.units,activation:Ob(this.activation),useBias:this.useBias,kernelInitializer:gg(this.kernelInitializer),biasInitializer:gg(this.biasInitializer),kernelRegularizer:Vb(this.kernelRegularizer),biasRegularizer:Vb(this.biasRegularizer),activityRegularizer:Vb(this.activityRegularizer),kernelConstraint:um(this.kernelConstraint),biasConstraint:um(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Rx.className="Dense",$i(Rx);class _x extends Yg{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=Pg(t);for(const e of t.slice(1))if(null==e)throw new Df(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],$m(t,1)]}call(t,e){return Xi((()=>{this.invokeCallHook(t,e);let n=Bg(t);if("channelsFirst"===this.dataFormat&&n.rank>1){const t=[0];for(let e=2;e<n.rank;++e)t.push(e);t.push(1),n=n.transpose(t)}return function(t){if(t.rank<=1)throw new Df(`batchFlatten requires a minimum rank of 2. Got rank: ${t.rank}.`);const e=[t.shape[0],$m(t.shape,1)];return t.reshape(e)}(n)}))}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}_x.className="Flatten",$i(_x);class Dx extends Yg{constructor(t){super(t),this.supportsMasking=!0,this.activation=Lb(t.activation)}call(t,e){return Xi((()=>{this.invokeCallHook(t,e);const n=Bg(t);return this.activation.apply(n)}))}getConfig(){const t={activation:Ob(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}Dx.className="Activation",$i(Dx);class Fx extends Yg{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return Xi((()=>{return t=Bg(t),e=t,n=this.n,Xi((()=>{if(2!==e.shape.length)throw new Df(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return Wm(Om(e,1),[1,n,1])}));var e,n}))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}Fx.className="RepeatVector",$i(Fx);class Ox extends Yg{constructor(t){super(t),this.targetShape=t.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",r=e.slice();let s=1,a=null;for(let t=0;t<r.length;++t){const e=r[t];if(this.isUnknown(e)){if(null!==a)throw new Df("Can only specifiy one unknown dimension.");a=t}else s*=e}const i=$m(t);if(null!==a){if(0===s||i%s!=0)throw new Df(n);r[a]=i/s}else if(i!==s)throw new Df(n);return r}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return Xi((()=>{this.invokeCallHook(t,e);const n=Bg(t),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return n.reshape(s)}))}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}Ox.className="Reshape",$i(Ox);class Mx extends Yg{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error("Permute constructor requires `dims` to be an Array, but received "+t.dims+" instead.");const e=Dm(1,t.dims.length+1);if(!st(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new jg({ndim:this.dims.length+1})]}computeOutputShape(t){const e=(t=Pg(t)).slice();return this.dims.forEach(((n,r)=>{e[r+1]=t[n]})),e}call(t,e){return ni(Bg(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}Mx.className="Permute",$i(Mx);class Lx extends Yg{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=Bg(t);return Zo(nc(n,this.maskValue),-1)}call(t,e){return Xi((()=>{this.invokeCallHook(t,e);const n=Bg(t),r=Zo(nc(n,this.maskValue),-1,!0);return n.mul(r.asType(n.dtype))}))}}Lx.className="Masking",$i(Lx);class zx extends Yg{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(Pf(t.inputLength))}this.inputDim=t.inputDim,Zf(this.inputDim,"inputDim"),this.outputDim=t.outputDim,Zf(this.outputDim,"outputDim"),this.embeddingsInitializer=yg(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Gb(t.embeddingsRegularizer),this.activityRegularizer=Gb(t.activityRegularizer),this.embeddingsConstraint=cm(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return Xi((()=>this.maskZero?(t=Bg(t),nc(t,mo(t))):null))}computeOutputShape(t){if(t=Pg(t),null==this.inputLength)return[...t,this.outputDim];const e=Pf(this.inputLength);if(e.length!==t.length-1)throw new Df(`"inputLength" is ${this.inputLength}, but received input shape has shape `+t);{let n=0;for(let r=0;r<e.length;++r){const s=e[r],a=t[r+1];if(null!=s&&null!=a&&s!==a)throw new Df(`"inputLength" is ${this.inputLength}, but received input shape has shape `+t);null==s&&(e[n]=a),n++}}return[t[0],...e,this.outputDim]}call(t,e){return Xi((()=>{this.invokeCallHook(t,e);let n=Bg(t);return"int32"!==n.dtype&&(n=Fm(n,"int32")),Gm(this.embeddings.read(),n.as1D()).reshape(Pg(this.computeOutputShape(n.shape)))}))}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:gg(this.embeddingsInitializer),embeddingsRegularizer:Vb(this.embeddingsRegularizer),activityRegularizer:Vb(this.activityRegularizer),embeddingsConstraint:um(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}zx.className="Embedding",$i(zx);class Bx extends Yg{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new Ff}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const n=t.slice(0,t.length-e.length);for(let r=0;r<e.length;++r){const s=t[t.length-e.length+r],a=e[r];if(null==s||null==a||s<0||a<0)n.push(null);else if(1===s)n.push(a);else if(1===a)n.push(s);else{if(s!==a)throw new Df("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(s)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[Pg(t)]),(t=t).length<2)throw new Df(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const n of t)null!=n&&null!==n[0]&&e.push(n[0]);if(e=Kf(e),e.length>1)throw new Df(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let n=null==t[0]?null:t[0].slice(1);for(let e=1;e<t.length;++e){const r=null==t[e]?null:t[e].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=t.map((t=>t.length));-1===t.indexOf(null)&&1===Kf(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return Xi((()=>{if(t=t,this.reshapeRequired){const e=[],n=t.map((t=>t.rank));if(-1===n.indexOf(null)){const r=_m(n);for(let n of t){const t=n.rank;for(let e=0;e<r-t;++e)n=Om(n,1);e.push(n)}return this.mergeFunction(e)}{let n=!1;for(const r of t){const t=r.rank;if(null==t){const t=r.shape,s=t[0],a=t.slice(1).concat([s]);let i=r.reshape([s].concat($m(t.slice(1))));i=ni(i,[1,0]),i=i.reshape(a),e.push(i),n=!0}else if(t>1){const s=Dm(1,t).concat([0]);e.push(ni(r,s)),n=!0}else e.push(r)}let r=this.mergeFunction(e);const s=r.rank;if(n)if(null==s){const t=r.shape,e=t[t.length-1],n=[e].concat(t.slice(0,t.length-1));r=ni(r.reshape([-1,e]),[1,0]).reshape(n)}else if(s>1){const t=[s-1].concat(Dm(0,s-1));r=ni(r,t)}return r}}return this.mergeFunction(t)}))}computeOutputShape(t){let e;e=null==(t=t)[0]?null:t[0].slice(1);for(let n=1;n<t.length;++n){const r=null==t[n]?null:t[n].slice(1);e=this.computeElementwiseOpOutputShape(e,r)}let n=[];for(const e of t)null!=e&&null!==e[0]&&n.push(e[0]);return n=Kf(n),e=1===n.length?n.concat(e):[null].concat(e),e}computeMask(t,e){return Xi((()=>{if(null==e)return null;if(!Array.isArray(e))throw new Df("`mask` should be an Array");if(!Array.isArray(t))throw new Df("`inputs` should be an Array");if(e.length!==t.length)throw new Df(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every((t=>null==t)))return null;let n=(e=e.map((t=>null==t?t:ul(t,0))))[0];for(let t=1;t<e.length-1;++t)n=Bl(n,e[t]);return n}))}}class Px extends Bx{constructor(t){super(t)}mergeFunction(t){return Xi((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=uo(e,t[n]);return e}))}}Px.className="Add",$i(Px);class Wx extends Bx{constructor(t){super(t)}mergeFunction(t){return Xi((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=ho(e,t[n]);return e}))}}Wx.className="Multiply",$i(Wx);class Vx extends Bx{constructor(t){super(t)}mergeFunction(t){return Xi((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=uo(e,t[n]);return ho(1/t.length,e)}))}}Vx.className="Average",$i(Vx);class Ux extends Bx{constructor(t){super(t)}mergeFunction(t){return Xi((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=Oo(e,t[n]);return e}))}}Ux.className="Maximum",$i(Ux);class Gx extends Bx{constructor(t){super(t)}mergeFunction(t){return Xi((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=Yl(e,t[n]);return e}))}}Gx.className="Minimum",$i(Gx);class jx extends Bx{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new Df("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(const n of t)if(null!=n){e=!1;break}if(e)return;const n=[];for(let e=0;e<t.length;++e){const r=t[e].slice();r.splice(this.axis,1);let s=!1;for(const t of n)if(st(t,r)){s=!0;break}s||n.push(r)}if(n.length>1)throw new Df("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return Xi((()=>Bm(t,this.axis)))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new Df("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const t of e.slice(1)){if(null==n[r]||null==t[r]){n[r]=null;break}n[r]+=t[r]}return n}computeMask(t,e){if(null==e)return null;if(!Array.isArray(e))throw new Df("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new Df("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new Df(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return Xi((()=>{let n=!0;if(e.forEach((t=>{null==t||(n=!1)})),n)return null;const r=[];for(let n=0;n<t.length;++n)null==e[n]?r.push(sc(t[n]).asType("bool")):e[n].rank<t[n].rank?r.push(ul(e[n],-1)):r.push(e[n]);const s=Nu(r,this.axis);return Jo(s,-1,!1)}))}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function Hx(t,e){for(;t<0;)t+=e;return t}jx.className="Concatenate",$i(jx);class qx extends Bx{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){Z(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new Ff("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);if(e[r[0]]!==n[r[1]])throw new Df(`Dimension incompatibility: ${e[r[0]]} !== ${n[r[1]]}`)}mergeFunction(t){if(2!==t.length)throw new Df(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e,n=t[0],r=t[1];return e=Array.isArray(this.axes)?this.axes.map(((e,n)=>Hx(e,t[n].shape.length))):[Hx(this.axes,n.shape.length),Hx(this.axes,r.shape.length)],this.normalize&&(n=py(n,e[0]),r=py(r,e[1])),function(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new Ff("batchDot is not implemented for tensors of 4D or higher rank yet");if(Z(t.shape.length>=2,(()=>"batchDot requires the rank of x to be >= 2, but got "+t.shape.length)),Z(t.shape.length>=2,(()=>"batchDot requires the rank of y to be >= 2, but got "+e.shape.length)),"number"==typeof n&&(n=[n,n]),"complex64"===t.dtype||"complex64"===e.dtype)throw new Ff("batchDot is not implemented for complex64-type Tensors yet.");const r=t.shape.length,s=e.shape.length;null==n&&(n=[r-1,s-2]);const a=n;return Xi((()=>{let n,i;if(r>s){n=r-s;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else if(s>r){n=s-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else n=0;if(2===t.shape.length&&2===e.shape.length)i=a[0]===a[1]?t.mul(e).sum(a[0]):t.transpose([1,0]).mul(e).sum(a[1]);else{const n=a[0]!==t.shape.length-1,r=a[1]===e.shape.length-1;i=t.matMul(e,n,r)}if(n>0){let t;t=r>s?r+s-3:r-1;const e=[];for(let r=t;r<t+n;++r)e.push(r);i=i.squeeze(e)}return 1===i.shape.length&&(i=i.expandDims(1)),i}))}(n,r,e)}interpretAxes(t,e){let n;return n=Array.isArray(this.axes)?this.axes:[Hx(this.axes,t.length),Hx(this.axes,e.length)],n}computeOutputShape(t){Z(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new Ff("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);e.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=e.concat(n);return 1===s.length&&s.push(1),s}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}qx.className="Dot",$i(qx);class Kx extends Yg{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return Xi((()=>{this.invokeCallHook(t,e);const n=Bg(t);return Xm((()=>Vm(n.shape,0,this.stddev).add(n)),(()=>n),e.training||!1)}))}}Kx.className="GaussianNoise",$i(Kx);class Xx extends Yg{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Xi((()=>{this.invokeCallHook(t,e);const n=Bg(t);return this.rate>0&&this.rate<1?Xm((()=>{const t=Math.sqrt(this.rate/(1-this.rate));return n.mul(Vm(n.shape,1,t))}),(()=>n),e.training||!1):n}))}}Xx.className="GaussianDropout",$i(Xx);class Yx extends Yg{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||Bg(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Xi((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t);return Xm((()=>{const e=Bg(t),r=-1.7580993408473766;let s=vl(kc(n),this.rate);s=Fm(s,"float32");const a=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-a*r*this.rate;return e.mul(s).add(s.add(-1).mul(r)).mul(a).add(i)}),(()=>Bg(t)),e.training||!1)}return t}))}}function Jx(t,e,n,r,s,a=.001){let i;if(2===t.rank)i=Ru(t,e,n,r,s,a);else if(3===t.rank)i=_u(t,e,n,r,s,a);else{if(4!==t.rank)throw new Ff(`batchNormalization is not implemented for array of rank ${t.rank} yet`);i=Du(t,e,n,r,s,a)}return i}Yx.className="AlphaDropout",$i(Yx);class Zx extends Yg{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=yg(t.betaInitializer||"zeros"),this.gammaInitializer=yg(t.gammaInitializer||"ones"),this.movingMeanInitializer=yg(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=yg(t.movingVarianceInitializer||"ones"),this.betaConstraint=cm(t.betaConstraint),this.gammaConstraint=cm(t.gammaConstraint),this.betaRegularizer=Gb(t.betaRegularizer),this.gammaRegularizer=Gb(t.gammaRegularizer)}build(t){t=Pg(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(null==n)throw new Df(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape `+JSON.stringify(t)+".");this.inputSpec=[new jg({ndim:t.length,axes:{[e]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return Xi((()=>{const n=null!=e.training&&e.training,r=Bg(t),s=r.shape,a=s.length,i=Dm(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);const u=Mf(1,a);u[o]=s[o];const l=i.slice();l.sort();const c=!st(l,Dm(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const t=this.movingMean.read().reshape(u),e=this.movingVariance.read().reshape(u),n=this.center?this.beta.read().reshape(u):null,s=this.scale?this.gamma.read().reshape(u):null;return Jx(r,t,e,n,s,this.epsilon)}return Jx(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,p,d]=function(t,e,n,r,s=.001){return st(r.slice().sort(),Dm(0,t.rank-1))?function(t,e,n,r,s=.001){return Xi((()=>{const a=Ql(t,r),i=a.mean,o=a.variance;return[Jx(t,i,o,n,e,s),i,o]}))}(t,e,n,r,s):function(t,e,n,r,s=.001){return Xi((()=>{const a=Ql(t,r),i=a.mean,o=a.variance,u=[];for(const e of Dm(0,t.rank))-1!==r.indexOf(e)?u.push(1):u.push(t.shape[e]);const l=i.reshape(u),c=o.reshape(u),h=null==e?null:e.reshape(u),p=null==n?null:n.reshape(u);return[Jx(t,l,c,p,h,s),i,o]}))}(t,e,n,r,s)}(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(t,e,n)=>{Xi((()=>{const r=1-n,s=t.read(),a=s.sub(e).mul(r);t.write(s.sub(a))}))};return(()=>{f(this.movingMean,p,this.momentum),f(this.movingVariance,d,this.momentum)})(),h}))}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:gg(this.betaInitializer),gammaInitializer:gg(this.gammaInitializer),movingMeanInitializer:gg(this.movingMeanInitializer),movingVarianceInitializer:gg(this.movingVarianceInitializer),betaRegularizer:Vb(this.betaRegularizer),gammaRegularizer:Vb(this.gammaRegularizer),betaConstraint:um(this.betaConstraint),gammaConstraint:um(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Zx.className="BatchNormalization",$i(Zx);class Qx extends Yg{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error("Expected axis to be an integer, but received "+this.axis)}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, but received "+JSON.stringify(this.axis));for(const t of this.axis)if(!Number.isInteger(t))throw new Error("Expected axis to be an array of integers, but received "+JSON.stringify(this.axis))}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=yg(t.betaInitializer||"zeros"),this.gammaInitializer=yg(t.gammaInitializer||"ones"),this.betaRegularizer=Gb(t.betaRegularizer),this.gammaRegularizer=Gb(t.gammaRegularizer),this.supportsMasking=!0}build(t){const e=(t=Pg(t)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let t=0;t<this.axis.length;++t)this.axis[t]<0&&(this.axis[t]+=e);for(const t of this.axis)if(t<0||t>=e)throw new Error("Invalid axis: "+t);if(this.axis.length!==Kf(this.axis).length)throw new Error("Found duplicate axes in: "+this.axis);const n=this.axis.map((e=>t[e]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(t,e){const n=Bg(t),r=n.shape,s=r.length;return Xi((()=>{let{mean:t,variance:e}=Ql(n,this.axis,!0);const a=Mf(1,s);for(const t of this.axis)a[t]=r[t];const i=t=>null!=t&&t.shape.length!==s&&this.axis!==[s-1]?t.reshape(a):t;let o=i(this.gamma.read()),u=i(this.beta.read());const l=[],c=[];for(let t=0;t<s;++t)-1!==this.axis.indexOf(t)?(l.push(r[t]),c.push(1)):(l.push(1),c.push(r[t]));return t=t.tile(l),e=e.tile(l),o=o.tile(c),u=u.tile(c),Jx(n,t,e,u,o,this.epsilon)}))}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:gg(this.betaInitializer),gammaInitializer:gg(this.gammaInitializer),betaRegularizer:Vb(this.betaRegularizer),gammaRegularizer:Vb(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}Qx.className="LayerNormalization",$i(Qx);class tv extends Yg{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new Df(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,n;if("number"==typeof t.padding[0])e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new Df(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],2!==t.padding[1].length)throw new Df(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new jg({ndim:4})]}computeOutputShape(t){let e,n;return t=Pg(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,n]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,n,t[3]])}call(t,e){return Xi((()=>{return e=Bg(t),n=this.padding,r=this.dataFormat,Xi((()=>{if(4!==e.rank)throw new Df("temporalPadding expects input tensor to be 4-D, but received a "+e.rank+"-D tensor.");if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Df("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new Df(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let t;return t="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],ic(e,t)}));var e,n,r}))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}function ev(t,e,n,r,s,a){return Xi((()=>{let i;vm(s),km(a),wm(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),t=tx(t,s);const o="same"===r?"same":"valid";return i="max"===a?Ul(t,e,n,o):xu(t,e,n,o),"channelsFirst"===s&&(i=ni(i,[0,3,1,2])),i}))}function nv(t,e,n,r,s,a){return Xi((()=>{let i;vm(s),km(a),wm(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),t=ex(t,s);const o="same"===r?"same":"valid";return i="max"===a?Gl(t,e,n,o):vu(t,e,n,o),"channelsFirst"===s&&(i=ni(i,[0,4,1,2,3])),i}))}tv.className="ZeroPadding2D",$i(tv);class rv extends Yg{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"==typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!=typeof t.poolSize[0])throw new Df("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(t.poolSize));this.poolSize=t.poolSize}if(Zf(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"==typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!=typeof t.strides[0])throw new Df("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(t.strides));this.strides=t.strides}Zf(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,wm(this.padding),this.inputSpec=[new jg({ndim:3})]}computeOutputShape(t){const e=Zb((t=Pg(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return Xi((()=>{this.invokeCallHook(t,e),t=Om(Bg(t),2);const n=this.poolingFunction(Bg(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Qc(n,[2])}))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class sv extends rv{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return vm(s),wm(r),ev(t,e,n,r,s,"max")}}sv.className="MaxPooling1D",$i(sv);class av extends rv{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return vm(s),wm(r),ev(t,e,n,r,s,"avg")}}av.className="AveragePooling1D",$i(av);class iv extends Yg{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new Df("If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length "+t.strides.length+".");this.strides=t.strides}else this.strides=[t.strides,t.strides];Zf(this.poolSize,"poolSize"),Zf(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,vm(this.dataFormat),wm(this.padding),this.inputSpec=[new jg({ndim:4})]}computeOutputShape(t){t=Pg(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=Zb(e,this.poolSize[0],this.padding,this.strides[0]),n=Zb(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return Xi((()=>(this.invokeCallHook(t,e),this.poolingFunction(Bg(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class ov extends iv{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return vm(s),wm(r),ev(t,e,n,r,s,"max")}}ov.className="MaxPooling2D",$i(ov);class uv extends iv{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return vm(s),wm(r),ev(t,e,n,r,s,"avg")}}uv.className="AveragePooling2D",$i(uv);class lv extends Yg{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new Df("If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length "+t.strides.length+".");this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];Zf(this.poolSize,"poolSize"),Zf(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,vm(this.dataFormat),wm(this.padding),this.inputSpec=[new jg({ndim:5})]}computeOutputShape(t){t=Pg(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[4]:t[3];return e=Zb(e,this.poolSize[0],this.padding,this.strides[0]),n=Zb(n,this.poolSize[1],this.padding,this.strides[1]),r=Zb(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n,r]:[t[0],e,n,r,t[4]]}call(t,e){return Xi((()=>(this.invokeCallHook(t,e),this.poolingFunction(Bg(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class cv extends lv{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return vm(s),wm(r),nv(t,e,n,r,s,"max")}}cv.className="MaxPooling3D",$i(cv);class hv extends lv{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return vm(s),wm(r),nv(t,e,n,r,s,"avg")}}hv.className="AveragePooling3D",$i(hv);class pv extends Yg{constructor(t){super(t),this.inputSpec=[new jg({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new Ff}}class dv extends pv{constructor(t){super(t||{})}call(t,e){return Xi((()=>{const e=Bg(t);return Kl(e,1)}))}}dv.className="GlobalAveragePooling1D",$i(dv);class fv extends pv{constructor(t){super(t||{})}call(t,e){return Xi((()=>{const e=Bg(t);return Ol(e,1)}))}}fv.className="GlobalMaxPooling1D",$i(fv);class mv extends Yg{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,vm(this.dataFormat),this.inputSpec=[new jg({ndim:4})]}computeOutputShape(t){return t=t,"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new Ff}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class gv extends mv{call(t,e){return Xi((()=>{const e=Bg(t);return"channelsLast"===this.dataFormat?Kl(e,[1,2]):Kl(e,[2,3])}))}}gv.className="GlobalAveragePooling2D",$i(gv);class yv extends mv{call(t,e){return Xi((()=>{const e=Bg(t);return"channelsLast"===this.dataFormat?Ol(e,[1,2]):Ol(e,[2,3])}))}}yv.className="GlobalMaxPooling2D",$i(yv);class bv extends Yg{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){const r=hy(e.layer,n);delete e.layer;const s={layer:r};return Object.assign(s,e),new t(s)}}class xv extends bv{constructor(t){super(t),this.supportsMasking=!0}build(t){if((t=Pg(t)).length<3)throw new Df("TimeDistributed layer expects an input shape >= 3D, but received input shape "+JSON.stringify(t));this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){const e=[(t=Pg(t))[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),r=t[1];return[n[0],r].concat(n.slice(1))}call(t,e){return Xi((()=>mx(((t,n)=>[Bg(this.layer.call(t,e)),[]]),t=Bg(t),[],!1,null,null,!1,!0)[1]))}}xv.className="TimeDistributed",$i(xv);class vv extends bv{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=hy(n),e.goBackwards=!0!==e.goBackwards;const r={};var s;if(r.className=t.layer.getClassName(),r.config=e,this.backwardLayer=hy(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?"concat":t.mergeMode,s=this.mergeMode,Yf(bm,"BidirectionalMergeMode",s),t.weights)throw new Ff("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e,n,r,s=this.forwardLayer.computeOutputShape(t);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),s=s,this.returnState?(r=s.slice(1),e=s[0]):e=s[0],e=e,"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[e].concat(r).concat(r.slice()):Bf(n)}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const s=fx(t,n,r,this.numConstants);if(t=s.inputs,n=s.initialState,r=s.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(null==n||0===n.length)&&null==r)return super.apply(t,e);const a=[],i=[];if(null!=n){const t=n.length;if(t%2>0)throw new Df("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,a.push(...n);const r=n.map((t=>new jg({shape:t.shape})));this.forwardLayer.stateSpec=r.slice(0,t/2),this.backwardLayer.stateSpec=r.slice(t/2),i.push(...r)}if(null!=r)throw new Ff("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof Hg;for(const t of a)if(t instanceof Hg!==o)throw new Df("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[t].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,e);return this.inputSpec=s,o}return super.apply(t,e)}call(t,e){return Xi((()=>{const n=e.initialState;let r,s,a,i;if(null==n)r=this.forwardLayer.call(t,e),s=this.backwardLayer.call(t,e);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(t,Object.assign(e,{initialState:a})),s=this.backwardLayer.call(t,Object.assign(e,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=Ec(s,1)),"concat"===this.mergeMode?i=Bm([r,s]):"sum"===this.mergeMode?i=uo(r,s):"ave"===this.mergeMode?i=ho(.5,uo(r,s)):"mul"===this.mergeMode?i=ho(r,s):null==this.mergeMode&&(i=[r,s]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i}))}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){Im(this.forwardLayer.name,(()=>{this.forwardLayer.build(t)})),Im(this.backwardLayer.name,(()=>{this.backwardLayer.build(t)})),this.built=!0}computeMask(t,e){let n;if(Array.isArray(e)&&(e=e[0]),n=this.returnSequences?null==this.mergeMode?[e,e]:e:null==this.mergeMode?[null,null]:null,this.returnState){const t=this.forwardLayer.states.map((t=>null));return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=hy(e.layer);if(delete e.layer,null!=e.numConstants)throw new Ff("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=e;return r.layer=n,new t(r)}}function wv(t){return new Zg(t)}function kv(t){return new Kb(t)}function Nv(t){return new jb(t)}function Iv(t){return new Hb(t)}function Sv(t){return new qb(t)}function Cv(t){return new Yb(t)}function Tv(t){return new Xb(t)}function Ev(t){return new cx(t)}function $v(t){return new ax(t)}function Av(t){return new ox(t)}function Rv(t){return new ix(t)}function _v(t){return new lx(t)}function Dv(t){return new hx(t)}function Fv(t){return new px(t)}function Ov(t){return new dx(t)}function Mv(t){return new Dx(t)}function Lv(t){return new Rx(t)}function zv(t){return new $x(t)}function Bv(t){return new Ax(t)}function Pv(t){return new _x(t)}function Wv(t){return new Fx(t)}function Vv(t){return new Ox(t)}function Uv(t){return new Mx(t)}function Gv(t){return new zx(t)}function jv(t){return new Px(t)}function Hv(t){return new Vx(t)}function qv(t){return new jx(t)}function Kv(t){return new Ux(t)}function Xv(t){return new Gx(t)}function Yv(t){return new Wx(t)}function Jv(t){return new qx(t)}function Zv(t){return new Zx(t)}function Qv(t){return new Qx(t)}function tw(t){return new tv(t)}function ew(t){return new av(t)}function nw(t){return ew(t)}function rw(t){return ew(t)}function sw(t){return new uv(t)}function aw(t){return sw(t)}function iw(t){return sw(t)}function ow(t){return new hv(t)}function uw(t){return ow(t)}function lw(t){return ow(t)}function cw(t){return new dv(t)}function hw(t){return new gv(t)}function pw(t){return new fv(t)}function dw(t){return new yv(t)}function fw(t){return new sv(t)}function mw(t){return new ov(t)}function gw(t){return new cv(t)}function yw(t){return new wx(t)}function bw(t){return new vx(t)}function xw(t){return new Nx(t)}function vw(t){return new kx(t)}function ww(t){return new xx(t)}function kw(t){return new bx(t)}function Nw(t){return new Ex(t)}function Iw(t){return new Tx(t)}function Sw(t){return new gx(t)}function Cw(t){return new Ix(t)}function Tw(t){return new vv(t)}function Ew(t){return new xv(t)}vv.className="Bidirectional",$i(vv);const $w=pw,Aw=dw,Rw=fw,_w=mw;function Dw(t){return new Kx(t)}function Fw(t){return new Xx(t)}function Ow(t){return new Yx(t)}function Mw(t){return new Lx(t)}function Lw(t,e){return ky(t,e)}function zw(t,e){return Cy(t,e)}function Bw(t,e){return Ty(t,e)}function Pw(t,e){return Ny(t,e)}function Ww(t,e){return Ey(t,e)}function Vw(t,e){return Sy(t,e)}function Uw(t,e){return function(t,e){return Xi((()=>{const n=Iy(t,e),r=function(t,e){return Xi((()=>Bl(t.equal(1),e.equal(0)).sum().cast("float32")))}(t,e),s=n.add(r);return nl(xl(s,0),n.div(s),0).cast("float32")}))}(t,e)}function Gw(t,e){return xy(t,e)}function jw(t,e){return fy(t,e)}function Hw(t,e){return my(t,e)}function qw(t,e){return my(t,e)}function Kw(t,e){return my(t,e)}function Xw(t,e){return dy(t,e)}function Yw(t,e){return dy(t,e)}function Jw(t,e){return dy(t,e)}function Zw(t){return new Pb(t)}function Qw(t){return zb(e=t),new Pb({l1:null!=e?e.l1:null,l2:0});var e}function tk(t){return zb(e=t),new Pb({l2:null!=e?e.l2:null,l1:0});var e}class ek extends ry{constructor(){super(...arguments),this.model=null}setModel(t){if(!(t instanceof pb))throw new Error("model must be a LayersModel, not some other Container");this.model=t}}function nk(t,e){return t<e}function rk(t,e){return t>e}class sk extends ek{constructor(t){if(super(),null==t&&(t={}),t.restoreBestWeights)throw new Ff("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=t.monitor||"val_loss",this.minDelta=Math.abs(t.minDelta||0),this.patience=t.patience||0,this.verbose=t.verbose||0,this.mode=t.mode||"auto",this.baseline=t.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=nk:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=rk:this.monitorFunc=nk,this.monitorFunc===nk&&(this.minDelta*=-1)}async onTrainBegin(t){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===nk?1/0:-1/0}async onEpochEnd(t,e){await ty(e);const n=this.getMonitorValue(e);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=t,this.model.stopTraining=!0)))}async onTrainEnd(t){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(t){null==t&&(t={});const e=t[this.monitor];return null==e&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: `+Object.keys(t)),e}}const ak={earlyStopping:function(t){return new sk(t)}};var ik,ok;!function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(ik||(ik={})),function(t){let e;!function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}(ok||(ok={}));const uk={};function lk(t,e){const n={tfOpName:t,category:"custom",inputs:[],attrs:[],customExecutor:e};uk[t]=n}function ck(t){return uk[t]}function hk(t){delete uk[t]}function pk(t,e,n,r,s){const a=e.inputParams[t];if(a&&void 0!==a.inputIndexStart){const t=a.inputIndexStart,i=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?t+1:a.inputIndexEnd;if("tensor"===a.type)return dk(e.inputNames[a.inputIndexStart],n,r,s);if("tensors"===a.type)return e.inputNames.slice(t,i).map((t=>dk(t,n,r,s)));const o=dk(e.inputNames.slice(t)[0],n,r,s),u=o.dataSync();return"number"===a.type?u[0]:At(o.shape,u)}const i=e.attrParams[t];return i&&i.value}function dk(t,e,n,r){const[s,a]=gk(t);if(null!=r){const t=r.getHashTableHandleByName(s);if(null!=t)return t}const i=n.currentContextIds.find((t=>!!e[mk(s,t)]));return void 0!==i?e[mk(s,i)][a]:void 0}function fk(t,e){const[n,r]=gk(t);return[mk(n,e&&e.currentContextId),r]}function mk(t,e){return e?`${t}-${e}`:t}function gk(t){const e=t.split(":");return 1===e.length?[t,0]:[e[0],Number(e[e.length-1])]}function yk(t,e,n){let r=pk("pad",t,e,n);if("explicit"===r){r=pk("explicitPaddings",t,e,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let t=0;t<4;t++)s[t][0]=r[2*t],s[t][1]=r[2*t+1];return s}return r}function bk(t){return t.kept?t:Fa(t)}const xk=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],vk=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"clip_value_min",name:"clipValueMin",type:"number"},{tfName:"clip_value_max",name:"clipValueMax",type:"number"}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"clipValueMin",name:"clipValueMin",type:"number",defaultValue:0},{tfName:"clipValueMax",name:"clipValueMax",type:"number",defaultValue:6}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],wk=[{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],kk=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],Nk=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],Ik=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Sk=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],Ck=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],Tk=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]}],Ek=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],$k=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Ak=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Rk=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],_k=[{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],Dk=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool",notSupported:!0}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],Fk=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],Ok=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}];class Mk{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const t=[].concat(...[I,S,C,T,E,$,A,F,D,R,O,M,L,z,B,P,_].map((t=>t.json)));this.opMappers=t.reduce(((t,e)=>(t[e.tfOpName]=e,t)),{})}transformGraph(t,e={}){const n=t.node,r=[],s=[],a=[],i=n.reduce(((t,e)=>(t[e.name]=this.mapNode(e),e.op.startsWith("Placeholder")?r.push(t[e.name]):"Const"===e.op?s.push(t[e.name]):null!=e.input&&0!==e.input.length||a.push(t[e.name]),t)),{});let o=[];const u=[];let l={},c={};null!=e&&(l=this.mapSignatureEntries(e.inputs),c=this.mapSignatureEntries(e.outputs));const h=Object.keys(i);h.forEach((t=>{const e=i[t];e.inputNames.forEach((t=>{const[n]=fk(t);e.inputs.push(i[n]),i[n].children.push(e)}))})),0===Object.keys(c).length?h.forEach((t=>{const e=i[t];0===e.children.length&&u.push(e)})):Object.keys(c).forEach((t=>{const[e]=fk(t),n=i[e];null!=n&&(n.signatureKey=c[t],u.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((t=>{const[e]=fk(t),n=i[e];n&&(n.signatureKey=l[t],o.push(n))})):o=r;let p={};null!=t.library&&null!=t.library.function&&(p=t.library.function.reduce(((t,e)=>(t[e.signature.name]=this.mapFunction(e),t)),{}));const d={nodes:i,inputs:o,outputs:u,weights:s,placeholders:r,signature:e,functions:p};return a.length>0&&(d.initNodes=a),d}mapSignatureEntries(t){return Object.keys(t||{}).reduce(((e,n)=>(e[t[n].name]=n,e)),{})}mapNode(t){const e=ck(t.op)||this.opMappers[t.op]||{};null==t.attr&&(t.attr={});const n={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map((t=>t.startsWith("^")?t.substr(1):t)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr};return null!=e.inputs&&(n.inputParams=e.inputs.reduce(((t,e)=>(t[e.name]={type:e.type,inputIndexStart:e.start,inputIndexEnd:e.end},t)),{})),null!=e.attrs&&(n.attrParams=e.attrs.reduce(((e,n)=>{const r=n.type;let s=void 0;switch(n.type){case"string":s=zk(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=zk(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":s=Kk(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Kk(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":s=Pk(t.attr,n.tfName,n.defaultValue||0),void 0===s&&n.tfDeprecatedName&&(s=Pk(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":s=qk(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=qk(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":s=Bk(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Bk(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":s=Yk(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Yk(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":s=Hk(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Hk(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":s=Xk(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Xk(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":s=Uk(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Uk(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":s=Gk(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Gk(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":s=Vk(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Vk(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${t.op}`)}return e[n.name]={value:s,type:r},e}),{})),n}mapFunction(t){const e=t.nodeDef,n=[];let r={};null!=e&&(r=e.reduce(((t,e)=>(t[e.name]=this.mapNode(e),"Const"===e.op&&n.push(t[e.name]),t)),{}));const s=[],a=[];t.signature.inputArg.forEach((t=>{const[e]=fk(t.name),n={name:e,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Wk(t.type),type:"dtype"}},children:[]};n.signatureKey=t.name,s.push(n),r[e]=n})),Object.keys(r).forEach((t=>{const e=r[t];e.inputNames.forEach((t=>{const[n]=fk(t);e.inputs.push(r[n]),r[n].children.push(e)}))}));const i=t.ret;t.signature.outputArg.forEach((t=>{const[e,n]=fk(i[t.name]),s=r[e];null!=s&&(s.defaultOutput=n,a.push(s))}));const o=this.mapArgsToSignature(t);return{nodes:r,inputs:s,outputs:a,weights:n,placeholders:[],signature:o}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce(((t,e)=>(t[e.name]=this.mapArgToTensorInfo(e),t)),{}),outputs:t.signature.outputArg.reduce(((e,n)=>(e[n.name]=this.mapArgToTensorInfo(n,t.ret),e)),{})}}mapArgToTensorInfo(t,e){let n=t.name;return null!=e&&(n=e[n]),{name:n,dtype:t.type}}}function Lk(t,e){const n=Array.isArray(t)?String.fromCharCode.apply(null,t):function(t){const e=Bt().global;if(void 0!==e.atob)return e.atob(t);if("undefined"!=typeof Buffer)return new Buffer(t,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(t);return e?n:n.toLowerCase()}function zk(t,e,n,r=!1){const s=t[e];return null!=s?Lk(s.s,r):n}function Bk(t,e,n){const r=t[e];return r?r.b:n}function Pk(t,e,n){const r=t[e]||{},s=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof s?s:parseInt(s,10)}function Wk(t){switch("string"==typeof t&&(t=ik[t]),t){case ik.DT_FLOAT:return"float32";case ik.DT_INT32:case ik.DT_INT64:case ik.DT_INT8:case ik.DT_UINT8:return"int32";case ik.DT_BOOL:return"bool";case ik.DT_DOUBLE:return"float32";case ik.DT_STRING:return"string";default:return null}}function Vk(t,e,n){const r=t[e];return r&&r.func?r.func.name:n}function Uk(t,e,n){const r=t[e];return r&&r.type?Wk(r.type):n}function Gk(t,e,n){const r=t[e];return r&&r.list&&r.list.type?r.list.type.map((t=>Wk(t))):n}function jk(t){if(!t.unknownRank)return null!=t.dim?t.dim.map((t=>"number"==typeof t.size?t.size:parseInt(t.size,10))):[]}function Hk(t,e,n){const r=t[e];return r&&r.shape?jk(r.shape):n}function qk(t,e,n){const r=t[e];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((t=>"number"==typeof t?t:parseInt(t,10))):n}function Kk(t,e,n,r=!1){const s=t[e];return s&&s.list&&s.list.s?s.list.s.map((t=>Lk(t,r))):n}function Xk(t,e,n){const r=t[e];return r&&r.list&&r.list.shape?r.list.shape.map((t=>jk(t))):n}function Yk(t,e,n){const r=t[e];return r&&r.list&&r.list.b?r.list.b:n}class Jk{constructor(t,e,n){this.node=t,this.tensorMap=e,this.context=n,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map((t=>this.getInput(t))),null!=t.rawAttrs&&(this.attrs=Object.keys(t.rawAttrs).reduce(((t,e)=>(t[e]=this.getAttr(e),t)),{}))}getInput(t){return dk(t,this.tensorMap,this.context)}getAttr(t,e){const n=this.node.rawAttrs[t];if(null!=n.tensor)return dk(t,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return Pk(this.node.rawAttrs,t,e);if(null!=n.s)return zk(this.node.rawAttrs,t,e);if(null!=n.b)return Bk(this.node.rawAttrs,t,e);if(null!=n.shape)return Hk(this.node.rawAttrs,t,e);if(null!=n.type)return Uk(this.node.rawAttrs,t,e);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return qk(this.node.rawAttrs,t,e);if(null!=n.list.s)return Kk(this.node.rawAttrs,t,e);if(null!=n.list.shape)return Xk(this.node.rawAttrs,t,e);if(null!=n.list.b)return Yk(this.node.rawAttrs,t,e);if(null!=n.list.type)return Gk(this.node.rawAttrs,t,e)}return e}}function Zk(t,e,n=""){Z(function(t,e){if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(-1!==t[n]&&-1!==e[n]&&t[n]!==e[n])return!1;return!0}(t,e),(()=>n+` Shapes ${t} and ${e} must match`))}class Qk{constructor(t,e,n,r,s,a,i){this.name=t,this.dtype=e,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=s,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=No(0),Ji(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach((e=>{null!=t&&t.has(e.tensor.id)||e.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);const e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map((t=>this.read(t)))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},\n          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=e.shape),Zk(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);n.tensor=e,Ji(e),n.written=!0,this.tensors[t]=n}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach(((t,n)=>this.write(t,e[n])))}gather(t,e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let e=0;e<this.size();e++)t.push(e)}if(0===t.length)return Ps([],[0].concat(this.elementShape));const n=this.readMany(t);return Zk(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),th(n,0)}concat(t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(0===this.size())return Ps([],[0].concat(this.elementShape));const e=[];for(let t=0;t<this.size();t++)e.push(t);const n=this.readMany(e);return Zk(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Nu(n,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const n=Math.max(...t);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(t,ph(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let n=0;const r=t.map((t=>(n+=t,n)));if(n!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);const s=0===n?0:e.size/n,a=[];Xi((()=>{e=Qa(e,[1,n,s]);for(let n=0;n<t.length;++n){const i=[0,0===n?0:r[n-1],0],o=[1,t[n],s];a[n]=Qa(Su(e,i,o),this.elementShape)}return a}));const i=[];for(let e=0;e<t.length;e++)i[e]=e;this.writeMany(i,a)}}class tN{constructor(t,e,n,r=-1){this.tensors=t,this.elementShape=e,this.elementDtype=n,null!=t&&t.forEach((t=>{if(n!==t.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${t.dtype}`);Zk(e,t.shape,"TensorList shape mismatch: "),Ji(t)})),this.idTensor=No(0),this.maxNumElements=r,Ji(this.idTensor)}get id(){return this.idTensor.id}copy(){return new tN([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach((e=>{null!=t&&t.has(e.id)||e.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,n=-1){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);return Zk(t,this.elementShape,"TensorList shape mismatch: "),Xi((()=>{const e=this.tensors.map((e=>Qa(e,t)));return th(e,0)}))}popBack(t,e){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=this.tensors.pop();return Zk(n.shape,t,"TensorList shape mismatch: "),Qa(n,t)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(Zk(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Ji(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error("TensorListResize expects size to be non-negative. Got: "+t);if(-1!==this.maxNumElements&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=t}getItem(t,e,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[t])throw new Error(`element at index ${t} is null.`);return Zk(this.tensors[t].shape,e,"TensorList shape mismatch: "),this.tensors[t]}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(t<0||-1!==this.maxNumElements&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);Zk(this.elementShape,e.shape,"TensorList shape mismatch: "),Ji(e),this.tensors[t]=e}gather(t,e,n){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);return Zk(this.elementShape,n,"TensorList shape mismatch: "),0===(t=t.slice(0,this.size())).length?Ps([],[0].concat(this.elementShape)):Xi((()=>{const e=t.map((t=>Qa(this.tensors[t],n)));return th(e,0)}))}concat(t,e){if(t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);return Zk(this.elementShape,e,"TensorList shape mismatch: "),0===this.size()?Ps([],[0].concat(this.elementShape)):Xi((()=>{const t=this.tensors.map((t=>Qa(t,e)));return Nu(t,0)}))}}function eN(t,e,n){const[r,s]=pk("fusedOps",t,e,n),a="biasadd"===r,i="prelu"===s,o="fusedbatchnorm"===r,u=pk("numArgs",t,e,n);if(a){if(i&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(o)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");const l=pk("strides",t,e,n),c=yk(t,e,n),h=pk("dataFormat",t,e,n).toUpperCase(),p=pk("dilations",t,e,n),[d,f]=pk("args",t,e,n);return{stride:l,pad:c,dataFormat:h,dilations:p,biasArg:d,preluArg:f,activationFunc:s}}function nN(t,e,n){return{boxes:pk("boxes",t,e,n),scores:pk("scores",t,e,n),maxOutputSize:pk("maxOutputSize",t,e,n),iouThreshold:pk("iouThreshold",t,e,n),scoreThreshold:pk("scoreThreshold",t,e,n),softNmsSigma:pk("softNmsSigma",t,e,n)}}class rN{constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=No(0),this.tensorMap=new Map,Ji(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((t=>t.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}async import(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return this.tensorMap.forEach((t=>t.dispose())),this.tensorMap.clear(),Xi((()=>{const t=ph(e),r=n.length,s=t.length;Z(r===s,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${s} elements.`));for(let e=0;e<r;e++){const r=n[e],s=t[e];Ji(s),this.tensorMap.set(r,s)}return this.handle}))}async find(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return Xi((()=>{const t=[];for(let r=0;r<n.length;r++){const s=n[r],a=this.findWithDefault(s,e);t.push(a)}return th(t)}))}findWithDefault(t,e){const n=this.tensorMap.get(t);return null!=n?n:e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got `+t.dtype);if(e.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got `+e.dtype)}}function sN(t,e,n,r){const s=((t,e,n)=>{switch(t.category){case"arithmetic":return Xi((()=>((t,e,n)=>{switch(t.op){case"BiasAdd":case"AddV2":case"Add":return[uo(pk("a",t,e,n),pk("b",t,e,n))];case"AddN":return[Vo(pk("tensors",t,e,n))];case"FloorMod":case"Mod":return[Zl(pk("a",t,e,n),pk("b",t,e,n))];case"Mul":return[ho(pk("a",t,e,n),pk("b",t,e,n))];case"RealDiv":case"Div":return[co(pk("a",t,e,n),pk("b",t,e,n))];case"DivNoNan":return[rl(pk("a",t,e,n),pk("b",t,e,n))];case"FloorDiv":return[lo(pk("a",t,e,n),pk("b",t,e,n))];case"Sub":return[$o(pk("a",t,e,n),pk("b",t,e,n))];case"Minimum":return[Yl(pk("a",t,e,n),pk("b",t,e,n))];case"Maximum":return[Oo(pk("a",t,e,n),pk("b",t,e,n))];case"Pow":return[Eo(pk("a",t,e,n),pk("b",t,e,n))];case"SquaredDifference":return[Zc(pk("a",t,e,n),pk("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"basic_math":return Xi((()=>((t,e,n)=>{switch(t.op){case"Abs":case"ComplexAbs":return[Ro(pk("x",t,e,n))];case"Acos":return[Po(pk("x",t,e,n))];case"Acosh":return[Wo(pk("x",t,e,n))];case"Asin":return[eu(pk("x",t,e,n))];case"Asinh":return[nu(pk("x",t,e,n))];case"Atan":return[ru(pk("x",t,e,n))];case"Atan2":return[su(pk("x",t,e,n),pk("y",t,e,n))];case"Atanh":return[au(pk("x",t,e,n))];case"Ceil":return[Ou(pk("x",t,e,n))];case"Complex":return[zs(pk("real",t,e,n),pk("imag",t,e,n))];case"Cos":return[Ku(pk("x",t,e,n))];case"Cosh":return[Xu(pk("x",t,e,n))];case"Elu":return[al(pk("x",t,e,n))];case"Erf":return[il(pk("x",t,e,n))];case"Exp":return[ol(pk("x",t,e,n))];case"Expm1":return[ll(pk("x",t,e,n))];case"Floor":return[pl(pk("x",t,e,n))];case"Log":return[Al(pk("x",t,e,n))];case"Log1p":return[Rl(pk("x",t,e,n))];case"Imag":return[wl(pk("x",t,e,n))];case"Neg":return[_l(pk("x",t,e,n))];case"Reciprocal":return[Sc(pk("x",t,e,n))];case"Real":return[rc(pk("x",t,e,n))];case"Relu":return[Cc(pk("x",t,e,n))];case"Round":return[Dc(pk("x",t,e,n))];case"Selu":return[Oc(pk("x",t,e,n))];case"Sigmoid":return[Iu(pk("x",t,e,n))];case"Sin":return[Bc(pk("x",t,e,n))];case"Sign":return[zc(pk("x",t,e,n))];case"Sinh":return[Pc(pk("x",t,e,n))];case"Softplus":return[Dl(pk("x",t,e,n))];case"Sqrt":return[po(pk("x",t,e,n))];case"Square":return[fo(pk("x",t,e,n))];case"Tanh":return[Cu(pk("x",t,e,n))];case"Tan":return[rh(pk("x",t,e,n))];case"Relu6":case"ClipByValue":return[Mu(pk("x",t,e,n),pk("clipValueMin",t,e,n),pk("clipValueMax",t,e,n))];case"Rsqrt":return[Fc(dk(t.inputNames[0],e,n))];case"Prod":return[fc(pk("x",t,e,n),pk("axes",t,e,n))];case"LeakyRelu":return[Sl(pk("x",t,e,n),pk("alpha",t,e,n))];case"Prelu":return[dc(pk("x",t,e,n),pk("alpha",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"control":return(async(t,e,n)=>{switch(t.op){case"If":case"StatelessIf":{const r=pk("thenBranch",t,e,n),s=pk("elseBranch",t,e,n),a=pk("cond",t,e,n),i=pk("args",t,e,n);return(await a.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[s].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=pk("body",t,e,n),s=pk("cond",t,e,n),a=pk("args",t,e,n),i=await n.functionMap[s].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),o=a.map((t=>t.id));let u=await i[0].data();i.forEach((t=>{t.kept||-1!==o.indexOf(t.id)||t.dispose()}));let l=a;for(;u[0];){const t=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const e=l.map((t=>t.id));t.forEach((t=>{t.kept||-1!==o.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()}));const a=await n.functionMap[s].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await a[0].data(),a.forEach((t=>{t.kept||-1!==o.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()}))}return l}case"LoopCond":return[bk(pk("pred",t,e,n))];case"Switch":{const r=pk("pred",t,e,n);let s=pk("data",t,e,n);return s.kept||(s=bk(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=t.inputNames.find((t=>void 0!==dk(t,e,n)));return r?[bk(dk(r,e,n))]:void 0}case"Enter":{const r=pk("frameName",t,e,n),s=pk("tensor",t,e,n);return n.enterFrame(r),[bk(s)]}case"Exit":{const r=pk("tensor",t,e,n);return n.exitFrame(),[bk(r)]}case"NextIteration":{const r=pk("tensor",t,e,n);return n.nextIteration(),[bk(r)]}case"TensorArrayV3":{const r=pk("size",t,e,n),s=pk("dtype",t,e,n),a=pk("elementShape",t,e,n),i=pk("dynamicSize",t,e,n),o=pk("clearAfterRead",t,e,n),u=pk("identicalElementShapes",t,e,n),l=pk("name",t,e,n),c=new Qk(l,s,r,a,u,i,o);return n.addTensorArray(c),[c.idTensor,No(1)]}case"TensorArrayWriteV3":{const r=pk("tensorArrayId",t,e,n),s=pk("index",t,e,n),a=pk("tensor",t,e,n),i=n.getTensorArray(r.id);return i.write(s,a),[i.idTensor]}case"TensorArrayReadV3":{const r=pk("tensorArrayId",t,e,n),s=pk("index",t,e,n);return[n.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=pk("tensorArrayId",t,e,n),s=pk("indices",t,e,n),a=pk("dtype",t,e,n);return[n.getTensorArray(r.id).gather(s,a)]}case"TensorArrayScatterV3":{const r=pk("tensorArrayId",t,e,n),s=pk("indices",t,e,n),a=pk("tensor",t,e,n),i=n.getTensorArray(r.id);return i.scatter(s,a),[i.idTensor]}case"TensorArrayConcatV3":{const r=pk("tensorArrayId",t,e,n),s=n.getTensorArray(r.id),a=pk("dtype",t,e,n);return[s.concat(a)]}case"TensorArraySplitV3":{const r=pk("tensorArrayId",t,e,n),s=pk("tensor",t,e,n),a=pk("lengths",t,e,n),i=n.getTensorArray(r.id);return i.split(a,s),[i.idTensor]}case"TensorArraySizeV3":{const r=pk("tensorArrayId",t,e,n);return[No(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=pk("tensorArrayId",t,e,n),s=n.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=pk("tensorListId",t,e,n),s=pk("index",t,e,n),a=pk("tensor",t,e,n),i=n.getTensorList(r.id);return i.setItem(s,a),[i.idTensor]}case"TensorListGetItem":{const r=pk("tensorListId",t,e,n),s=pk("index",t,e,n),a=pk("elementShape",t,e,n),i=pk("elementDType",t,e,n);return[n.getTensorList(r.id).getItem(s,a,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=pk("indices",t,e,n),s=function(t,e,n,r){if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const s=Math.max(...e);if(null!=r&&-1!==r&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const a=new tN([],n,t.dtype,r),i=ph(t,0);return e.forEach(((t,e)=>{a.setItem(t,i[e])})),a}(pk("tensor",t,e,n),r,pk("elementShape",t,e,n),pk("numElements",t,e,n));return n.addTensorList(s),[s.idTensor]}case"TensorListReserve":{const i=(r=pk("elementShape",t,e,n),s=pk("elementDType",t,e,n),a=pk("numElements",t,e,n),new tN([],r,s,a));return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const r=pk("tensorListId",t,e,n),s=pk("indices",t,e,n),a=pk("elementShape",t,e,n),i=pk("elementDType",t,e,n);return[n.getTensorList(r.id).gather(s,i,a)]}case"TensorListStack":{const r=pk("tensorListId",t,e,n),s=pk("elementShape",t,e,n),a=pk("elementDType",t,e,n),i=pk("numElements",t,e,n);return[n.getTensorList(r.id).stack(s,a,i)]}case"TensorListFromTensor":{const r=function(t,e,n){const r=t.dtype;if(t.shape.length<1)throw new Error("Tensor must be at least a vector, but saw shape: "+t.shape);if(t.dtype!==n)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${n}`);Zk(t.shape.slice(1),e,"TensorList shape mismatch: ");const s=ph(t);return new tN(s,e,r)}(pk("tensor",t,e,n),pk("elementShape",t,e,n),pk("elementDType",t,e,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=pk("tensorListId",t,e,n),s=n.getTensorList(r.id),a=pk("dtype",t,e,n),i=pk("elementShape",t,e,n);return[s.concat(a,i)]}case"TensorListPushBack":{const r=pk("tensorListId",t,e,n),s=pk("tensor",t,e,n),a=n.getTensorList(r.id);return a.pushBack(s),[a.idTensor]}case"TensorListPopBack":{const r=pk("tensorListId",t,e,n),s=pk("elementShape",t,e,n),a=pk("elementDType",t,e,n);return[n.getTensorList(r.id).popBack(s,a)]}case"TensorListSplit":{const r=pk("tensor",t,e,n),s=pk("elementShape",t,e,n),a=function(t,e,n){let r=0;const s=e.map((t=>(r+=t,r)));if(r!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${t.shape}`);const a=0===r?0:t.size/r,i=Xi((()=>{const i=[];t=Qa(t,[1,r,a]);for(let r=0;r<e.length;++r){const o=[0,0===r?0:s[r-1],0],u=[1,e[r],a];i[r]=Qa(Su(t,o,u),n)}return t.dispose(),i})),o=new tN([],n,t.dtype,e.length);for(let t=0;t<i.length;t++)o.setItem(t,i[t]);return o}(r,pk("lengths",t,e,n),s);return n.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${t.op} is not implemented`)}var r,s,a})(t,e,n);case"convolution":return Xi((()=>((t,e,n)=>{switch(t.op){case"Conv1D":{const r=pk("stride",t,e,n),s=pk("pad",t,e,n),a=pk("dataFormat",t,e,n).toUpperCase(),i=pk("dilation",t,e,n);return[Vu(pk("x",t,e,n),pk("filter",t,e,n),r,s,a,i)]}case"Conv2D":{const r=pk("strides",t,e,n),s=yk(t,e,n),a=pk("dataFormat",t,e,n).toUpperCase(),i=pk("dilations",t,e,n);return[Wu(pk("x",t,e,n),pk("filter",t,e,n),[r[1],r[2]],s,a,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:s,dataFormat:a,dilations:i,biasArg:o,preluArg:u,activationFunc:l}=eN(t,e,n);return[qh({x:pk("x",t,e,n),filter:pk("filter",t,e,n),strides:[r[1],r[2]],pad:s,dataFormat:a,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:s,dataFormat:a,dilations:i,biasArg:o,preluArg:u,activationFunc:l}=eN(t,e,n);return[Yh({x:pk("x",t,e,n),filter:pk("filter",t,e,n),strides:[r[1],r[2]],pad:s,dataFormat:a,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=pk("outputShape",t,e,n),s=pk("strides",t,e,n),a=yk(t,e,n);return[Gu(pk("x",t,e,n),pk("filter",t,e,n),r,[s[1],s[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=pk("strides",t,e,n),s=yk(t,e,n),a=pk("dilations",t,e,n),i=pk("dataFormat",t,e,n).toUpperCase();return[Zu(pk("input",t,e,n),pk("filter",t,e,n),[r[1],r[2]],s,i,[a[1],a[2]])]}case"Conv3D":{const r=pk("strides",t,e,n),s=pk("pad",t,e,n),a=pk("dataFormat",t,e,n).toUpperCase(),i=pk("dilations",t,e,n);return[ju(pk("x",t,e,n),pk("filter",t,e,n),[r[1],r[2],r[3]],s,a,[i[1],i[2],i[3]])]}case"AvgPool":{const r=pk("strides",t,e,n),s=pk("pad",t,e,n),a=pk("kernelSize",t,e,n);return[xu(pk("x",t,e,n),[a[1],a[2]],[r[1],r[2]],s)]}case"MaxPool":{const r=pk("strides",t,e,n),s=pk("pad",t,e,n),a=pk("kernelSize",t,e,n);return[Ul(pk("x",t,e,n),[a[1],a[2]],[r[1],r[2]],s)]}case"MaxPoolWithArgmax":{const r=pk("strides",t,e,n),s=pk("pad",t,e,n),a=pk("kernelSize",t,e,n),i=pk("includeBatchInIndex",t,e,n),{result:o,indexes:u}=jl(pk("x",t,e,n),[a[1],a[2]],[r[1],r[2]],s,i);return[o,u]}case"AvgPool3D":{const r=pk("strides",t,e,n),s=pk("pad",t,e,n),a=pk("kernelSize",t,e,n);return[vu(pk("x",t,e,n),[a[1],a[2],a[3]],[r[1],r[2],r[3]],s)]}case"MaxPool3D":{const r=pk("strides",t,e,n),s=pk("pad",t,e,n),a=pk("kernelSize",t,e,n);return[Gl(pk("x",t,e,n),[a[1],a[2],a[3]],[r[1],r[2],r[3]],s)]}case"Dilation2D":{const r=pk("strides",t,e,n),s=pk("pad",t,e,n),a=pk("dilations",t,e,n),i=r[1],o=r[2],u=a[1],l=a[2];return[tl(pk("x",t,e,n),pk("filter",t,e,n),[i,o],s,[u,l],"NHWC")]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"creation":return Xi((()=>((t,e,n)=>{switch(t.op){case"Fill":{const r=pk("shape",t,e,n),s=pk("dtype",t,e,n);return[Co(r,pk("value",t,e,n),s)]}case"LinSpace":return[El(pk("start",t,e,n),pk("stop",t,e,n),pk("num",t,e,n))];case"Multinomial":{const r=pk("logits",t,e,n),s=pk("numSamples",t,e,n),a=pk("seed",t,e,n);return[ec(r,s,a)]}case"OneHot":{const r=pk("indices",t,e,n),s=pk("depth",t,e,n),a=pk("onValue",t,e,n),i=pk("offValue",t,e,n);return[ei(r,s,a,i)]}case"Ones":return[ql(pk("shape",t,e,n),pk("dtype",t,e,n))];case"OnesLike":return[sc(pk("x",t,e,n))];case"RandomUniform":return[kc(pk("shape",t,e,n),pk("minval",t,e,n),pk("maxval",t,e,n),pk("dtype",t,e,n))];case"Range":return[Ic(pk("start",t,e,n),pk("stop",t,e,n),pk("step",t,e,n),pk("dtype",t,e,n))];case"TruncatedNormal":{const r=pk("shape",t,e,n),s=pk("mean",t,e,n),a=pk("stdDev",t,e,n),i=pk("seed",t,e,n);return[lh(r,s,a,pk("dtype",t,e,n),i)]}case"Zeros":return[Hl(pk("shape",t,e,n),pk("dtype",t,e,n))];case"ZerosLike":return[mo(pk("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"dynamic":return(async(t,e,n)=>{switch(t.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:s,maxOutputSize:a,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=nN(t,e,n),l=await Mp.nonMaxSuppressionWithScoreAsync(r,s,a,i,o,u);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:s,maxOutputSize:a,iouThreshold:i,scoreThreshold:o}=nN(t,e,n),u=pk("padToMaxOutputSize",t,e,n),l=await Mp.nonMaxSuppressionPaddedAsync(r,s,a,i,o,u);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:s,maxOutputSize:a,iouThreshold:i,scoreThreshold:o}=nN(t,e,n);return[await Mp.nonMaxSuppressionAsync(r,s,a,i,o)]}case"Where":{const r=Da(pk("condition",t,e,n),"bool"),s=[await mh(r)];return r.dispose(),s}case"ListDiff":return Lc(pk("x",t,e,n),pk("y",t,e,n));default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n);case"evaluation":return Xi((()=>((t,e,n)=>{switch(t.op){case"TopKV2":{const r=pk("x",t,e,n),s=pk("k",t,e,n),a=pk("sorted",t,e,n),i=uh(r,s,a);return[i.values,i.indices]}case"Unique":{const r=pk("x",t,e,n),s=ch(r);return[s.values,s.indices]}case"UniqueV2":{const r=pk("x",t,e,n),s=pk("axis",t,e,n),a=ch(r,s);return[a.values,a.indices]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"image":return Xi((()=>((t,e,n)=>{switch(t.op){case"ResizeBilinear":{const r=pk("images",t,e,n),s=pk("size",t,e,n),a=pk("alignCorners",t,e,n);return[Mp.resizeBilinear(r,[s[0],s[1]],a)]}case"ResizeNearestNeighbor":{const r=pk("images",t,e,n),s=pk("size",t,e,n),a=pk("alignCorners",t,e,n);return[Mp.resizeNearestNeighbor(r,[s[0],s[1]],a)]}case"CropAndResize":{const r=pk("image",t,e,n),s=pk("boxes",t,e,n),a=pk("boxInd",t,e,n),i=pk("cropSize",t,e,n),o=pk("method",t,e,n),u=pk("extrapolationValue",t,e,n);return[Mp.cropAndResize(r,s,a,i,o,u)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"graph":return Xi((()=>((t,e,n)=>{switch(t.op){case"Const":return e[t.name];case"PlaceholderWithDefault":const r=pk("default",t,e,n);return[dk(t.name,e,n)||r];case"Placeholder":return[dk(t.name,e,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":return[bk(pk("x",t,e,n))];case"IdentityN":return pk("x",t,e,n).map((t=>bk(t)));case"Snapshot":return[bk(pk("x",t,e,n))];case"Shape":return[Nc(pk("x",t,e,n).shape,"int32")];case"ShapeN":return pk("x",t,e,n).map((t=>Nc(t.shape)));case"Size":return[No(pk("x",t,e,n).size,"int32")];case"Rank":return[No(pk("x",t,e,n).rank,"int32")];case"NoOp":return[No(1)];case"Print":const s=pk("x",t,e,n),a=pk("data",t,e,n),i=pk("message",t,e,n),o=pk("summarize",t,e,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let t=0;t<a.length;t++)console.log(Array.prototype.slice.call(a[t].dataSync()).slice(0,o));return[s];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"logical":return Xi((()=>((t,e,n)=>{switch(t.op){case"Equal":return[el(pk("a",t,e,n),pk("b",t,e,n))];case"NotEqual":return[nc(pk("a",t,e,n),pk("b",t,e,n))];case"Greater":return[xl(pk("a",t,e,n),pk("b",t,e,n))];case"GreaterEqual":return[vl(pk("a",t,e,n),pk("b",t,e,n))];case"Less":return[Cl(pk("a",t,e,n),pk("b",t,e,n))];case"LessEqual":return[Tl(pk("a",t,e,n),pk("b",t,e,n))];case"LogicalAnd":return[Bl(pk("a",t,e,n),pk("b",t,e,n))];case"LogicalNot":return[Pl(pk("a",t,e,n))];case"LogicalOr":return[Wl(pk("a",t,e,n),pk("b",t,e,n))];case"Select":case"SelectV2":return[nl(pk("condition",t,e,n),pk("a",t,e,n),pk("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"matrices":return Xi((()=>((t,e,n)=>{switch(t.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[ti(pk("a",t,e,n),pk("b",t,e,n),pk("transposeA",t,e,n),pk("transposeB",t,e,n))];case"Transpose":return[ni(pk("x",t,e,n),pk("perm",t,e,n))];case"_FusedMatMul":const[r,s]=pk("fusedOps",t,e,n),a="biasadd"===r,i="prelu"===s,o=pk("numArgs",t,e,n);if(a){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[u,l]=pk("args",t,e,n);return[Jh({a:pk("a",t,e,n),b:pk("b",t,e,n),transposeA:pk("transposeA",t,e,n),transposeB:pk("transposeB",t,e,n),bias:u,activation:s,preluActivationWeights:l})];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"normalization":return Xi((()=>((t,e,n)=>{switch(t.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[Au(pk("x",t,e,n),pk("mean",t,e,n),pk("variance",t,e,n),pk("offset",t,e,n),pk("scale",t,e,n),pk("epsilon",t,e,n))];case"LRN":return[$l(pk("x",t,e,n),pk("radius",t,e,n),pk("bias",t,e,n),pk("alpha",t,e,n),pk("beta",t,e,n))];case"Softmax":return[jc(pk("x",t,e,n))];case"LogSoftmax":return[Ll(pk("x",t,e,n))];case"SparseToDense":return[Mh(pk("sparseIndices",t,e,n),pk("outputShape",t,e,n),pk("sparseValues",t,e,n),pk("defaultValue",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"reduction":return Xi((()=>((t,e,n)=>{switch(t.op){case"Max":{const r=pk("axis",t,e,n),s=pk("keepDims",t,e,n);return[Ol(pk("x",t,e,n),r,s)]}case"Mean":{const r=pk("axis",t,e,n),s=pk("keepDims",t,e,n);return[Kl(pk("x",t,e,n),r,s)]}case"Min":{const r=pk("axis",t,e,n),s=pk("keepDims",t,e,n);return[Xl(pk("x",t,e,n),r,s)]}case"Sum":{const r=pk("axis",t,e,n),s=pk("keepDims",t,e,n);return[Ml(pk("x",t,e,n),r,s)]}case"All":{const r=pk("axis",t,e,n),s=pk("keepDims",t,e,n);return[Jo(pk("x",t,e,n),r,s)]}case"Any":{const r=pk("axis",t,e,n),s=pk("keepDims",t,e,n);return[Zo(pk("x",t,e,n),r,s)]}case"ArgMax":{const r=pk("axis",t,e,n);return[Qo(pk("x",t,e,n),r)]}case"ArgMin":{const r=pk("axis",t,e,n);return[tu(pk("x",t,e,n),r)]}case"Prod":{const r=pk("axis",t,e,n),s=pk("keepDims",t,e,n);return[fc(pk("x",t,e,n),r,s)]}case"Cumsum":{const r=pk("axis",t,e,n),s=pk("exclusive",t,e,n),a=pk("reverse",t,e,n);return[Yu(pk("x",t,e,n),r,s,a)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"slice_join":return Xi((()=>((t,e,n)=>{switch(t.op){case"ConcatV2":case"Concat":{const r=pk("n",t,e,n),s=pk("axis",t,e,n);let a=pk("tensors",t,e,n);return a=a.slice(0,r),[Nu(a,s)]}case"GatherV2":case"Gather":{const r=pk("axis",t,e,n),s=pk("x",t,e,n),a=pk("indices",t,e,n);return[bl(s,Da(a,"int32"),r)]}case"ReverseV2":case"Reverse":{const r=pk("axis",t,e,n),s=pk("x",t,e,n);return[Ec(s,r)]}case"Slice":{const r=pk("begin",t,e,n),s=pk("size",t,e,n);return[Su(pk("x",t,e,n),r,s)]}case"StridedSlice":{const r=pk("begin",t,e,n),s=pk("end",t,e,n),a=pk("strides",t,e,n),i=pk("beginMask",t,e,n),o=pk("endMask",t,e,n),u=pk("ellipsisMask",t,e,n),l=pk("newAxisMask",t,e,n),c=pk("shrinkAxisMask",t,e,n),h=pk("x",t,e,n);return[nh(h,r,s,a,i,o,u,l,c)]}case"Pack":return Xi((()=>{const r=pk("axis",t,e,n),s=pk("tensors",t,e,n),a=s[0].shape,i=Qc(s[0]).shape,o=s.map((t=>{const e=st(t.shape,a);if(!e&&!st(Qc(t).shape,i))throw new Error("the input tensors shape does not match");return e?t:Qa(t,a)}));return[th(o,r)]}));case"Unpack":{const r=pk("axis",t,e,n),s=pk("tensor",t,e,n);return ph(s,r)}case"Tile":{const r=pk("reps",t,e,n);return[cl(pk("x",t,e,n),r)]}case"Split":case"SplitV":{const r=pk("axis",t,e,n),s=pk("numOrSizeSplits",t,e,n),a=pk("x",t,e,n);return Yc(a,s,r)}case"ScatterNd":{const r=pk("indices",t,e,n),s=pk("values",t,e,n),a=pk("shape",t,e,n);return[Oh(r,s,a)]}case"GatherNd":{const r=pk("x",t,e,n),s=pk("indices",t,e,n);return[Lh(r,s)]}case"SparseToDense":{const r=pk("sparseIndices",t,e,n),s=pk("outputShape",t,e,n),a=pk("sparseValues",t,e,n),i=pk("defaultValue",t,e,n);return[Mh(r,a,s,a.dtype===i.dtype?i:Da(i,a.dtype))]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"spectral":return Xi((()=>((t,e,n)=>{switch(t.op){case"FFT":return[Hc(pk("x",t,e,n))];case"IFFT":return[qc(pk("x",t,e,n))];case"RFFT":return[Jc(pk("x",t,e,n))];case"IRFFT":return[Kc(pk("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"transformation":return Xi((()=>((t,e,n)=>{switch(t.op){case"Cast":return[Da(pk("x",t,e,n),pk("dtype",t,e,n))];case"ExpandDims":{const r=pk("axis",t,e,n);return[ul(pk("x",t,e,n),r)]}case"Squeeze":{const r=pk("axis",t,e,n);return[Qc(pk("x",t,e,n),r)]}case"Reshape":return[Qa(pk("x",t,e,n),pk("shape",t,e,n))];case"MirrorPad":return[Jl(pk("x",t,e,n),pk("padding",t,e,n),pk("mode",t,e,n))];case"PadV2":case"Pad":return[ic(pk("x",t,e,n),pk("padding",t,e,n),pk("constantValue",t,e,n))];case"SpaceToBatchND":{const r=pk("blockShape",t,e,n),s=pk("paddings",t,e,n);return[hc(pk("x",t,e,n),r,s)]}case"BatchToSpaceND":{const r=pk("blockShape",t,e,n),s=pk("crops",t,e,n);return[Eu(pk("x",t,e,n),r,s)]}case"DepthToSpace":{const r=pk("blockSize",t,e,n),s=pk("dataFormat",t,e,n).toUpperCase();return[Ju(pk("x",t,e,n),r,s)]}case"BroadcastTo":return[Fu(pk("x",t,e,n),pk("shape",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"hash_table":return(async(t,e,n,r)=>{switch(t.op){case"HashTable":case"HashTableV2":{const s=pk("keyDType",t,e,n),a=pk("valueDType",t,e,n),i=new rN(s,a);return r.addHashTable(t.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const s=pk("tableHandle",t,e,n,r),a=pk("keys",t,e,n),i=pk("values",t,e,n),o=r.getHashTableById(s.id);return[await o.import(a,i)]}case"LookupTableFind":case"LookupTableFindV2":{const s=pk("tableHandle",t,e,n,r),a=pk("keys",t,e,n),i=pk("defaultValue",t,e,n),o=r.getHashTableById(s.id);return[await o.find(a,i)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n,r);case"custom":const s=ck(t.op);if(s&&s.customExecutor)return s.customExecutor(new Jk(t,e,n));throw TypeError(`Custom op ${t.op} is not registered.`);default:throw TypeError(`Unknown op '${t.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(t,e,n);return Lt(s)?s.then((t=>[].concat(t))):[].concat(s)}class aN{constructor(t={},e={},n={},r={}){this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const t=[];for(let e=0;e<this.contexts.length-1;e++){const n=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(n))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map((t=>0===t.id&&0===t.iterationId?"":`${t.frameName}-${t.iterationId}`)).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(const e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(const e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}}function iN(t,e,n,r){const s=new Set,a=[];let i=null,o=null;const u=new Set,l=Object.keys(t).map((t=>gk(t)[0]));let c=[];null!=r&&(c=r.map((t=>gk(t.name)[0])));const h=[...e];for(;h.length>0;){const t=h.pop();(cN(t)||hN(t)||pN(t))&&null==i&&(i=t,o=i.children.map((t=>t.name)).filter((t=>s.has(t)))),s.add(t.name),null==n[t.name]&&-1===l.indexOf(t.name)&&-1===c.indexOf(t.name)&&(0!==t.inputs.length?t.inputs.forEach((t=>{u.has(t.name)||(u.add(t.name),h.push(t))})):a.push(t.name))}return{inputs:t,outputs:e,usedNodes:s,missingInputs:a,dynamicNode:i,syncInputs:o}}const oN=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],uN=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],lN=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2"];function cN(t){return oN.indexOf(t.op)>=0}function hN(t){return uN.indexOf(t.op)>=0}function pN(t){return lN.indexOf(t.op)>=0}class dN{constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,null!=t.functions&&Object.keys(t.functions).forEach((e=>{this._functionExecutorMap[e]=new dN(t.functions[e],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){const e=Object.keys(t).map((e=>t[e].map((t=>t.id))));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map((t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((t=>t.signatureKey||t.name))}get outputNodes(){return this._outputs.map((t=>{const e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e}))}get functions(){return Object.keys(this._functions).reduce(((t,e)=>(t[e]=this._functions[e].signature,t)),{})}getCompilationKey(t,e){const n=t.map((t=>t.name)).sort(),r=e.map((t=>t.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(t,e){const n=iN(t,e,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:s,syncInputs:a}=n;if(null!=s)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(r.length>0){const n=e.map((t=>t.name)),s=Object.keys(t);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${s}]. Missing the following inputs: [${r}]`)}return function(t,e,n){const{usedNodes:r,inputs:s}=n,a=[],i=Object.keys(s).map((t=>gk(t)[0])).map((e=>t.nodes[e])),o=t.initNodes;i.forEach((t=>{r.has(t.name)&&a.push(t)})),t.weights.forEach((t=>{r.has(t.name)&&a.push(t)})),null!=o&&o.forEach((t=>{r.has(t.name)&&a.push(t)}));const u=new Set,l=[];for(;a.length>0;){const t=a.pop();u.add(t.name),e[t.name]||l.push(t),t.children.forEach((t=>{!u.has(t.name)&&r.has(t.name)&&t.inputs.every((t=>u.has(t.name)))&&a.push(t)}))}return l}(this.graph,this.weightMap,n)}execute(t,e){t=this.mapInputs(t);const n=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);const r=n.map((t=>this.graph.nodes[gk(t)[0]])),s=e.map((t=>gk(t)[0]));let a=s.map((t=>this.graph.nodes[t]));0===a.length&&(a=this._outputs);const i=this.getCompilationKey(r,a);let o=this.compiledMap.get(i);null==o&&(o=this.compile(t,a),this.compiledMap.set(i,o));const u={},l={};return Xi((()=>{const n=new aN(this.weightMap,u,l,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(t).forEach((e=>{const[n,s]=gk(e),a=[];a[s]=t[e],r[n]=a}));const a=this.getFrozenTensorIds(r),i={};for(let t=0;t<o.length;t++){const e=o[t];if(!r[e.name]){const t=sN(e,r,n,this._resourceManager);if(Lt(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);r[e.name]=t,this.checkTensorForDisposal(e.name,e,r,n,a,s,i)}}return null==this.parent&&n.dispose(a),e.map((t=>dk(t,r,n)))}))}getFrozenTensorIds(t){const e=[].concat.apply([],Object.keys(t).map((e=>t[e])).map((t=>t.map((t=>t.id)))));return new Set(e)}checkTensorForDisposal(t,e,n,r,s,a,i){"control"!==e.category&&-1===a.indexOf(t)&&(n[t].forEach((t=>{null!=t&&(i[t.id]=(i[t.id]||0)+e.children.length)})),e.inputs.forEach((t=>{if("control"!==t.category){const e=function(t,e,n){return e[mk(t,n.currentContextId)]}(t.name,n,r);null!=e&&e.forEach((t=>{if(t&&!s.has(t.id)){const e=i[t.id];1===e?(t.dispose(),delete i[t.id]):null!=e&&i[t.id]--}}))}})))}async executeAsync(t,e){return this._executeAsync(t,e)}async _executeAsync(t,e,n=!1,r={},s={}){n||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));const a=new aN(this.weightMap,r,s,this.functionExecutorMap),i=await this.executeWithControlFlow(t,a,e,n),o=e.map((t=>dk(t,i,a))),u=o.map((t=>t.id)),l=Object.keys(t).map((e=>t[e].id)),c=new Set([...u,...l,...this.weightIds]);return Object.keys(i).forEach((t=>{i[t].forEach((t=>{!t||t.isDisposed||c.has(t.id)||t.dispose()}))})),null==this.parent&&a.dispose(c),o}async executeFunctionAsync(t,e,n){const r=t.reduce(((t,e,n)=>(t[this.inputs[n].name]=e,t)),{});return this._executeAsync(r,this.outputNodes,!0,e,n)}async executeWithControlFlow(t,e,n,r){const s=Object.keys(t),a=s.map((t=>this.graph.nodes[gk(t)[0]])),i=n.map((t=>gk(t)[0]));let o=i.map((t=>this.graph.nodes[t]));0===o.length&&(o=this._outputs);const{usedNodes:u,missingInputs:l,dynamicNode:c,syncInputs:h}=iN(t,o,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map((t=>({node:t,contexts:e.currentContext}))),d=Object.assign({},this.weightMap);Object.keys(t).forEach((e=>{const[n,r]=gk(e),s=[];s[r]=t[e],d[n]=s}));const f={},m=this.getFrozenTensorIds(d),g={};for(;p.length>0;){const t=this.processStack(a,p,e,d,g,m,i,f,u);await Promise.all(t)}null!=c||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=o.filter((t=>!cN(t)&&!dk(t.name,d,e))).map((t=>t.name));if(y.length>0){let t="";throw null!=c&&(t=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${s}]. Consider providing the following inputs: [${l}]. ${t}`)}return d}processStack(t,e,n,r,s,a,i,o,u){const l=[];for(;e.length>0;){const t=e.pop();n.currentContext=t.contexts;let c="";if("Enter"===t.node.op&&pk("isConstant",t.node,r,n)&&([c]=fk(t.node.name,n)),null==r[t.node.name]){const h=sN(t.node,r,n,this._resourceManager);c||([c]=fk(t.node.name,n));const p=n.currentContext;Lt(h)?l.push(h.then((l=>(r[c]=l,n.currentContext=p,this.checkTensorForDisposal(c,t.node,r,n,a,i,o),this.processChildNodes(t.node,e,n,r,s,u),l)))):(r[c]=h,this.checkTensorForDisposal(c,t.node,r,n,a,i,o),this.processChildNodes(t.node,e,n,r,s,u))}else this.processChildNodes(t.node,e,n,r,s,u)}return l}processChildNodes(t,e,n,r,s,a){t.children.forEach((t=>{const[i]=fk(t.name,n);!s[i]&&a.has(t.name)&&("Merge"===t.op?t.inputNames.some((t=>!!dk(t,r,n)))&&(s[i]=!0,e.push({contexts:n.currentContext,node:t})):t.inputNames.every((t=>!!dk(t,r,n)))&&(s[i]=!0,e.push({contexts:n.currentContext,node:t})))}))}dispose(){Object.keys(this.weightMap).forEach((t=>this.weightMap[t].forEach((t=>t.dispose()))))}checkInputShapeAndType(t){Object.keys(t).forEach((e=>{const n=t[e],[r]=gk(e),s=this.graph.nodes[r];if(s.attrParams.shape&&s.attrParams.shape.value){const t=s.attrParams.shape.value;Z(t.length===n.shape.length&&n.shape.every(((e,n)=>-1===t[n]||t[n]===e)),(()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${t}], but was [${n.shape}]`))}s.attrParams.dtype&&s.attrParams.dtype.value&&Z(n.dtype===s.attrParams.dtype.value,(()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(t){const e={};for(const n in t)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?e[this._signature.inputs[n].name]=t[n]:e[n]=t[n];return e}checkInputs(t){const e=Object.keys(t).filter((t=>{const[e]=gk(t);return null==this.graph.nodes[e]}));if(e.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map((t=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[t]?this._signature.outputs[t].name:t),{})}checkOutputs(t){t.forEach((t=>{const[e]=gk(t);if(!this.graph.nodes[e])throw new Error(`The output '${t}' is not found in the graph`)}))}}class fN{constructor(t={},e={}){this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(const t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(const t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}}class mN{constructor(t,e={}){this.modelUrl=t,this.loadOptions=e,this.version="n/a",null==e&&(this.loadOptions={}),this.resourceManager=new fN}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}findIOHandler(){const t=this.modelUrl;if(null!=t.load)this.handler=t;else if(null!=this.loadOptions.requestInit)this.handler=Ka(t,this.loadOptions);else{const e=ea(t,this.loadOptions);if(0===e.length)e.push(Ka(t,this.loadOptions));else if(e.length>1)throw new Error(`Found more than one (${e.length}) load handlers for URL '${[t]}'`);this.handler=e[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const t=await this.handler.load();return this.loadSync(t)}loadSync(t){this.artifacts=t;const e=this.artifacts.modelTopology;let n={};null!=this.artifacts.userDefinedMetadata&&(n=this.artifacts.userDefinedMetadata.signature),this.version=`${e.versions.producer}.${e.versions.minConsumer}`;const r=Us(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new dN(Mk.Instance.transformGraph(e,n)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=t.modelInitializer){const e=Mk.Instance.transformGraph(t.modelInitializer);this.initializer=new dN(e),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(t,e){if("string"==typeof t){const e=ta(t);if(0===e.length)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new Error(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)}predict(t,e){return this.execute(t,this.outputNodes)}normalizeInputs(t){if(!(t instanceof us||Array.isArray(t)))return t;if((t=Array.isArray(t)?t:[t]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${t.length} input tensors.`);return this.inputNodes.reduce(((e,n,r)=>(e[n]=t[r],e)),{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}execute(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=this.executor.execute(t,e);return n.length>1?n:n[0]}async executeAsync(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=await this.executor.executeAsync(t,e);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce(((e,n)=>(e[n]=[t[n]],e)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function gN(t,e={}){if(null==t)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==e&&(e={}),e.fromTFHub&&null==t.load&&(t.endsWith("/")||(t+="/"),t+="model.json?tfjs-format=file");const n=new mN(t,e);return await n.load(),n}const yN="2.7.0";function bN(t,e,n=new Map,r=new Set){if(null==t)return null;if(r.has(t))throw new Error("Circular references are not supported.");if(n.has(t))return n.get(t);const s=e(t);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(NN(t)){const s=Array.isArray(t)?[]:{};r.add(t);for(const a in t){const i=bN(t[a],e,n,r);s[a]=i}return r.delete(t),s}throw new Error("Can't recurse into non-iterable type: "+t)}return n.set(t,s.value),s.value}function xN(t,e=wN){return vN(t,e)}function vN(t,e,n=new Set){const r=t[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=e(t);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(NN(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const a in r){const r=vN(t.map((t=>t[a])),e,n);s[a]=r}return n.delete(r),s}throw new Error("Can't recurse into non-iterable type: "+r)}return s.value}function wN(t){return null===t?null:NN(t[0])?{value:null,recurse:!0}:{value:t,recurse:!1}}async function kN(t,e){const n=new Map;bN(t,e,n);for(const t of Array.from(n.keys())){const e=n.get(t);if(Lt(e)){const r=await e;n.set(t,r)}}return bN(t,e,n)}function NN(t){return null!=t&&!ArrayBuffer.isView(t)&&(Array.isArray(t)||"object"==typeof t&&!(t instanceof us))}function IN(t){return t instanceof us?{value:t.clone(),recurse:!1}:NN(t)?{value:null,recurse:!0}:{value:t,recurse:!1}}class SN{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,null==t)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}}class CN extends SN{constructor(){super(CN.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=2*this.capacity,e=new Array(t),n=this.length();for(let t=0;t<n;t++)e[t]=this.get(this.wrap(this.begin+t));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function TN(t){return new AN(t)}function EN(t){return new RN(t)}CN.INITIAL_CAPACITY=32;class $N{async toArray(){const t=[];let e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){const t=this.prefetch(100),e=[];let n=await t.next();for(;!n.done;)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);for(;!e.done&&n;)e=await this.next(),n=t(e.value)}handleErrors(t){return new zN(this,t)}filter(t){return new MN(this,t)}map(t){return new LN(this,t)}mapAsync(t){return new BN(this,t)}serialMapAsync(t){return new BN(this,t).serial()}flatmap(t){return new WN(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile((t=>!0===t))}rowMajorBatch(t,e=!0){return new ON(this,t,e)}columnMajorBatch(t,e=!0,n=wN){return this.rowMajorBatch(t,e).map((t=>xN(t,n)))}concatenate(t,e){return new VN(TN([this,t]),e)}take(t){return t<0||null==t?this:new FN(this,t)}skip(t){return t<0||null==t?this:new DN(this,t)}prefetch(t){return new jN(this,t)}shuffle(t,e){return new HN(this,t,e)}serial(){return new _N(this)}}class AN extends $N{constructor(t){super(),this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:(e=t,function(t,e){return bN(t,e)}(e,IN)),done:!1};var e}}class RN extends $N{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message="Error thrown while iterating through a dataset: "+t.message,t}}}class _N extends $N{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Serial"}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class DN extends $N{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Skip"}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const t=await this.upstream.next();if(t.done)return t;Yi(t.value)}return this.upstream.next()}}class FN extends $N{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return this.upstream.summary()+" -> Take"}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class ON extends $N{constructor(t,e,n=!0){super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> RowMajorBatch"}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const t=[];for(;t.length<this.batchSize;){const e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}}class MN extends $N{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Filter"}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;Yi(t.value)}}}class LN extends $N{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return this.upstream.summary()+" -> Map"}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=ws(t.value),n=this.transform(t.value),r=ws(n);for(const t of e)vs(t,r)||t.dispose();return{value:n,done:!1}}}class zN extends $N{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> handleErrors"}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class BN extends $N{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return this.upstream.summary()+" -> AsyncMap"}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=ws(t.value),n=await this.transform(t.value),r=ws(n);for(const t of e)vs(t,r)||t.dispose();return{value:n,done:!1}}}class PN extends $N{constructor(){super(),this.outputQueue=new CN,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class WN extends PN{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return this.upstream.summary()+" -> Flatmap"}async pump(){const t=await this.upstream.next();if(t.done)return!1;const e=ws(t.value),n=this.transform(t.value),r=ws(n);this.outputQueue.pushAll(n);for(const t of e)vs(t,r)||t.dispose();return!0}}class VN extends $N{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,null==this.iterator){const t=await this.moreIterators.next();if(t.done)return{value:null,done:!0};this.iterator=t.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}}var UN;!function(t){t[t.FAIL=0]="FAIL",t[t.SHORTEST=1]="SHORTEST",t[t.LONGEST=2]="LONGEST"}(UN||(UN={}));class GN extends $N{constructor(t,e=UN.FAIL){super(),this.iterators=t,this.mismatchMode=e,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(t){await t;let e=0,n=0;const r=await kN(this.iterators,(function(t){return t instanceof $N?{value:t.next().then((t=>(e++,t.done&&n++,t.value))),recurse:!1}:{value:null,recurse:!0}}));if(e===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case UN.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case UN.SHORTEST:return{value:null,done:!0};case UN.LONGEST:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class jN extends $N{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new SN(e)}summary(){return this.upstream.summary()+" -> Prefetch"}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class HN extends jN{constructor(t,e,n){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=gc.alea(n||ts().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}}}class qN{constructor(){this.size=null}batch(t,e=!0){const n=this;let r;return Z(t>0,(()=>"batchSize needs to be positive, but it is\n      "+t)),r=this.size===1/0||null==this.size?this.size:e?Math.ceil(this.size/t):Math.floor(this.size/t),KN((async()=>(await n.iterator()).columnMajorBatch(t,e,JN)),r)}concatenate(t){const e=this;let n;return n=this.size===1/0||t.size===1/0?1/0:null!=this.size&&null!=t.size?this.size+t.size:null,KN((async()=>(await e.iterator()).concatenate(await t.iterator())),n)}filter(t){const e=this;let n;return n=this.size===1/0?1/0:null,KN((async()=>(await e.iterator()).filter((e=>Xi((()=>t(e)))))),n)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){const e=this;return KN((async()=>(await e.iterator()).map((e=>Xi((()=>t(e)))))),this.size)}mapAsync(t){const e=this;return KN((async()=>(await e.iterator()).mapAsync(t)),this.size)}prefetch(t){if(null==t)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const e=this;return KN((async()=>(await e.iterator()).prefetch(t)),this.size)}repeat(t){const e=this;let n;return n=null!=this.size&&t>0?this.size*t:0===t?0:null!=this.size&&(void 0===t||t<0)?1/0:null,KN((async()=>{return n=EN((async()=>({value:await e.iterator(),done:!1}))).take(t),new VN(n,r);var n,r}),n)}skip(t){const e=this;let n;return n=null!=this.size&&t>=0&&this.size>=t?this.size-t:null!=this.size&&(this.size<t||void 0===t||t<0)?0:null,KN((async()=>(await e.iterator()).skip(t)),n)}shuffle(t,e,n=!0){if(null==t||t<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=gc.alea(e||ts().toString());return KN((async()=>{let e=s.int32();return n&&(e+=s.int32()),(await r.iterator()).shuffle(t,e.toString())}),this.size)}take(t){const e=this;let n;return n=null!=this.size&&this.size>t?t:null!=this.size&&this.size<=t?this.size:null,KN((async()=>(await e.iterator()).take(t)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function KN(t,e=null){return new class extends qN{constructor(){super(...arguments),this.size=e}async iterator(){return t()}}}function XN(t){return KN((async()=>TN(t)),t.length)}function YN(t){if(!NN(t))throw new Error("The argument to zip() must be an object or array.");let e;if(Array.isArray(t))for(let n=0;n<t.length;n++)e=null==e?t[n].size:Math.min(e,t[n].size);else if(t instanceof Object)for(const n in t)e=null==e?t[n].size:Math.min(e,t[n].size);return KN((async()=>function(t,e=UN.FAIL){return new GN(t,e)}(await kN(t,(t=>{if(t instanceof qN)return{value:t.iterator(),recurse:!1};if(NN(t))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),UN.SHORTEST)),e)}function JN(t){if(null===t)return null;return null==(e=t[0])||null===(n=e)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(e)||"object"==typeof e&&e instanceof us||xt(e)?{value:function(t){if(0===t.length)throw new Error("Can't make a batch of zero elements.");return t[0]instanceof us?th(t):Ps(t)}(t),recurse:!1}:{value:null,recurse:!0};var e,n}qN.MAX_BUFFER_SIZE=1e4;class ZN extends qN{constructor(t){super(),this.input=t}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map((t=>(t.endsWith("\r")&&(t=t.slice(0,-1)),t)))}}const QN='"',tI=Symbol("out"),eI=Symbol("field"),nI=Symbol("quote"),rI=Symbol("quoteafterquote"),sI=Symbol("quoteinquote");class aI extends qN{constructor(t,e){super(),this.input=t,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new ZN(t),e||(e={}),this.hasHeader=!1!==e.hasHeader,this.fullColumnNames=e.columnNames,this.columnConfigs=e.columnConfigs,this.configuredColumnsOnly=e.configuredColumnsOnly,e.delimWhitespace?(Z(null==e.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=e.delimiter?e.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const t=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!t)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&t&&Z(t.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+t.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=t);const e=this.fullColumnNames.reduce(((t,e)=>(t[e]=t[e]+1||1,t)),{}),n=Object.keys(e).filter((t=>e[t]>1));if(Z(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(const t of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(t))throw new Error('The key "'+t+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const t=await this.base.iterator(),e=await t.next();if(e.done)throw new Error("No data was found for CSV parsing.");const n=e.value;return this.parseRow(n,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let t=await this.base.iterator();return this.hasHeader&&(t=t.skip(1)),t.map((t=>this.makeDataElement(t)))}makeDataElement(t){const e=this.parseRow(t),n={},r={};for(let s=0;s<this.fullColumnNames.length;s++){const a=this.fullColumnNames[s],i=this.columnConfigs?this.columnConfigs[a]:null;if(!this.configuredColumnsOnly||i){const o=e[s];let u=null;if(""===o)if(i&&void 0!==i.default)u=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${a} is empty in this line: ${t}`);u=void 0}else{const t=Number(o);if(isNaN(t))u=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":u=t;break;case"int32":u=Math.floor(t);break;case"bool":u=this.getBoolean(o);break;default:u=t}else u=t}i&&i.isLabel?r[a]=u:n[a]=u}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(t){return"1"===t||"true"===t.toLowerCase()?1:0}parseRow(t,e=!0){const n=[];let r=0;const s=t.length;let a=tI;for(let e=0;e<s;e++)switch(a){case tI:switch(t.charAt(e)){case QN:r=e+1,a=nI;break;case this.delimiter:if(r=e+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),a=tI;break;default:a=eI,r=e}break;case eI:switch(t.charAt(e)){case this.delimiter:n.push(t.substring(r,e)),a=tI,r=e+1}break;case nI:switch(t.charAt(e)){case QN:a=rI}break;case rI:switch(t.charAt(e)){case this.delimiter:n.push(t.substring(r,e-1)),a=tI,r=e+1;break;case QN:a=nI;break;default:a=sI}break;case sI:switch(t.charAt(e)){case QN:a=nI}}if(a===rI?n.push(t.substring(r,s-1)):n.push(t.substring(r)),e&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}}class iI extends $N{constructor(t){super(),this.microphoneConfig=t,this.isClosed=!1,this.fftSize=t.fftSize||1024;const e=Math.log2(this.fftSize);if(this.fftSize<0||e<4||e>14||!Number.isInteger(e))throw new Error("Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got "+this.fftSize);if(this.numFrames=t.numFramesPerSpectrogram||43,this.sampleRateHz=t.sampleRateHz,this.columnTruncateLength=t.columnTruncateLength||this.fftSize,this.audioTrackConstraints=t.audioTrackConstraints,this.smoothingTimeConstant=t.smoothingTimeConstant||0,this.includeSpectrogram=!1!==t.includeSpectrogram,this.includeWaveform=!0===t.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(t={}){if(Bt().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");const e=new iI(t);return await e.start(),e}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(t){throw new Error("Error thrown while initializing video stream: "+t.message)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const t=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new t,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: `+this.audioContext.sampleRate)}else this.sampleRateHz=this.audioContext.sampleRate;const e=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,e.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let t,e;const n=await this.getAudioData();if(this.includeSpectrogram){const e=this.flattenQueue(n.freqDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const t=this.flattenQueue(n.timeDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:t,waveform:e},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const t=[],e=[];let n=0;return new Promise((r=>{const s=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:t,timeDataQueue:e}),t.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),e.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(s),r({freqDataQueue:t,timeDataQueue:e}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(t){const e=t[0].length,n=new Float32Array(t.length*e);return t.forEach(((t,r)=>n.set(t,r*e))),n}getTensorFromAudioDataArray(t,e){const n=new Float32Array(nt(e));return n.set(t,n.length-t.length),Ps(n,e)}}class oI extends $N{constructor(t,e){if(super(),this.webcamVideoElement=t,this.webcamConfig=e,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Nc([0],"int32"),this.webcamConfig.centerCrop){const t=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,e=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-t)/2,r=(1-e)/2,s=n+t,a=e+r;this.cropBox=sh([r,n,a,s],[1,4])}else this.cropBox=sh([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(t,e={}){if(Bt().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!t){if(t=document.createElement("video"),!e.resizeWidth||!e.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");t.width=e.resizeWidth,t.height=e.resizeHeight}const n=new oI(t,e);return await n.start(),n}async start(){this.webcamConfig.facingMode&&Z("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(t){throw t.message="Error thrown while initializing video stream: "+t.message,t}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(t){console.log(t),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((t=>{this.webcamVideoElement.onloadedmetadata=()=>{t()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let t;try{t=oi(this.webcamVideoElement)}catch(t){throw new Error("Error thrown converting video to pixels: "+JSON.stringify(t))}if(!this.resize)return{value:t,done:!1};try{return{value:this.cropAndResizeFrame(t),done:!1}}catch(t){throw new Error("Error thrown cropping the video: "+t.message)}finally{t.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(t){return Xi((()=>{const e=t.toFloat().expandDims(0);let n;n=Mp.cropAndResize(e,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const r=n.shape;return n.reshape(r.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((t=>t.stop()));try{this.webcamVideoElement.srcObject=null}catch(t){console.log(t),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}class uI{}class lI extends $N{split(t){return new cI(this,t)}}class cI extends lI{constructor(t,e){super(),this.upstream=t,this.impl=new hI(t,e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class hI extends PN{constructor(t,e){super(),this.upstream=t,this.separator=e,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const t=await this.upstream.next();if(t.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const e=t.value.split(this.separator);e[0]=this.carryover+e[0];for(const t of e.slice(0,-1))this.outputQueue.push(t);return this.carryover=e[e.length-1],!0}}class pI extends $N{decodeUTF8(){return new dI(this)}}class dI extends lI{constructor(t){super(),this.upstream=t,this.impl=new fI(t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class fI extends PN{constructor(t){if(super(),this.upstream=t,Bt().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:t}=n(4589);this.decoder=new t("utf8")}}summary(){return this.upstream.summary()+" -> Utf8"}async pump(){const t=await this.upstream.next();let e,n;return!t.done&&(e=t.value,n=Bt().get("IS_BROWSER")?this.decoder.decode(e,{stream:!0}):this.decoder.write(Buffer.from(e.buffer)),this.outputQueue.push(n),!0)}}class mI extends pI{constructor(t,e={}){super(),this.file=t,this.options=e,Z(t instanceof Uint8Array||!!Bt().get("IS_BROWSER")&&(t instanceof File||t instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=e.offset||0,this.chunkSize=e.chunkSize||1048576}summary(){return"FileChunks "+this.file}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const t=new Promise(((t,e)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)t(new Uint8Array(this.file.slice(this.offset,n)));else{const r=new FileReader;r.onload=n=>{let s=r.result;if(s instanceof ArrayBuffer&&(s=new Uint8Array(s)),!(s instanceof Uint8Array))return e(new TypeError("FileReader returned unknown type."));t(s)},r.onabort=t=>e(new Error("Aborted")),r.onerror=t=>e(new Error(t.type));const s=this.file.slice(this.offset,n);r.readAsArrayBuffer(s)}this.offset=n}));return{value:await t,done:!1}}}function gI(t){return"string"==typeof t&&"file://"===t.substr(0,7)}class yI extends uI{constructor(t,e={}){super(),this.input=t,this.options=e}async iterator(){if(gI(this.input)&&Bt().get("IS_NODE")){const t=n(2993);this.input=t.readFileSync(this.input.substr(7))}return new mI(this.input,this.options)}}class bI extends uI{constructor(t,e={}){super(),this.url=t,this.fileOptions=e}async iterator(){return gI(this.url)?new yI(this.url,this.fileOptions).iterator():async function(t,e={}){let n,r;var s;"string"==typeof t?n=t:(n=t.url,r={method:(s=t).method,headers:s.headers,body:s.body,mode:s.mode,credentials:s.credentials,cache:s.cache,redirect:s.redirect,referrer:s.referrer,integrity:s.integrity});const a=await es(n,r);if(a.ok){const t=new Uint8Array(await a.arrayBuffer());return new mI(t,e)}throw new Error(a.statusText)}(this.url,this.fileOptions)}}function xI(t,e={}){return new aI(new bI(t),e)}function vI(t){const e=EN(t);return KN((async()=>e))}function wI(t){return KN((async()=>{const e=await t();return EN((()=>e.next()))}))}async function kI(t,e){return oI.create(t,e)}async function NI(t){return iI.create(t)}const II="2.7.0";function SI(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&Z("complex64"!==t.dtype,(()=>e+" does not support complex64 tensors in the CPU backend."))}))}const CI=lp,TI=gd,EI=yd,$I=bd,AI=fh;class RI extends G{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new U(this,Hi())}write(t,e,n){this.firstUse&&(this.firstUse=!1,Bt().get("IS_NODE")&&rd("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={};return this.data.set(r,{values:t,dtype:n,refCount:1}),r}makeTensorInfo(t,e,n){let r;if("string"===e&&null!=n&&n.length>0&&kt(n[0])){const s=n.map((t=>ns(t)));r=this.write(s,t,e)}else r=this.write(n,t,e);return{dataId:r,shape:t,dtype:e}}incRef(t){this.data.get(t).refCount++}decRef(t){this.data.has(t)&&this.data.get(t).refCount--}move(t,e,n,r){this.data.set(t,{values:e,dtype:r,refCount:1})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:n}=this.data.get(t);return"complex64"===e?ad(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map((t=>rs(t)))}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8")}return _a(t.shape,t.dtype,n)}makeOutput(t,e,n){const r=this.write(t,e,n);return Hi().makeTensorFromDataId(r,e,n,this)}disposeData(t){if(this.data.has(t)){const{complexTensorInfos:e}=this.data.get(t);null!=e&&(this.disposeData(e.real.dataId),this.disposeData(e.imag.dataId)),this.data.delete(t)}}disposeIntermediateTensorInfo(t){const e=t.dataId;if(this.data.has(e)){const t=this.data.get(e);t.refCount--,t.refCount<1&&this.disposeData(e)}}async time(t){const e=ts();return t(),{kernelMs:ts()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}stridedSlice(t,e,n,r){SI(t,"stridedSlice");const s=fi(e,n,r);if(s.some((t=>0===t)))return Ps([],s);const a=_a(s,t.dtype),i=this.bufferSync(t);for(let t=0;t<a.size;t++){const n=a.indexToLoc(t),s=new Array(n.length);for(let t=0;t<s.length;t++)s[t]=n[t]*r[t]+e[t];a.set(i.get(...s),...n)}return a.toTensor()}diag(t){const e=this.readSync(t.dataId),n=_a([t.size,t.size],t.dtype),r=n.values;for(let n=0;n<e.length;n++)r[n*t.size+n]=e[n];return n.toTensor()}unstack(t,e){const n=t.shape[e],r=new Array(t.rank-1);let s=0;for(let n=0;n<t.rank;n++)n!==e&&(r[s++]=t.shape[n]);const a=new Array(t.rank).fill(0),i=t.shape.slice();i[e]=1;const o=new Array(n);for(let n=0;n<o.length;n++)a[e]=n,o[n]=Su(t,a,i).reshape(r);return o}reverse(t,e){SI(t,"reverse");const n=_a(t.shape,t.dtype),r=this.bufferSync(t);for(let s=0;s<n.size;s++){const a=n.indexToLoc(s),i=a.slice();e.forEach((e=>i[e]=t.shape[e]-1-i[e])),n.set(r.get(...i),...a)}return n.toTensor()}neg(t){return SI(t,"neg"),ho(No(-1),t)}addN(t){SI(t,"addN");const e=t.map((t=>this.readSync(t.dataId))),n=_a(t[0].shape,t[0].dtype),r=n.values;for(let n=0;n<t.length;n++){const t=e[n];for(let e=0;e<r.length;e++)r[e]+=t[e]}return n.toTensor()}softmax(t,e){const n=pt([e],t.shape),r=Ol(t,n),s=Ho(r.shape,n),a=$o(t,r.reshape(s)),i=ol(a),o=this.sum(i,n).reshape(s);return co(i,o)}pow(t,e){return SI([t,e],"pow"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>Math.pow(t,e)))}floorDiv(t,e){return SI([t,e],"floorDiv"),this.broadcastedBinaryOp(t,e,"int32",((t,e)=>Math.floor(t/e)))}sum(t,e){SI(t,"sum"),qo("sum",e,t.rank);const[n,r]=jo(t.shape,e),s=Hl(n,gs(t.dtype,"int32")),a=nt(r),i=this.readSync(s.dataId),o=this.readSync(t.dataId);for(let t=0;t<i.length;++t){const e=t*a;let n=0;for(let t=0;t<a;++t)n+=o[e+t];i[t]=n}return s}prod(t,e){SI(t,"sum");const[n,r]=jo(t.shape,e),s=Hl(n,gs(t.dtype,"int32")),a=nt(r),i=this.readSync(s.dataId),o=this.readSync(t.dataId);for(let t=0;t<i.length;++t){const e=t*a;let n=1;for(let t=0;t<a;++t)n*=o[e+t];i[t]=n}return s}unsortedSegmentSum(t,e,n){SI(t,"unsortedSegmentSum");const r=[],s=t.rank-e.rank;for(let t=0;t<s;++t)e=e.expandDims(t+1);for(let s=0;s<n;++s){const n=No(s,"int32"),a=el(n,e).asType("float32").mul(t).sum(0);r.push(a)}return th(r)}argMin(t,e){SI(t,"argMin");const n=[e];qo("argMin",n,t.rank);const[r,s]=jo(t.shape,n),a=Hl(r,"int32"),i=nt(s),o=this.readSync(a.dataId),u=this.readSync(t.dataId);for(let t=0;t<o.length;++t){const e=t*i;let n=u[e],r=0;for(let t=0;t<i;++t){const s=u[e+t];s<n&&(n=s,r=t)}o[t]=r}return a}argMax(t,e){SI(t,"argMax");const n=[e];qo("argMax",n,t.rank);const[r,s]=jo(t.shape,n),a=Hl(r,"int32"),i=nt(s),o=this.readSync(a.dataId),u=this.readSync(t.dataId);for(let t=0;t<o.length;++t){const e=t*i;let n=u[e],r=0;for(let t=0;t<i;++t){const s=u[e+t];s>n&&(n=s,r=t)}o[t]=r}return a}cumsum(t,e,n,r){if(SI(t,"cumsum"),e!==t.rank-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${t.rank-1} but got axis=`+e);const s=gs(t.dtype,"int32"),a=Hl(t.shape,s),i=this.readSync(a.dataId),o=this.readSync(t.dataId),u=t.shape[t.rank-1],l=r?(t,e)=>t+u-e-1:(t,e)=>t+e;for(let t=0;t<o.length;t+=u)for(let e=0;e<u;e++){const r=l(t,e);if(0===e)i[r]=n?0:o[r];else{const s=l(t,e-1);i[r]=n?o[s]+i[s]:o[r]+i[s]}}return a}equal(t,e){return SI([t,e],"equal"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t===e?1:0))}notEqual(t,e){return SI([t,e],"notEqual"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t!==e?1:0))}less(t,e){return SI([t,e],"less"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t<e?1:0))}lessEqual(t,e){return SI([t,e],"lessEqual"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t<=e?1:0))}greater(t,e){return SI([t,e],"greater"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t>e?1:0))}greaterEqual(t,e){return SI([t,e],"greaterEqual"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t>=e?1:0))}logicalAnd(t,e){return SI([t,e],"logicalAnd"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t&&e))}logicalOr(t,e){return SI([t,e],"logicalOr"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t||e))}select(t,e,n){SI([t,e,n],"select");const r=this.readSync(t.dataId),s=this.readSync(e.dataId),a=this.readSync(n.dataId),i=Hl(e.shape,gs(e.dtype,n.dtype)),o=this.readSync(i.dataId);let u=0;const l=0===t.rank||t.rank>1||1===e.rank?1:nt(e.shape.slice(1));for(let t=0;t<r.length;t++)for(let e=0;e<l;e++)1===r[t]?o[u++]=s[t]:o[u++]=a[t];return i}where(t){SI([t],"where");const e=this.readSync(t.dataId);return AI(t.shape,e)}topk(t,e,n){SI(t,"topk");const r=this.readSync(t.dataId);return $I(r,t.shape,t.dtype,e,n)}min(t,e){SI(t,"min"),qo("min",e,t.rank);const[n,r]=jo(t.shape,e),s=Hl(n,t.dtype),a=nt(r),i=this.readSync(s.dataId),o=this.readSync(t.dataId);for(let t=0;t<i.length;++t){const e=t*a;let n=o[e];for(let t=0;t<a;++t){const r=o[e+t];r<n&&(n=r)}i[t]=n}return s}minimum(t,e){return SI([t,e],"minimum"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>Math.min(t,e)))}mod(t,e){return SI([t,e],"mod"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e}))}maximum(t,e){return SI([t,e],"maximum"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>Math.max(t,e)))}all(t,e){SI(t,"all"),qo("all",e,t.rank);const[n,r]=jo(t.shape,e),s=Hl(n,t.dtype),a=nt(r),i=this.readSync(s.dataId),o=this.readSync(t.dataId);for(let t=0;t<i.length;++t){const e=t*a;let n=o[e];for(let t=0;t<a;++t){const r=o[e+t];n=n&&r}i[t]=n}return s}any(t,e){SI(t,"any"),qo("any",e,t.rank);const[n,r]=jo(t.shape,e),s=Hl(n,t.dtype),a=nt(r),i=this.readSync(s.dataId),o=this.readSync(t.dataId);for(let t=0;t<i.length;++t){const e=t*a;let n=o[e];for(let t=0;t<a;++t){const r=o[e+t];n=n||r}i[t]=n}return s}squaredDifference(t,e){return SI([t,e],"squaredDifference"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>{const n=t-e;return n*n}))}eluDer(t,e){SI([t,e],"eluDer");const n=new Float32Array(e.size),r=this.readSync(e.dataId),s=this.readSync(t.dataId);for(let t=0;t<r.length;++t){const e=r[t];n[t]=e>=1?s[t]:s[t]*(e+1)}return this.makeOutput(n,e.shape,"float32")}atan2(t,e){return SI([t,e],"atan2"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>Math.atan2(t,e)))}tile(t,e){return SI(t,"tile"),EI(this.bufferSync(t),e)}gather(t,e,n){SI([t,e],"gather");const r=t.shape.slice(),s=this.readSync(e.dataId);r[n]=s.length;const a=_a(r,t.dtype),i=this.bufferSync(t);for(let t=0;t<a.size;++t){const e=a.indexToLoc(t),r=e.slice();r[n]=s[e[n]];const o=i.locToIndex(r);a.values[t]=i.values[o]}return a.toTensor()}batchToSpaceND(t,e,n){SI([t],"batchToSpaceND");const r=e.reduce(((t,e)=>t*e)),s=Gp(t.shape,e,r),a=jp(s.length,e.length),i=Hp(t.shape,e,r),o=qp(n,e.length),u=Kp(i,n,e.length);return ni(t.reshape(s),a).reshape(i).slice(o,u)}pool3d(t,e,n){SI(t,"pool3d");const r=e.strideDepth,s=e.strideHeight,a=e.strideWidth,i=e.dilationDepth,o=e.dilationHeight,u=e.dilationWidth,l=e.effectiveFilterDepth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.front,d=e.padInfo.top,f=e.padInfo.left,m="max"===n?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=this.readSync(t.dataId),y=_a(e.outShape,t.dtype),b=y.values,x=e.outShape[1]*e.outShape[2]*e.outShape[3]*e.outShape[4],v=e.outShape[2]*e.outShape[3]*e.outShape[4],w=e.outShape[3]*e.outShape[4],k=e.outShape[4];for(let y=0;y<e.batchSize;++y){const N=y*x,I=y*t.strides[0];for(let y=0;y<e.inChannels;++y)for(let x=0;x<e.outDepth;++x){const S=x*r-p;let C=S;for(;C<0;)C+=i;const T=Math.min(e.inDepth,l+S),E=N+x*v;for(let r=0;r<e.outHeight;++r){const l=r*s-d;let p=l;for(;p<0;)p+=o;const x=Math.min(e.inHeight,c+l),v=E+r*w;for(let r=0;r<e.outWidth;++r){const s=r*a-f;let l=s;for(;l<0;)l+=u;const c=Math.min(e.inWidth,h+s),d=v+r*k;let w=m,N=0,S=0;for(let e=C;e<T;e+=i){const r=I+e*t.strides[1];for(let e=p;e<x;e+=o){const s=r+e*t.strides[2];for(let e=l;e<c;e+=u){const r=g[s+e*t.strides[3]+y];if("max"===n&&r>w?w=r:"avg"===n&&(N+=r,S++),isNaN(w))break}if(isNaN(w))break}if(isNaN(w))break}b[d+y]="avg"===n?N/S:w}}}}return y.toTensor()}avgPool3d(t,e){return SI(t,"avgPool3d"),this.pool3d(t,e,"avg").toFloat()}avgPool3dBackprop(t,e,n){SI([t,e],"avgPool3dBackprop");const r=n.strideDepth,s=n.strideHeight,a=n.strideWidth,i=n.filterDepth,o=n.filterHeight,u=n.filterWidth,l=n.dilationDepth,c=n.dilationHeight,h=n.dilationWidth,p=n.effectiveFilterDepth,d=n.effectiveFilterHeight,f=n.effectiveFilterWidth,m=p-1-n.padInfo.front,g=f-1-n.padInfo.left,y=d-1-n.padInfo.top,b=_a(e.shape,"float32"),x=1/(i*o*u),v=this.bufferSync(t);for(let t=0;t<n.batchSize;++t)for(let e=0;e<n.inChannels;++e)for(let i=0;i<n.inDepth;++i)for(let o=0;o<n.inHeight;++o)for(let u=0;u<n.inWidth;++u){const w=i-m,k=o-y,N=u-g;let I=0;for(let i=0;i<p;i+=l){const o=(w+i)/r;if(!(o<0||o>=n.outDepth||Math.floor(o)!==o))for(let r=0;r<d;r+=c){const i=(k+r)/s;if(!(i<0||i>=n.outHeight||Math.floor(i)!==i))for(let r=0;r<f;r+=h){const s=(N+r)/a;s<0||s>=n.outWidth||Math.floor(s)!==s||(I+=v.get(t,o,i,s,e))}}}b.set(I*x,t,i,o,u,e)}return b.toTensor()}maxPool3d(t,e){return SI(t,"maxPool3d"),this.pool3d(t,e,"max").toFloat()}maxPool3dPositions(t,e){const n=_a(e.outShape,"int32"),r=e.strideDepth,s=e.strideHeight,a=e.strideWidth,i=e.dilationDepth,o=e.dilationHeight,u=e.dilationWidth,l=e.effectiveFilterDepth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.front,d=e.padInfo.top,f=e.padInfo.left,m=this.bufferSync(t);for(let t=0;t<e.batchSize;++t)for(let g=0;g<e.inChannels;++g)for(let y=0;y<e.outDepth;++y){const b=y*r-p;let x=b;for(;x<0;)x+=i;const v=Math.min(e.inDepth,l+b);for(let r=0;r<e.outHeight;++r){const l=r*s-d;let p=l;for(;p<0;)p+=o;const w=Math.min(e.inHeight,c+l);for(let s=0;s<e.outWidth;++s){const d=s*a-f;let k=d;for(;k<0;)k+=u;const N=Math.min(e.inWidth,h+d);let I=Number.NEGATIVE_INFINITY,S=-1;for(let e=x;e<v;e+=i){const n=e-b;for(let r=p;r<w;r+=o){const s=r-l;for(let a=k;a<N;a+=u){const i=a-d,o=m.get(t,e,r,a,g);o>=I&&(I=o,S=n*c*h+s*c+i)}}}n.set(S,t,y,r,s,g)}}}return n.toTensor()}maxPool3dBackprop(t,e,n,r){SI([e,n],"maxPool3dBackprop");const s=this.maxPool3dPositions(e,r),a=r.strideDepth,i=r.strideHeight,o=r.strideWidth,u=r.dilationDepth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterDepth,p=r.effectiveFilterHeight,d=r.effectiveFilterWidth,f=h-1-r.padInfo.front,m=d-1-r.padInfo.left,g=p-1-r.padInfo.top,y=_a(e.shape,"float32"),b=this.bufferSync(s),x=this.bufferSync(t);for(let t=0;t<r.batchSize;++t)for(let e=0;e<r.inChannels;++e)for(let n=0;n<r.inDepth;++n)for(let s=0;s<r.inHeight;++s)for(let v=0;v<r.inWidth;++v){const w=n-f,k=s-g,N=v-m;let I=0;for(let n=0;n<h;n+=u){const s=(w+n)/a;if(!(s<0||s>=r.outDepth||Math.floor(s)!==s))for(let a=0;a<p;a+=l){const u=(k+a)/i;if(!(u<0||u>=r.outHeight||Math.floor(u)!==u))for(let i=0;i<d;i+=c){const l=(N+i)/o;if(l<0||l>=r.outWidth||Math.floor(l)!==l)continue;const c=h*p*d-1-b.get(t,s,u,l,e)===n*p*d+a*d+i?1:0;0!==c&&(I+=x.get(t,s,u,l,e)*c)}}}y.set(I,t,n,s,v,e)}return y.toTensor()}resizeBilinear(t,e,n,r){SI(t,"resizeBilinear");const[s,a,i,o]=t.shape,u=this.readSync(t.dataId),l=new Float32Array(nt([s,e,n,o])),c=[r&&e>1?a-1:a,r&&n>1?i-1:i],h=[r&&e>1?e-1:e,r&&n>1?n-1:n];let p=0;const d=c[0]/h[0],f=c[1]/h[1];for(let r=0;r<s;r++)for(let s=0;s<e;s++){const e=d*s,c=Math.floor(e),h=e-c,m=Math.min(a-1,Math.ceil(e)),g=r*t.strides[0]+c*t.strides[1],y=r*t.strides[0]+m*t.strides[1];for(let e=0;e<n;e++){const n=f*e,r=Math.floor(n),s=n-r,a=Math.min(i-1,Math.ceil(n)),c=g+r*t.strides[2],d=y+r*t.strides[2],m=g+a*t.strides[2],b=y+a*t.strides[2];for(let t=0;t<o;t++){const e=u[c+t],n=u[d+t],r=e+(u[m+t]-e)*s,a=r+(n+(u[b+t]-n)*s-r)*h;l[p++]=a}}}return Ps(l,[s,e,n,o])}resizeBilinearBackprop(t,e,n){SI([t,e],"resizeBilinearBackprop");const[r,s,a,i]=e.shape,[,o,u]=t.shape,l=new Float32Array(r*s*a*i),c=[n&&o>1?s-1:s,n&&u>1?a-1:a],h=[n&&o>1?o-1:o,n&&u>1?u-1:u],p=c[0]/h[0],d=c[1]/h[1],f=this.readSync(t.dataId);let m=0;for(let t=0;t<r;t++){const n=t*e.strides[0];for(let t=0;t<o;t++){const r=t*p,o=Math.floor(r),c=Math.min(Math.ceil(r),s-1),h=n+o*e.strides[1],g=n+c*e.strides[1],y=r-o,b=1-y;for(let t=0;t<u;t++){const n=t*d,r=Math.floor(n),s=Math.min(Math.ceil(n),a-1),o=n-r,u=1-o,c=h+r*e.strides[2],p=h+s*e.strides[2],x=g+r*e.strides[2],v=g+s*e.strides[2],w=b*u,k=b*o,N=y*u,I=y*o;for(let t=0;t<i;t++){const e=f[m++];l[c+t]+=e*w,l[p+t]+=e*k,l[x+t]+=e*N,l[v+t]+=e*I}}}}return ah(l,[r,a,s,i],e.dtype)}resizeNearestNeighbor(t,e,n,r){SI(t,"resizeNearestNeighbor");const[s,a,i,o]=t.shape,u=this.readSync(t.dataId),l=new Float32Array(s*e*n*o),c=[r&&e>1?a-1:a,r&&n>1?i-1:i],h=[r&&e>1?e-1:e,r&&n>1?n-1:n],p=c[0]/h[0],d=c[1]/h[1];let f=0;for(let c=0;c<s;c++){const s=c*t.strides[0];for(let c=0;c<e;c++){const e=p*c,h=s+Math.min(a-1,r?Math.round(e):Math.floor(e))*t.strides[1];for(let e=0;e<n;e++){const n=d*e,s=h+Math.min(i-1,r?Math.round(n):Math.floor(n))*t.strides[2];for(let t=0;t<o;t++){const e=u[s+t];l[f++]=e}}}}return Ps(l,[s,e,n,o],t.dtype)}resizeNearestNeighborBackprop(t,e,n){SI([t,e],"resizeNearestNeighborBackprop");const[r,s,a,i]=e.shape,[,o,u]=t.shape,l=new Float32Array(r*s*a*i),c=this.readSync(t.dataId),h=[n&&o>1?s-1:s,n&&u>1?a-1:a],p=[n&&o>1?o-1:o,n&&u>1?u-1:u],d=h[0]/p[0],f=h[1]/p[1],m=1/d,g=1/f,y=2*Math.ceil(m)+2,b=2*Math.ceil(g)+2;for(let h=0;h<r;h++){const r=h*e.strides[0];for(let h=0;h<s;h++){const p=r+h*e.strides[1],x=Math.floor(h*m),v=Math.floor(x-y/2);for(let m=0;m<a;m++){const x=p+m*e.strides[2],w=Math.floor(m*g),k=Math.floor(w-b/2);for(let e=0;e<i;e++){let i=0;for(let l=0;l<y;l++){const p=l+v;if(p<0||p>=o)continue;const g=r+p*t.strides[1],y=p*d;if(h===Math.min(s-1,n?Math.round(y):Math.floor(y)))for(let r=0;r<b;r++){const s=r+k;if(s<0||s>=u)continue;const o=g+s*t.strides[2],l=s*f;m===Math.min(a-1,n?Math.round(l):Math.floor(l))&&(i+=c[o+e])}}l[x+e]=i}}}}return ah(l,e.shape,e.dtype)}localResponseNormalization4D(t,e,n,r,s){SI(t,"localResponseNormalization4D");const a=t.shape[3],i=a-1,o=this.readSync(t.dataId),u=t.size,l=new Float32Array(u);function c(t){const n=t%a;let r=t-n+Math.max(0,n-e);const s=t-n+Math.min(n+e,i);let u=0;for(;r<=s;r++){const t=o[r];u+=t*t}return u}for(let t=0;t<u;t++){const e=c(t),a=o[t]*Math.pow(n+r*e,-s);l[t]=a}return ah(l,t.shape)}LRNGrad(t,e,n,r,s,a,i){SI(t,"LRNGrad");const o=t.shape[3],u=this.readSync(t.dataId),l=this.readSync(e.dataId),c=this.readSync(n.dataId),h=new Float32Array(t.size),p=t.size;for(let t=0;t<p;t++){const e=t%o,n=t-e+Math.max(0,e-r),p=t-e+Math.min(o,e+r+1);let d=0;for(let t=n;t<p;t++)d+=Math.pow(l[t],2);d=a*d+s;for(let e=n;e<p;e++){let n=-2*a*i*l[e]*c[t]/d;t===e&&(n+=Math.pow(d,-i)),n*=u[t],h[e]+=n}}return ah(h,t.shape)}multinomial(t,e,n,r){SI(t,"multinomial");const s=e?t:jc(t),a=s.shape[0],i=s.shape[1],o=Hl([a,n],"int32"),u=this.readSync(o.dataId),l=this.readSync(s.dataId);for(let t=0;t<a;++t){const e=t*i,s=new Float32Array(i-1);s[0]=l[e];for(let t=1;t<s.length;++t)s[t]=s[t-1]+l[e+t];const a=gc.alea(r.toString()),o=t*n;for(let t=0;t<n;++t){const e=a();u[o+t]=s.length;for(let n=0;n<s.length;n++)if(e<s[n]){u[o+t]=n;break}}}return o}oneHot(t,e,n,r){SI(t,"oneHot");const s=new Float32Array(t.size*e);s.fill(r);const a=this.readSync(t.dataId);for(let r=0;r<t.size;++r)a[r]>=0&&a[r]<e&&(s[r*e+a[r]]=n);return sh(s,[t.size,e],"int32")}nonMaxSuppression(t,e,n,r,s){SI(t,"nonMaxSuppression");const a=this.readSync(t.dataId),i=this.readSync(e.dataId);return CI(a,i,n,r,s)}depthToSpace(t,e,n){Z("NHWC"===n,(()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got "+n)),Z(e>1,(()=>"blockSize should be > 1 for depthToSpace, but was: "+e));const r=t.shape[0],s=t.shape[1],a=t.shape[2],i=t.shape[3],o=s*e,u=a*e,l=i/(e*e),c=this.readSync(t.dataId),h=new Float32Array(r*o*u*l);let p=0;for(let t=0;t<r;++t)for(let n=0;n<o;++n){const r=Math.floor(n/e),o=n%e;for(let n=0;n<u;++n){const u=Math.floor(n/e),d=(o*e+n%e)*l;for(let e=0;e<l;++e){const n=e+d+i*(u+a*(r+s*t));h[p++]=c[n]}}}return ah(h,[r,o,u,l])}broadcastedBinaryOp(t,e,n,r){const s=Fo(t.shape,e.shape),a=_a(s,n),i=this.readSync(t.dataId),o=this.readSync(e.dataId),u=_o(t.shape,s),l=_o(e.shape,s),c=a.values;if(u.length+l.length===0)for(let t=0;t<c.length;++t)c[t]=r(i[t%i.length],o[t%o.length]);else{const n=this.bufferSync(t),s=this.bufferSync(e);for(let h=0;h<c.length;++h){const p=a.indexToLoc(h),d=p.slice(-t.rank);u.forEach((t=>d[t]=0));const f=n.locToIndex(d),m=p.slice(-e.rank);l.forEach((t=>m[t]=0));const g=s.locToIndex(m);c[h]=r(i[f],o[g])}}return a.toTensor()}split(t,e,n){return TI(t,e,n)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}cropAndResize(t,e,n,r,s,a){const[i,o,u,l]=t.shape,c=e.shape[0],[h,p]=r,d=_a([c,h,p,l],"float32"),f=this.readSync(e.dataId),m=this.readSync(n.dataId),g=this.readSync(t.dataId),y=t.strides,b=d.strides;for(let t=0;t<c;t++){const e=4*t,n=f[e],r=f[e+1],c=f[e+2],x=f[e+3],v=m[t];if(v>=i)continue;const w=h>1?(c-n)*(o-1)/(h-1):0,k=p>1?(x-r)*(u-1)/(p-1):0;for(let e=0;e<h;e++){const i=h>1?n*(o-1)+e*w:.5*(n+c)*(o-1);if(i<0||i>o-1)for(let n=0;n<p;n++)for(let r=0;r<l;r++){const s=r+n*b[2]+e*b[1]+t*b[0];d.values[s]=a}else if("bilinear"===s){const n=Math.floor(i),s=Math.ceil(i),o=i-n;for(let i=0;i<p;i++){const c=p>1?r*(u-1)+i*k:.5*(r+x)*(u-1);if(c<0||c>u-1){for(let n=0;n<l;n++){const r=n+i*b[2]+e*b[1]+t*b[0];d.values[r]=a}continue}const h=Math.floor(c),f=Math.ceil(c),m=c-h;for(let r=0;r<l;r++){let a=r+h*y[2]+n*y[1]+v*y[0];const u=g[a];a=r+f*y[2]+n*y[1]+v*y[0];const l=g[a];a=r+h*y[2]+s*y[1]+v*y[0];const c=g[a];a=r+f*y[2]+s*y[1]+v*y[0];const p=u+(l-u)*m,x=c+(g[a]-c)*m;a=r+i*b[2]+e*b[1]+t*b[0],d.values[a]=p+(x-p)*o}}}else for(let n=0;n<p;++n){const s=p>1?r*(u-1)+n*k:.5*(r+x)*(u-1);if(s<0||s>u-1){for(let r=0;r<l;r++){const s=r+n*b[2]+e*b[1]+t*b[0];d.values[s]=a}continue}const o=Math.round(s),c=Math.round(i);for(let r=0;r<l;r++){const s=r+o*y[2]+c*y[1]+v*y[0],a=r+n*b[2]+e*b[1]+t*b[0];d.values[a]=g[s]}}}}return d.toTensor()}sparseToDense(t,e,n,r){const{sliceRank:s,numUpdates:a,sliceSize:i,strides:o,outputSize:u}=hi(0,t,n);return this.scatter(t,e,n,u,i,a,s,o,r,!1)}gatherND(t,e){const n=e.shape,r=n[n.length-1],[s,a,i,o]=ui(t,e);if(0===a)return Ps([],s,t.dtype);const u=new ss([a,i],t.dtype),l=this.readSync(e.dataId),c=this.readSync(t.dataId);for(let e=0;e<a;e++){const n=[];let s=0;for(let t=0;t<r;t++){const a=l[e*r+t];s+=a*o[t],n.push(a)}if(s<0||s>=t.size/i)throw new Error(`Invalid indices: ${n} does not index into ${t.shape}`);for(let t=0;t<i;t++)u.values[e*i+t]=c[s*i+t]}return u.toTensor().reshape(s)}scatterND(t,e,n){const{sliceRank:r,numUpdates:s,sliceSize:a,strides:i,outputSize:o}=hi(0,t,n),u=No(0);return this.scatter(t,e,n,o,a,s,r,i,u,!0)}onesLike(t){if("string"===t.dtype)throw new Error("onesLike is not supported for string tensors");return Co(t.shape,1,t.dtype)}zerosLike(t){const e=mt(t.dtype,nt(t.shape));return this.makeOutput(e,t.shape,t.dtype)}linspace(t,e,n){return md(t,e,n)}scatter(t,e,n,r,s,a,i,o,u,l){const c=[r/s,s],h=this.readSync(t.dataId),p=this.readSync(e.dataId);if(0===r)return Ps([],n,e.dtype);const d=new ss(c,e.dtype);d.values.fill(this.readSync(u.dataId)[0]);for(let t=0;t<a;t++){const a=[];let u=0;for(let e=0;e<i;e++){const n=h[t*i+e];a.push(n),u+=n*o[e]}if(u<0||u>=r/s)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<s;n++)l?d.values[u*s+n]+=p[t*s+n]:d.values[u*s+n]=0===e.rank?p[0]:p[t*s+n]}return d.toTensor().reshape(n)}}function _I(t,e,n){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;if(SI(i,t),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,u=o.data.get(i.dataId).values,l=nt(i.shape),c=n||i.dtype,h=mt(c,l);for(let t=0;t<l;++t)h[t]=e(u[t],s);return o.makeTensorInfo(i.shape,c,h)}}function DI(t,e,n){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;if(SI(i,t),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,u=o.data.get(i.dataId).values,l=n||i.dtype,c=e(u,l,s);return o.makeTensorInfo(i.shape,l,c)}}ao("cpu",(()=>new RI),1);const FI=_I(Oe,(t=>t>=0?t:Math.exp(t)-1)),OI={kernelName:Oe,backendName:"cpu",kernelFunc:FI};function MI(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const LI={kernelName:Je,backendName:"cpu",kernelFunc:MI};function zI(t){return(e,n,r,s,a)=>{const i=Fo(e,n),o=i.length,u=Et(i),l=ft(a,nt(i)),c=e.length,h=n.length,p=Et(e),d=Et(n),f=_o(e,i),m=_o(n,i);if(f.length+m.length===0)for(let e=0;e<l.length;++e)l[e]=t(r[e%r.length],s[e%s.length]);else for(let e=0;e<l.length;++e){const n=Mt(e,o,u),a=n.slice(-c);f.forEach((t=>a[t]=0));const i=Ot(a,c,p),g=n.slice(-h);m.forEach((t=>g[t]=0));const y=Ot(g,h,d);l[e]=t(r[i],s[y])}return[l,i]}}const BI=zI(((t,e)=>t<0?e*t:t));function PI(t){const{inputs:e,backend:n}=t,{x:r,alpha:s}=e;SI([r,s],"prelu");const a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,[o,u]=BI(r.shape,s.shape,a,i,r.dtype);return n.makeTensorInfo(u,r.dtype,o)}const WI={kernelName:zn,backendName:"cpu",kernelFunc:PI},VI=_I(Un,(t=>Math.max(0,t))),UI={kernelName:Un,backendName:"cpu",kernelFunc:VI},GI=_I(Xn,(t=>Math.min(Math.max(0,t),6))),jI={kernelName:Xn,backendName:"cpu",kernelFunc:GI};function HI(t,e,n,r){if("linear"===n)return MI({inputs:{x:e},backend:t});if("relu"===n)return VI({inputs:{x:e},backend:t});if("elu"===n)return FI({inputs:{x:e},backend:t});if("relu6"===n)return GI({inputs:{x:e},backend:t});if("prelu"===n)return PI({inputs:{x:e,alpha:r},backend:t});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function qI(t){const{inputs:e,backend:n}=t,{real:r,imag:s}=e,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(s.shape,"float32",i)},o}const KI={kernelName:fe,backendName:"cpu",kernelFunc:qI};function XI(t){const{inputs:e,backend:n}=t,{input:r}=e,s=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const YI={kernelName:Wn,backendName:"cpu",kernelFunc:XI};function JI(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{dtype:a}=r;if("complex64"===a){if("complex64"===s.dtype)return MI({inputs:{x:s},backend:n});const t=Hl(s.shape),e=JI({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=qI({inputs:{real:e,imag:t},backend:n});return t.dispose(),n.disposeIntermediateTensorInfo(e),r}if("complex64"===s.dtype){const t=XI({inputs:{input:s},backend:n}),e=JI({inputs:{x:t},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(t),e}if(!bt(s.dtype,a)){const t=MI({inputs:{x:s},backend:n});return{dataId:t.dataId,shape:t.shape,dtype:a}}if("int32"===a){const t=n.data.get(s.dataId).values,e=Int32Array.from(t);return n.makeTensorInfo(s.shape,"int32",e)}if("bool"===a){const t=n.data.get(s.dataId).values,e=Qr([0],s.dtype),[r,a]=zI(((t,e)=>t!==e?1:0))(s.shape,[],t,e,"bool");return n.makeTensorInfo(a,"bool",r)}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${a}`)}const ZI={kernelName:he,backendName:"cpu",kernelFunc:JI};function QI(t,e,n,r){return null==n?({inputs:n,backend:s})=>{const{a,b:i}=n,o=s;SI([a,i],t);const u=o.data.get(a.dataId).values,l=o.data.get(i.dataId).values,c=r||a.dtype,[h,p]=e(a.shape,i.shape,u,l,c);return o.makeTensorInfo(p,c,h)}:({inputs:t,backend:s})=>{const{a,b:i}=t,o=s;if("complex64"===a.dtype||"complex64"===i.dtype){const t=JI({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),e=o.data.get(t.dataId),r=e.complexTensorInfos.real,s=e.complexTensorInfos.imag,u=o.data.get(r.dataId).values,l=o.data.get(s.dataId).values,c=JI({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),p=h.complexTensorInfos.real,d=h.complexTensorInfos.imag,f=o.data.get(p.dataId).values,m=o.data.get(d.dataId).values,[g,y,b]=n(a.shape,i.shape,u,l,f,m),x=o.makeTensorInfo(b,"float32",g),v=o.makeTensorInfo(b,"float32",y),w=qI({inputs:{real:x,imag:v},backend:o});return o.disposeIntermediateTensorInfo(t),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(v),w}{const t=o.data.get(a.dataId).values,n=o.data.get(i.dataId).values,s=r||a.dtype,[u,l]=e(a.shape,i.shape,t,n,s);return o.makeTensorInfo(l,s,u)}}}function tS(t){return(e,n,r,s,a,i)=>{const o=Fo(e,n),u=nt(o),l=o.length,c=Et(o),h=ft("float32",u),p=ft("float32",u),d=_o(e,o),f=_o(n,o),m=ad(r,s),g=ad(a,i),y=e.length,b=Et(e),x=n.length,v=Et(n);if(d.length+f.length===0)for(let e=0;e<h.length;e++){const n=e%m.length,r=e%g.length,s=t(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);h[e]=s.real,p[e]=s.imag}else for(let e=0;e<h.length;e++){const n=Mt(e,l,c),r=n.slice(-y);d.forEach((t=>r[t]=0));const s=Ot(r,y,b),a=n.slice(-x);f.forEach((t=>a[t]=0));const i=Ot(a,x,v),o=t(m[2*s],m[2*s+1],g[2*i],g[2*i+1]);h[e]=o.real,p[e]=o.imag}return[h,p,o]}}const eS=zI(((t,e)=>t+e)),nS=tS(((t,e,n,r)=>({real:t+n,imag:e+r}))),rS=QI(qt,eS,nS),sS={kernelName:qt,backendName:"cpu",kernelFunc:rS};function aS(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{shape:a}=r,i=nt(s.shape),o=ht(a,i),u=nt(o);Z(i===u,(()=>`The new shape (${o}) has ${u} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const l=n.data.get(s.dataId);if(null!=l.complexTensorInfos){const t=l.complexTensorInfos.real,e=l.complexTensorInfos.imag;t.shape=o,e.shape=o}return{dataId:s.dataId,shape:o,dtype:s.dtype}}const iS={kernelName:Gn,backendName:"cpu",kernelFunc:aS};function oS(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:a}=e,{transposeA:i,transposeB:o}=r;SI([s,a],"matMul");const u=s.shape.length,l=a.shape.length,c=i?s.shape[u-2]:s.shape[u-1],h=o?a.shape[l-1]:a.shape[l-2],p=i?s.shape[u-1]:s.shape[u-2],d=o?a.shape[l-2]:a.shape[l-1],f=s.shape.slice(0,-2),m=a.shape.slice(0,-2),g=nt(f),y=nt(m);Z(u>=2&&l>=2&&(g===y||1===g||1===y),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${m}).`));const b=(g>y?s.shape.slice(0,-2):a.shape.slice(0,-2)).concat([p,d]);Z(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`));const x=o?[y,d,h]:[y,h,d],v=aS({inputs:{x:s},backend:n,attrs:{shape:i?[g,c,p]:[g,p,c]}}),w=aS({inputs:{x:a},backend:n,attrs:{shape:x}}),k=i?v.shape[1]:v.shape[2],N=i?v.shape[2]:v.shape[1],I=o?w.shape[1]:w.shape[2],S=Math.max(g,y),C=n.data.get(v.dataId).values,T=n.data.get(w.dataId).values,E=Et(v.shape),$=Et(w.shape),[A,R,_]=i?[E[0],1,E[1]]:[E[0],E[1],1],[D,F,O]=o?[1,$[1],$[0]]:[$[1],1,$[0]],M=N*I,L=_a([S,N,I],v.dtype),z=L.values,B=n.blockSize;for(let t=0;t<S;t++)for(let e=0;e<N;e+=B)for(let n=0;n<I;n+=B)for(let r=0;r<k;r+=B){const s=Math.min(e+B,N),a=Math.min(n+B,I),i=Math.min(r+B,k);for(let o=e;o<s;o++)for(let e=n;e<a;e++){let n=0;for(let s=r;s<i;s++){const r=Math.min(t,g-1)*A,a=Math.min(t,y-1)*O;n+=C[r+o*R+s*_]*T[s*D+e*F+a]}z[t*M+(o*I+e)]+=n}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(b,L.dtype,L.values)}const uS={kernelName:ue,backendName:"cpu",kernelFunc:oS},lS={kernelName:Ar,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:a,bias:i,preluActivationWeights:o}=e,{transposeA:u,transposeB:l,activation:c}=r;let h,p,d;const f=[];h=oS({inputs:{a:s,b:a},attrs:{transposeA:u,transposeB:l},backend:n}),i&&(p=rS({inputs:{a:h,b:i},backend:n}),f.push(h),h=p),c&&(d=HI(n,h,c,o),f.push(h),h=d);for(const t of f)n.disposeIntermediateTensorInfo(t);return h}};function cS(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}const hS={kernelName:Gt,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend;let r=new Float32Array(nt(e.shape));if("complex64"!==e.dtype)r=cS(n.data.get(e.dataId).values);else{const t=n.data.get(e.dataId),s=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,i=n.data.get(s.dataId).values,o=n.data.get(a.dataId).values;for(let t=0;t<i.length;t++){const e=i[t],n=o[t];r[t]=Math.hypot(e,n)}}return n.makeOutput(r,e.shape,"float32")}},pS=_I(jt,(t=>Math.acos(t))),dS={kernelName:jt,backendName:"cpu",kernelFunc:pS},fS=_I(Ht,(t=>Math.acosh(t))),mS={kernelName:Ht,backendName:"cpu",kernelFunc:fS},gS=_I(Qt,(t=>Math.asin(t))),yS={kernelName:Qt,backendName:"cpu",kernelFunc:gS},bS=_I(te,(t=>Math.asinh(t))),xS={kernelName:te,backendName:"cpu",kernelFunc:bS},vS=_I(ee,(t=>Math.atan(t))),wS={kernelName:ee,backendName:"cpu",kernelFunc:vS},kS=_I(ne,(t=>Math.atanh(t))),NS={kernelName:ne,backendName:"cpu",kernelFunc:kS};function IS(t,e,n,r,s,a){const i=s.strideHeight,o=s.strideWidth,u=s.dilationHeight,l=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,p=s.padInfo.top,d=s.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=_a(s.outShape,n),g=m.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],b=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let e=0;e<s.batchSize;++e){const n=e*y,m=e*r[0];for(let e=0;e<s.inChannels;++e)for(let y=0;y<s.outHeight;++y){const v=y*i-p,w=Math.max(0,v),k=Math.min(s.inHeight,c+v),N=n+y*b;for(let n=0;n<s.outWidth;++n){const i=n*o-d,c=Math.max(0,i),p=Math.min(s.inWidth,h+i);let y=f,b=0,v=0;for(let n=w;n<k;n+=u){const s=m+n*r[1];for(let n=c;n<p;n+=l){const i=t[s+n*r[2]+e];"max"===a&&i>y?y=i:"avg"===a&&(b+=i,v++)}if(isNaN(y))break}g[N+n*x+e]="avg"===a?b/v:y}}}return m}function SS(t,e,n,r,s=!1,a=!1){const i=_a(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,p=r.effectiveFilterWidth,d=r.padInfo.top,f=r.padInfo.left,m=_a(e,n,t);for(let t=0;t<r.batchSize;++t)for(let e=0;e<r.inChannels;++e)for(let n=0;n<r.outHeight;++n){const g=n*o-d;let y=g;for(;y<0;)y+=l;const b=Math.min(r.inHeight,h+g);for(let o=0;o<r.outWidth;++o){const h=o*u-f;let d=h;for(;d<0;)d+=c;const x=Math.min(r.inWidth,p+h);let v=Number.NEGATIVE_INFINITY,w=-1;for(let n=y;n<b;n+=l){const i=n-g;for(let o=d;o<x;o+=c){const u=o-h,l=m.get(t,n,o,e);l>v&&(v=l,w=s?a?((t*r.inHeight+n)*r.inWidth+o)*r.inChannels+e:(n*r.inWidth+o)*r.inChannels+e:i*p+u)}}i.set(w,t,n,o,e)}}return i}const CS={kernelName:se,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;SI(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;Z(yu(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=ou(s.shape,a,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&st(l.inShape,l.outShape))c=MI({inputs:{x:s},backend:n});else{const t=n.data.get(s.dataId).values,e=Et(s.shape),r=IS(t,s.shape,s.dtype,e,l,"avg");c=n.makeTensorInfo(l.outShape,s.dtype,r.values)}return c}},TS={kernelName:ae,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:a}=e,i=a;SI([s,a],"avgPoolBackprop");const{filterSize:o,strides:u,pad:l}=r,c=ou(i.shape,o,u,1,l),h=c.strideHeight,p=c.strideWidth,d=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,v=y-1-c.padInfo.top,w=_a(i.shape,"float32"),k=1/(d*f),N=n.data.get(s.dataId).values,I=_a(s.shape,"float32",N);for(let t=0;t<c.batchSize;++t)for(let e=0;e<c.inChannels;++e)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=n-v,a=r-x;let i=0;for(let n=0;n<y;n+=m){const r=(s+n)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<b;n+=g){const s=(a+n)/p;s<0||s>=c.outWidth||Math.floor(s)!==s||(i+=I.get(t,r,s,e))}}w.set(i*k,t,n,r,e)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},ES={kernelName:He,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,scale:a,offset:i,mean:o,variance:u}=e;Z(o.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Z(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Z(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),SI([s,o,u,a,i],"batchNorm");let{varianceEpsilon:l}=r;null==l&&(l=.001);const c=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,p=n.data.get(u.dataId).values,d=a?n.data.get(a.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=d.length,b=p.length,x=h.length;let v=0,w=0,k=0,N=0;for(let t=0;t<c.length;++t)m[t]=f[v++]+(c[t]-h[w++])*d[k++]/Math.sqrt(p[N++]+l),v>=g&&(v=0),w>=x&&(w=0),k>=y&&(k=0),N>=b&&(N=0);return n.makeTensorInfo(s.shape,s.dtype,m)}};function $S(t){return(e,n,r)=>{const s=ft(n,e.length);for(let n=0;n<e.length;++n)s[n]=t(e[n],r);return s}}const AS=$S((t=>Math.ceil(t))),RS=DI(pe,AS),_S={kernelName:pe,backendName:"cpu",kernelFunc:RS},DS=_I(de,((t,e)=>{const n=e;return t>n.clipValueMax?n.clipValueMax:t<n.clipValueMin?n.clipValueMin:t})),FS={kernelName:de,backendName:"cpu",kernelFunc:DS};function OS(t){const{inputs:e,backend:n}=t,{input:r}=e,s=n.data.get(r.dataId).complexTensorInfos.imag,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const MS={kernelName:Qe,backendName:"cpu",kernelFunc:OS};function LS(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r,a=pt(s,e[0].shape)[0];let i=ku(e.map((t=>t.shape)),a);if(0===nt(i))return n.makeTensorInfo(i,e[0].dtype,[]);const o=e.filter((t=>nt(t.shape)>0));if(1===o.length)return o[0];if(wu(o.map((t=>t.shape)),a),"complex64"===o[0].dtype){const t=o.map((t=>XI({inputs:{input:t},backend:n}))),e=o.map((t=>OS({inputs:{input:t},backend:n}))),r=LS({inputs:t,backend:n,attrs:{axis:a}}),s=LS({inputs:e,backend:n,attrs:{axis:a}}),i=qI({inputs:{real:r,imag:s},backend:n});return t.forEach((t=>n.disposeIntermediateTensorInfo(t))),e.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),i}const u=o.map((t=>{const e=nt(t.shape.slice(a));return aS({inputs:{x:t},backend:n,attrs:{shape:[-1,e]}})}));i=ku(u.map((t=>t.shape)),1);const l=ft(o[0].dtype,nt(i));if(1===u[0].shape[0]){let t=0;u.forEach((e=>{const r=n.data.get(e.dataId).values,s=nt(e.shape);l.set(r,t),t+=s}))}else{let t=0;u.forEach((e=>{const r=n.data.get(e.dataId).values;let s=0;for(let n=0;n<e.shape[0];++n){const a=n*i[1]+t;for(let t=0;t<e.shape[1];++t)l[a+t]=r[s++]}t+=e.shape[1]}))}const c=ku(o.map((t=>t.shape)),a),h=n.makeTensorInfo(c,e[0].dtype,l);return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),h}const zS={kernelName:me,backendName:"cpu",kernelFunc:LS};function BS(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:a}=e,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r;SI([s,a],"conv2d");const h=bu(u),p=lu(s.shape,a.shape,i,l,o,c,!1,h),d=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,b=p.padInfo.top,x="channelsLast"===p.dataFormat,v=new ss(p.outShape,s.dtype),w=Et(s.shape),k=Et(a.shape),N=w[0],I=x?w[1]:w[2],S=x?w[2]:1,C=x?1:w[1],T=v.strides[0],E=x?v.strides[1]:v.strides[2],$=x?v.strides[2]:1,A=x?1:v.strides[1],R=n.data.get(s.dataId).values,_=n.data.get(a.dataId).values,D=v.values;for(let t=0;t<p.batchSize;++t){const e=t*N,n=t*T;for(let t=0;t<p.outHeight;++t){const r=n+t*E,s=t*p.strideHeight-b;for(let t=0;t<d;++t){const n=s+t*m;if(n<0||n>=p.inHeight)continue;const a=t*k[0],i=e+n*I;for(let t=0;t<p.outWidth;++t){const e=r+t*$,n=t*p.strideWidth-y;for(let t=0;t<f;++t){const r=n+t*g;if(r<0||r>=p.inWidth)continue;const s=i+r*S;let o=a+t*k[1];for(let t=0;t<p.inChannels;++t){const n=R[s+t*C];for(let t=0;t<p.outChannels;++t)D[e+t*A]+=n*_[o+t];o+=p.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,D)}const PS={kernelName:ge,backendName:"cpu",kernelFunc:BS},WS={kernelName:ye,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:a}=e,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r;SI([s,a],"conv2dBackpropFilter");const h=bu(u),p=lu(s.shape,c,i,1,o,l,!1,h),{strideHeight:d,strideWidth:f,filterHeight:m,filterWidth:g}=p,y="channelsLast"===p.dataFormat,b=new ss(p.filterShape,"float32"),x=p.padInfo.left,v=p.padInfo.top,w=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,N=new ss(s.shape,s.dtype,w),I=new ss(a.shape,a.dtype,k);for(let t=0;t<m;++t){const e=Math.max(0,Math.ceil((v-t)/d)),n=Math.min(p.outHeight,(p.inHeight+v-t)/d);for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((x-r)/f)),a=Math.min(p.outWidth,(p.inWidth+x-r)/f);for(let i=0;i<p.inChannels;++i)for(let o=0;o<p.outChannels;++o){let u=0;for(let l=0;l<p.batchSize;++l)for(let c=e;c<n;++c){const e=t+c*d-v;for(let t=s;t<a;++t){const n=r+t*f-x;u+=y?N.get(l,e,n,i)*I.get(l,c,t,o):N.get(l,i,e,n)*I.get(l,o,c,t)}}b.set(u,t,r,i,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},VS={kernelName:be,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:a}=e,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r;SI([s,a],"conv2dBackpropInput");const h=Et(a.shape),p=Et(s.shape);let d=bu(l);const f=lu(i,a.shape,o,1,u,c,!1,d),m=new ss(f.inShape,"float32"),g=m.values,y=n.data.get(s.dataId).values,b=n.data.get(a.dataId).values,[x,v,w]=h,{batchSize:k,filterHeight:N,filterWidth:I,inChannels:S,inHeight:C,inWidth:T,outChannels:E,outHeight:$,outWidth:A,strideHeight:R,strideWidth:_}=f;d=f.dataFormat;const D=N-1-f.padInfo.top,F=I-1-f.padInfo.left,O="channelsLast"===d,M=m.strides[0],L=O?m.strides[1]:m.strides[2],z=O?m.strides[2]:1,B=O?1:m.strides[1],P=p[0],W=O?p[1]:p[2],V=O?p[2]:1,U=O?1:p[1];for(let t=0;t<k;++t)for(let e=0;e<S;++e)for(let n=0;n<C;++n){const r=n-D,s=Math.max(0,Math.ceil(r/R)),a=Math.min($,(N+r)/R);for(let i=0;i<T;++i){const o=i-F,u=Math.max(0,Math.ceil(o/_)),l=Math.min(A,(I+o)/_);let c=0;for(let n=s;n<a;++n){const s=n*R-r;for(let r=u;r<l;++r){const a=P*t+W*n+V*r,i=x*(N-1-s)+v*(I-1-(r*_-o))+w*e;for(let t=0;t<E;++t)c+=y[a+U*t]*b[i+t]}}g[M*t+L*n+z*i+B*e]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},US={kernelName:xe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:a}=e,{strides:i,pad:o,dilations:u}=r;SI([s,a],"conv3d");const l=cu(s.shape,a.shape,i,u,o),{filterDepth:c,filterHeight:h,filterWidth:p,dilationDepth:d,dilationHeight:f,dilationWidth:m,padInfo:g}=l,y=g.front,b=g.left,x=g.top,v=new ss(l.outShape,s.dtype),w=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,N=v.values,I=Et(s.shape),S=Et(a.shape);for(let t=0;t<l.batchSize;++t){const e=t*I[0],n=t*v.strides[0];for(let t=0;t<l.outDepth;++t){const r=n+t*v.strides[1],s=t*l.strideDepth-y;for(let t=0;t<c;++t){const n=s+t*d;if(n<0||n>=l.inDepth)continue;const a=t*S[0],i=e+n*I[1];for(let t=0;t<l.outHeight;++t){const e=r+t*v.strides[2],n=t*l.strideHeight-x;for(let t=0;t<h;++t){const r=n+t*f;if(r<0||r>=l.inHeight)continue;const s=a+t*S[1],o=i+r*I[2];for(let t=0;t<l.outWidth;++t){const n=e+t*l.outChannels,r=t*l.strideWidth-b;for(let t=0;t<p;++t){const e=r+t*m;if(e<0||e>=l.inWidth)continue;const a=s+t*S[2],i=o+e*l.inChannels;let u=a;for(let t=0;t<l.inChannels;++t){const e=w[i+t];for(let t=0;t<l.outChannels;++t)N[n+t]+=e*k[u+t];u+=l.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},GS={kernelName:ve,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:a}=e,{strides:i,pad:o,filterShape:u}=r;SI([s,a],"conv3dBackpropFilterV2");const l=Et(s.shape),c=Et(a.shape),h=cu(s.shape,u,i,1,o),p=h.strideDepth,d=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new ss(h.filterShape,"float32"),x=b.values,[v,w,k,N]=b.strides,I=n.data.get(a.dataId).values,[S,C,T,E]=c,$=n.data.get(s.dataId).values,[A,R,_,D]=l,F=h.padInfo.front,O=h.padInfo.left,M=h.padInfo.top;for(let t=0;t<m;++t){const e=Math.max(0,Math.ceil((F-t)/p)),n=Math.min(h.outDepth,(h.inDepth+F-t)/p),r=t*v;for(let s=0;s<g;++s){const a=Math.max(0,Math.ceil((M-s)/d)),i=Math.min(h.outHeight,(h.inHeight+M-s)/d),o=s*w+r;for(let r=0;r<y;++r){const u=Math.max(0,Math.ceil((O-r)/f)),l=Math.min(h.outWidth,(h.inWidth+O-r)/f),c=r*k+o;for(let o=0;o<h.inChannels;++o){const m=o*N+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*A,y=m*S;for(let m=e;m<n;++m){const e=(t+m*p-F)*R+h,n=m*C+y;for(let t=a;t<i;++t){const a=(s+t*d-M)*_+e,i=t*T+n;for(let t=u;t<l;++t){const e=t*E+i;g+=$[(r+t*f-O)*D+a+o]*I[e+c]}}}}x[m+c]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},jS={kernelName:we,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:a}=e,{pad:i,strides:o,inputShape:u}=r;SI([s],"conv3dBackpropInputV2");const l=Et(s.shape),c=Et(a.shape),h=cu(u,a.shape,o,1,i),p=new ss(h.inShape,"float32"),d=p.values,[f,m,g,y]=p.strides,b=n.data.get(s.dataId).values,[x,v,w,k]=l,N=n.data.get(a.dataId).values,[I,S,C,T]=c,{batchSize:E,filterDepth:$,filterHeight:A,filterWidth:R,inChannels:_,inDepth:D,inHeight:F,inWidth:O,outChannels:M,outDepth:L,outHeight:z,outWidth:B,strideDepth:P,strideHeight:W,strideWidth:V}=h,U=$-1-h.padInfo.front,G=A-1-h.padInfo.top,j=R-1-h.padInfo.left;for(let t=0;t<E;++t)for(let e=0;e<_;++e)for(let n=0;n<D;++n){const r=n-U,s=Math.max(0,Math.ceil(r/P)),a=Math.min(L,($+r)/P);for(let i=0;i<F;++i){const o=i-G,u=Math.max(0,Math.ceil(o/W)),l=Math.min(z,(A+o)/W);for(let c=0;c<O;++c){const h=c-j,p=Math.max(0,Math.ceil(h/V)),E=Math.min(B,(R+h)/V);let _=0;for(let n=s;n<a;++n){const s=n*P-r;for(let r=u;r<l;++r){const a=r*W-o;for(let i=p;i<E;++i){const o=x*t+v*n+w*r+k*i,u=I*($-1-s)+S*(A-1-a)+C*(R-1-(i*V-h))+T*e;for(let t=0;t<M;++t)_+=b[o+t]*N[u+t]}}}d[f*t+m*n+g*i+y*c+e]=_}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},HS=_I(ke,(t=>Math.cos(t))),qS={kernelName:ke,backendName:"cpu",kernelFunc:HS},KS=_I(Ne,(t=>Math.cosh(t))),XS={kernelName:Ne,backendName:"cpu",kernelFunc:KS};function YS(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:a}=e,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=r;SI([s,a],"depthwiseConv2DNative");const c=Et(s.shape),h=Et(a.shape);let p=u;null==p&&(p=[1,1]),Z(yu(i,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`));const d=lu(s.shape,a.shape,i,p,o,l,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=d,x=b.left,v=b.top,w=d.outChannels/d.inChannels,k=new ss(d.outShape,s.dtype),N=n.data.get(s.dataId).values,I=n.data.get(a.dataId).values,S=k.values;for(let t=0;t<d.batchSize;++t){const e=t*c[0],n=t*k.strides[0];for(let t=0;t<d.outHeight;++t){const r=n+t*k.strides[1],s=t*d.strideHeight-x;for(let t=0;t<f;++t){const n=s+t*g;if(n<0||n>=d.inHeight)continue;const a=t*h[0],i=e+n*c[1];for(let t=0;t<d.outWidth;++t){const e=r+t*k.strides[2],n=t*d.strideWidth-v;for(let t=0;t<m;++t){const r=n+t*y;if(r<0||r>=d.inWidth)continue;const s=a+t*h[1],o=i+r*d.inChannels;let u=e,l=s;for(let t=0;t<d.inChannels;++t){const e=N[o+t];for(let t=0;t<w;++t)S[u+t]+=e*I[l+t];u+=w,l+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const JS={kernelName:Te,backendName:"cpu",kernelFunc:YS},ZS={kernelName:Ee,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:a}=e,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r;SI([s,a],"depthwiseConv2dNativeBackpropFilter");const h=lu(s.shape,c,i,o,u,l,!0),{strideHeight:p,strideWidth:d,filterHeight:f,filterWidth:m}=h,g=new ss(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,v=n.data.get(s.dataId).values,w=new ss(s.shape,s.dtype,v),k=n.data.get(a.dataId).values,N=new ss(a.shape,a.dtype,k);for(let t=0;t<f;++t){const e=Math.max(0,Math.ceil((b-t)/p)),n=Math.min(h.outHeight,(h.inHeight+b-t)/p);for(let r=0;r<m;++r){const s=Math.max(0,Math.ceil((y-r)/d)),a=Math.min(h.outWidth,(h.inWidth+y-r)/d);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/x),u=i%x;let l=0;for(let u=0;u<h.batchSize;++u)for(let c=e;c<n;++c){const e=t+c*p-b;for(let t=s;t<a;++t){const n=r+t*d-y;l+=w.get(u,e,n,o)*N.get(u,c,t,i)}}g.set(l,t,r,o,u)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},QS={kernelName:$e,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:a}=e,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r;SI([s,a],"depthwiseConv2DNativeBackpropInput");const h=Et(s.shape),p=Et(a.shape),d=lu(c,a.shape,i,o,u,l,!0),f=new ss(d.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(s.dataId).values,[v,w,k]=h,N=n.data.get(a.dataId).values,[I,S,C]=p,{batchSize:T,filterHeight:E,filterWidth:$,inChannels:A,inHeight:R,inWidth:_,outChannels:D,outHeight:F,outWidth:O,strideHeight:M,strideWidth:L}=d,z=E-1-d.padInfo.top,B=$-1-d.padInfo.left,P=D/A;for(let t=0;t<T;++t)for(let e=0;e<A;++e)for(let n=0;n<R;++n){const r=n-z,s=Math.max(0,Math.ceil(r/M)),a=Math.min(F,(E+r)/M);for(let i=0;i<_;++i){const o=i-B,u=Math.max(0,Math.ceil(o/L)),l=Math.min(O,($+o)/L);let c=0;for(let n=s;n<a;++n){const s=n*M-r;for(let r=u;r<l;++r){const a=v*t+w*n+k*r,i=I*(E-1-s)+S*($-1-(r*L-o))+C*e;for(let t=0;t<P;++t)c+=x[a+(e*P+t)]*N[i+t]}}m[g*t+y*n+b*i+e]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},tC={kernelName:Re,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:s}=t,{strides:a,pad:i,dilations:o}=n,u=e,l=u.data.get(r.dataId).values,c=r.shape.length,h=u.data.get(s.dataId).values,p=s.shape.length,{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:N,dilationHeight:I,dilationWidth:S,outShape:C}=iu(r.shape,s.shape,a,i,"NHWC",o),T=nt(C),E=C.length,$=mt(r.dtype,T);for(let t=0;t<d;++t)for(let e=0;e<y;++e){const n=e*v-x.top;for(let a=0;a<b;++a){const i=a*w-x.left;for(let o=0;o<g;++o){let u=Number.MIN_SAFE_INTEGER;for(let e=0;e<k;++e){const a=n+e*I;if(a>=0&&a<f)for(let n=0;n<N;++n){const d=i+n*S;if(d>=0&&d<m){const i=Ot([t,a,d,o],c,Et(r.shape)),f=Ot([e,n,o],p,Et(s.shape)),m=l[i]+h[f];m>u&&(u=m)}}}$[Ot([t,e,a,o],E,Et(C))]=u}}}return{dataId:u.write(Qr($,r.dtype),C,r.dtype),shape:C,dtype:r.dtype}}},eC={kernelName:De,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:s,dy:a}=t,{strides:i,pad:o,dilations:u}=n,l=e,c=At(r.shape,l.data.get(r.dataId).values),h=At(s.shape,l.data.get(s.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:N,dilationWidth:I,outShape:S}=iu(r.shape,s.shape,i,o,"NHWC",u);Z(a.rank===S.length,(()=>`Error in ${De}, dy must have the same rank as output ${S.length}, but got `+a.rank));const C=At(S,l.data.get(a.dataId).values),T=Dt(s.shape,s.dtype);for(let t=0;t<p;++t)for(let e=0;e<g;++e){const n=e*x-b.top;for(let r=0;r<y;++r){const s=r*v-b.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=0,u=0;for(let e=0;e<w;++e){const r=n+e*N;if(r>=0&&r<d)for(let n=0;n<k;++n){const l=s+n*I;if(l>=0&&l<f){const s=c[t][r][l][a]+h[e][n][a];s>i&&(i=s,o=e,u=n)}}}T[o][u][a]+=C[t][e][r][a]}}}return{dataId:l.write(Qr(T,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},nC={kernelName:_e,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:s,dy:a}=t,{strides:i,pad:o,dilations:u}=n,l=e,c=At(r.shape,l.data.get(r.dataId).values),h=At(s.shape,l.data.get(s.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:N,dilationWidth:I,outShape:S}=iu(r.shape,s.shape,i,o,"NHWC",u);Z(a.rank===S.length,(()=>`Error in ${_e}, dy must have the same rank as output ${S.length}, but got `+a.rank));const C=At(S,l.data.get(a.dataId).values),T=Dt(r.shape,r.dtype);for(let t=0;t<p;++t)for(let e=0;e<g;++e){const n=e*x-b.top;for(let r=0;r<y;++r){const s=r*v-b.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,u=s<0?0:s;for(let e=0;e<w;++e){const r=n+e*N;if(r>=0&&r<d)for(let n=0;n<k;++n){const l=s+n*I;if(l>=0&&l<f){const s=c[t][r][l][a]+h[e][n][a];s>i&&(i=s,o=r,u=l)}}}T[t][o][u][a]+=C[t][e][r][a]}}}return{dataId:l.write(Qr(T,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},rC=zI(((t,e)=>t/e)),sC=QI(Fe,rC),aC={kernelName:Fe,backendName:"cpu",kernelFunc:sC},iC=Jp,oC=Zp,uC=Qp,lC=td,cC=ed,hC=nd,pC=_I(Le,(t=>{const e=Math.sign(t),n=Math.abs(t),r=1/(1+iC*n);return e*(1-((((hC*r+cC)*r+lC)*r+uC)*r+oC)*r*Math.exp(-n*n))})),dC={kernelName:Le,backendName:"cpu",kernelFunc:pC},fC=$S((t=>Math.exp(t))),mC=DI(Be,fC),gC={kernelName:Be,backendName:"cpu",kernelFunc:mC},yC=$S((t=>Math.expm1(t))),bC=DI(Pe,yC),xC={kernelName:Pe,backendName:"cpu",kernelFunc:bC},vC=zI(((t,e)=>t*e)),wC=tS(((t,e,n,r)=>({real:t*n-e*r,imag:t*r+e*n}))),kC=QI(Tn,vC,wC),NC={kernelName:Tn,backendName:"cpu",kernelFunc:kC};function IC(t,e,n,r,s){const a=Ii(r,e,n),i=nt(n),o=Et(r);if(a){const n=Si(e,o);return t.subarray(n,n+i)}const u=ft(s,i);for(let s=0;s<i;++s){const a=Ot(Mt(s,n.length,Et(n)).map(((t,n)=>t+e[n])),r.length,o);u[s]=t[a]}return u}function SC(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:a,size:i}=r;SI(s,"slice");const[o,u]=Ci(s,a,i);pi(s,o,u);const l=IC(n.data.get(s.dataId).values,o,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,l)}const CC={kernelName:nr,backendName:"cpu",kernelFunc:SC},TC=zI(((t,e)=>t-e)),EC=tS(((t,e,n,r)=>({real:t-n,imag:e-r}))),$C=QI(mr,TC,EC),AC={kernelName:mr,backendName:"cpu",kernelFunc:$C};function RC(t,e,n){const r=t.shape,s=r[0],a=r[1],i=n.data.get(t.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,l=[s,a],c=nt(l),h=ft("float32",c),p=ft("float32",c);for(let t=0;t<s;t++){const r=SC({inputs:{x:o},backend:n,attrs:{begin:[t,0],size:[1,a]}}),s=SC({inputs:{x:u},backend:n,attrs:{begin:[t,0],size:[1,a]}}),i=qI({inputs:{real:r,imag:s},backend:n}),{real:l,imag:c}=_C(i,e,n),d=ad(l,c);for(let e=0;e<a;e++){const n=ld(d,e);h[t*a+e]=n.real,p[t*a+e]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i)}const d=n.makeTensorInfo(l,"float32",h),f=n.makeTensorInfo(l,"float32",p),m=qI({inputs:{real:d,imag:f},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}function _C(t,e,n){const r=nt(t.shape),s=n.data.get(t.dataId),a=n.data.get(s.complexTensorInfos.real.dataId).values,i=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0==((o=r)&o-1)){const s=DC(a,i,r,e,n),o=[t.shape[0],t.shape[1]];if(e){const t=n.makeTensorInfo(o,"float32",s.real),e=n.makeTensorInfo(o,"float32",s.imag),a=n.makeTensorInfo([],"float32",Zr(r,"float32")),i=MI({inputs:{x:a},backend:n}),u=aC.kernelFunc({inputs:{a:t,b:a},backend:n}),l=aC.kernelFunc({inputs:{a:e,b:i},backend:n}),c=n.data.get(u.dataId).values,h=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),{real:c,imag:h}}return s}return id(function(t,e,n){const r=new Float32Array(2*e);for(let s=0;s<e;s++){let a=0,i=0;for(let r=0;r<e;r++){const o=pd(s*r,e,n),u=ld(t,r);a+=u.real*o.real-u.imag*o.imag,i+=u.real*o.imag+u.imag*o.real}n&&(a/=e,i/=e),cd(r,a,i,s)}return r}(ad(a,i),r,e));var o}function DC(t,e,n,r,s){if(1===n)return{real:t,imag:e};const a=ad(t,e),i=n/2,o=od(a),u=o.real,l=o.imag,c=[u.length],h=s.makeTensorInfo(c,"float32",u),p=s.makeTensorInfo(c,"float32",l),d=qI({inputs:{real:h,imag:p},backend:s}),f=ud(a),m=f.real,g=f.imag,y=[m.length],b=s.makeTensorInfo(y,"float32",m),x=s.makeTensorInfo(y,"float32",g),v=qI({inputs:{real:b,imag:x},backend:s}),w=DC(u,l,i,r,s),k=w.real,N=w.imag,I=[k.length],S=s.makeTensorInfo(I,"float32",k),C=s.makeTensorInfo(I,"float32",N),T=qI({inputs:{real:S,imag:C},backend:s}),E=DC(m,g,i,r,s),$=E.real,A=E.imag,R=[$.length],_=s.makeTensorInfo(R,"float32",$),D=s.makeTensorInfo(R,"float32",A),F=qI({inputs:{real:_,imag:D},backend:s}),O=hd(n,r),M=[O.real.length],L=s.makeTensorInfo(M,"float32",O.real),z=s.makeTensorInfo(M,"float32",O.imag),B=qI({inputs:{real:L,imag:z},backend:s}),P=kC({inputs:{a:B,b:F},backend:s}),W=rS({inputs:{a:T,b:P},backend:s}),V=$C({inputs:{a:T,b:P},backend:s}),U=XI({inputs:{input:W},backend:s}),G=XI({inputs:{input:V},backend:s}),j=OS({inputs:{input:W},backend:s}),H=OS({inputs:{input:V},backend:s}),q=LS({inputs:[U,G],backend:s,attrs:{axis:0}}),K=LS({inputs:[j,H],backend:s,attrs:{axis:0}}),X=s.data.get(q.dataId).values,Y=s.data.get(K.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(S),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(T),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const FC={kernelName:We,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e,s=nt(r.shape),a=r.shape[r.shape.length-1],i=aS({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=RC(i,!1,n),u=aS({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}},OC={kernelName:Ve,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{shape:r,value:s,dtype:a}=n,i=a||St(s),o=mt(i,nt(r));return function(t,e,n){t.fill(e)}(o,s),e.makeTensorInfo(r,i,o)}},MC={kernelName:Ue,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,s=n,a=ft(r.dtype,nt(r.shape)),[i,o,u,l]=r.shape,c=s.data.get(r.dataId).values;for(let t=0;t<i;t++){const e=t*u*o*l;for(let t=0;t<o;t++){const n=t*(u*l);for(let r=0;r<u;r++){const s=r*l;for(let o=0;o<l;o++){const h=[i,t,r,o][2],p=Math.round(u-h),d=e+n+s+o;let f=c[d];p>=0&&p<u&&(f=c[e+n+p*l+o]),a[d]=f}}}}return{dataId:s.write(a,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},LC=$S((t=>Math.floor(t))),zC=DI(Ge,LC),BC={kernelName:Ge,backendName:"cpu",kernelFunc:zC},PC={kernelName:Rr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:a,bias:i,preluActivationWeights:o}=e,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d}=r;let f=BS({inputs:{x:s,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const t=f;f=rS({inputs:{a:f,b:i},backend:n}),n.disposeIntermediateTensorInfo(t)}if(d){const t=f;f=HI(n,f,d,o),n.disposeIntermediateTensorInfo(t)}return f}},WC={kernelName:_r,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:a,bias:i,preluActivationWeights:o}=e,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d}=r;let f=YS({inputs:{x:s,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const t=f;f=rS({inputs:{a:f,b:i},backend:n}),n.disposeIntermediateTensorInfo(t)}if(d){const t=f;f=HI(n,f,d,o),n.disposeIntermediateTensorInfo(t)}return f}},VC={kernelName:Ze,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e,s=nt(r.shape),a=r.shape[r.shape.length-1],i=aS({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=RC(i,!0,n),u=aS({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}},UC=_I(tn,(t=>Number.isFinite(t)?1:0),"bool"),GC={kernelName:tn,backendName:"cpu",kernelFunc:UC},jC=_I(en,(t=>Math.abs(t)===1/0?1:0),"bool"),HC={kernelName:en,backendName:"cpu",kernelFunc:jC},qC=_I(nn,(t=>Number.isNaN(t)?1:0),"bool"),KC={kernelName:nn,backendName:"cpu",kernelFunc:qC},XC=$S((t=>Math.log(t))),YC=DI(on,XC),JC={kernelName:on,backendName:"cpu",kernelFunc:YC},ZC=_I(un,(t=>Math.log1p(t))),QC={kernelName:un,backendName:"cpu",kernelFunc:ZC},tT=_I(cn,(t=>t?0:1),"bool"),eT={kernelName:cn,backendName:"cpu",kernelFunc:tT};function nT(t,e,n,r){const s=ft(r,nt(n));for(let n=0;n<s.length;++n){const r=n*e;let a=t[r];for(let n=0;n<e;++n){const e=t[r+n];e>a&&(a=e)}s[n]=a}return s}function rT(t,e,n,r,s){const a=e.length,i=nt(e),o=Et(e),u=Et(s),l=ft(n,nt(s));for(let e=0;e<i;++e){const n=Mt(e,a,o),s=new Array(n.length);for(let t=0;t<s.length;t++)s[t]=n[r[t]];l[Ot(s,a,u)]=t[e]}return l}const sT={kernelName:mn,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{reductionIndices:s,keepDims:a}=e,i=n;let o=r.shape;const u=o.length,l=pt(s,o);let c=l;const h=Ko(c,u);let p=i.data.get(r.dataId).values;if(null!=h){const t=new Array(u);for(let e=0;e<t.length;e++)t[e]=o[h[e]];p=rT(p,o,r.dtype,h,t),c=Yo(c.length,u),o=t}SI(r,"max"),qo("max",c,u);const[d,f]=jo(o,c),m=nT(p,nt(f),d,r.dtype),g=i.write(m,d,r.dtype);let y=d;return a&&(y=Ho(d,l)),{dataId:g,shape:y,dtype:r.dtype}}},aT={kernelName:yn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;SI(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;Z(yu(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=ou(s.shape,a,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&st(l.inShape,l.outShape))c=MI({inputs:{x:s},backend:n});else{const t=n.data.get(s.dataId).values,e=Et(s.shape),r=IS(t,s.shape,s.dtype,e,l,"max");c=n.makeTensorInfo(l.outShape,s.dtype,r.values)}return c}},iT={kernelName:bn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:a,output:i}=e,o=a;SI([a,i],"maxPoolBackprop");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,p=ou(o.shape,u,l,1,c,h),d=n.data.get(o.dataId).values,f=_a(p.outShape,o.dtype,SS(d,o.shape,o.dtype,p).values),m=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,b=p.dilationWidth,x=p.effectiveFilterHeight,v=p.effectiveFilterWidth,w=v-1-p.padInfo.left,k=x-1-p.padInfo.top,N=_a(o.shape,"float32"),I=n.data.get(s.dataId).values,S=_a(s.shape,"float32",I);for(let t=0;t<p.batchSize;++t)for(let e=0;e<p.inChannels;++e)for(let n=0;n<p.inHeight;++n)for(let r=0;r<p.inWidth;++r){const s=n-k,a=r-w;let i=0;for(let n=0;n<x;n+=y){const r=(s+n)/m;if(!(r<0||r>=p.outHeight||Math.floor(r)!==r))for(let s=0;s<v;s+=b){const o=(a+s)/g;if(o<0||o>=p.outWidth||Math.floor(o)!==o)continue;const u=x*v-1-f.get(t,r,o,e)===n*v+s?1:0;0!==u&&(i+=S.get(t,r,o,e)*u)}}N.set(i,t,n,r,e)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}},oT={kernelName:wn,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=e,u=n;SI(r,"MaxPoolWithArgmax");const l=u.data.get(r.dataId).values,c=ou(r.shape,s,a,[1,1],i),[h,p]=function(t,e,n,r,s){const a=IS(t,0,n,Et(e),s,"max"),i=SS(t,e,n,s,!0,r);return[a.values,i.values]}(l,r.shape,r.dtype,o,c),d=u.write(h,c.outShape,r.dtype),f=u.write(p,c.outShape,r.dtype);return[{dataId:d,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},uT={kernelName:Sn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{paddings:a,mode:i}=r;SI(s,"mirrorPad");const o=a.map(((t,e)=>t[0]+s.shape[e]+t[1])),u=a.map((t=>t[0])),l=a.map(((t,e)=>t[0]+s.shape[e])),c="reflect"===i?0:1,h=n.data.get(s.dataId).values,p=s.shape.length,d=Et(s.shape),f=nt(o),m=o.length,g=Et(o),y=ft(s.dtype,f);for(let t=0;t<f;t++){let e=Mt(t,m,g);for(let t=0;t<m;t++)e[t]<u[t]?e[t]=2*u[t]-e[t]-c:e[t]>=l[t]&&(e[t]=2*(l[t]-1)-e[t]+c);e=e.map(((t,e)=>t-u[e]));const n=Ot(e,p,d);y[t]=h[n]}return{dataId:n.write(y,o,s.dtype),shape:o,dtype:s.dtype}}},lT=cp,cT={kernelName:Rn,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{boxes:r,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:o,padToMaxOutputSize:u}=n,l=e;SI(r,"NonMaxSuppressionPadded");const c=l.data.get(r.dataId).values,h=l.data.get(s.dataId).values,{selectedIndices:p,validOutputs:d}=lT(c,h,a,i,o,u);return[p,d]}},hT=hp,pT={kernelName:_n,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{boxes:r,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=n,l=e;SI(r,"NonMaxSuppressionWithScore");const c=l.data.get(r.dataId).values,h=l.data.get(s.dataId).values,p=a,d=i,f=o,m=u,{selectedIndices:g,selectedScores:y}=hT(c,h,p,d,f,m);return[g,y]}},dT=zI(((t,e)=>t!==e?1:0)),fT=QI($n,dT,null,"bool"),mT={kernelName:$n,backendName:"cpu",kernelFunc:fT},gT={kernelName:On,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{paddings:a,constantValue:i}=r;SI(s,"pad");const o=a.map(((t,e)=>t[0]+s.shape[e]+t[1])),u=a.map((t=>t[0])),l=n.data.get(s.dataId).values,c=nt(s.shape),h=s.shape.length,p=Et(s.shape),d=nt(o),f=o.length,m=Et(o),g=ft(s.dtype,d);0!==i&&g.fill(i);for(let t=0;t<c;t++)g[Ot(Mt(t,h,p).map(((t,e)=>t+u[e])),f,m)]=l[t];return{dataId:n.write(g,o,s.dtype),shape:o,dtype:s.dtype}}},yT=_I(Vn,(t=>1/t)),bT={kernelName:Vn,backendName:"cpu",kernelFunc:yT},xT={kernelName:$r,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:s,fillValue:a,center:i}=e,o=n,u=ft(r.dtype,nt(r.shape)),[l,c,h,p]=r.shape,[d,f]=Up(i,c,h),m=Math.sin(s),g=Math.cos(s),y=o.data.get(r.dataId).values;for(let t=0;t<l;t++){const e=t*h*c*p;for(let t=0;t<c;t++){const n=t*(h*p);for(let r=0;r<h;r++){const s=r*p;for(let i=0;i<p;i++){const o=[l,t,r,i],b=o[2],x=o[1];let v=(b-d)*g-(x-f)*m,w=(b-d)*m+(x-f)*g;v=Math.round(v+d),w=Math.round(w+f);let k=a;"number"!=typeof a&&(k=3===i?255:a[i]),v>=0&&v<h&&w>=0&&w<c&&(k=y[e+w*(h*p)+v*p+i]),u[e+n+s+i]=k}}}}return{dataId:o.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},vT=_I(Jn,(t=>{const e=Math.floor(t);return t-e<.5?Math.floor(t):t-e>.5?Math.ceil(t):e%2==0?e:e+1})),wT={kernelName:Jn,backendName:"cpu",kernelFunc:vT},kT=$S((t=>1/Math.sqrt(t))),NT=DI(Zn,kT),IT={kernelName:Zn,backendName:"cpu",kernelFunc:NT},ST=Xp,CT=Yp,TT=_I(er,(t=>t>=0?CT*t:ST*(Math.exp(t)-1))),ET={kernelName:er,backendName:"cpu",kernelFunc:TT},$T=_I(ir,(t=>1/(1+Math.exp(-t)))),AT={kernelName:ir,backendName:"cpu",kernelFunc:$T},RT=_I(ar,(t=>t<0?-1:t>0?1:0)),_T={kernelName:ar,backendName:"cpu",kernelFunc:RT},DT=_I(rr,(t=>Math.sin(t))),FT={kernelName:rr,backendName:"cpu",kernelFunc:DT},OT=_I(sr,(t=>Math.sinh(t))),MT={kernelName:sr,backendName:"cpu",kernelFunc:OT},LT=Math.log(1.1920928955078125e-7)+2,zT=_I(or,(t=>{const e=t>-LT,n=t<LT,r=Math.exp(t);let s;return s=n?r:e?t:Math.log(1+r),s})),BT={kernelName:or,backendName:"cpu",kernelFunc:zT};function PT(t){const{inputs:e,attrs:n,backend:r}=t,{x:s}=e,{perm:a}=n;SI(s,"transpose");const i=s.shape.length,o=new Array(i);for(let t=0;t<o.length;t++)o[t]=s.shape[a[t]];const u=rT(r.data.get(s.dataId).values,s.shape,s.dtype,a,o);return{dataId:r.write(u,o,s.dtype),shape:o,dtype:s.dtype}}const WT={kernelName:kr,backendName:"cpu",kernelFunc:PT},VT={kernelName:cr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:a,paddings:i}=r;SI([s],"spaceToBatchND");const o=nt(a),u=[[0,0]];u.push(...i);for(let t=1+a.length;t<s.shape.length;++t)u.push([0,0]);const l=gT.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),c=Gp(l.shape,a,o,!1),h=jp(c.length,a.length,!1),p=Hp(l.shape,a,o,!1),d=aS({inputs:{x:l},backend:n,attrs:{shape:c}}),f=PT({inputs:{x:d},backend:n,attrs:{perm:h}}),m=aS({inputs:{x:f},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}},UT=_I(ur,(t=>Math.sqrt(t))),GT={kernelName:ur,backendName:"cpu",kernelFunc:UT},jT={kernelName:fr,backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,r=e;SI(n,"square");const s=r.data.get(n.dataId).values,a=new Float32Array(s.length);for(let t=0;t<s.length;++t){const e=s[t];a[t]=e*e}return{dataId:r.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},HT=zI(((t,e)=>{const n=t-e;return n*n})),qT=QI(dr,HT),KT={kernelName:dr,backendName:"cpu",kernelFunc:qT},XT=_I(Tr,((t,e)=>{const n=e;return isNaN(t)?NaN:t>0?1:n.alpha})),YT={kernelName:Tr,backendName:"cpu",kernelFunc:XT},JT=_I(br,(t=>Math.tan(t))),ZT={kernelName:br,backendName:"cpu",kernelFunc:JT},QT=_I(xr,(t=>Math.tanh(t)));function tE(t,e,n,r){const s=pt(e,n)[0],a=[1,n[0],1];for(let t=0;t<s;t++)a[0]*=n[t];a[1]=n[s];for(let t=s+1;t<n.length;t++)a[2]*=n[t];const i={},o=new Int32Array(n[s]),u=new ss(a,r,t),l=[],c=1===a[0]&&1===a[2];for(let e=0;e<n[s];e++){let n;if(c)n=t[e].toString();else{const t=[];for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)t.push(u.get(n,e,r));n=t.join(",")}if(void 0!==i[n])o[e]=i[n];else{const t=Object.keys(i).length;i[n]=t,o[e]=t,l.push(e)}}const h=a.slice();h[1]=Object.keys(i).length;const p=new ss(h,r);l.forEach(((t,e)=>{for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)p.set(u.get(n,t,r),n,e,r)}));const d=n.slice();return d[s]=h[1],{outputValues:p.values,outputShape:d,indices:o}}const eE=[lS,hS,dS,mS,sS,yS,xS,wS,NS,CS,TS,uS,ES,ZI,_S,FS,KI,zS,WS,VS,PS,GS,jS,US,qS,XS,JS,ZS,QS,tC,nC,eC,aC,OI,dC,gC,xC,FC,OC,MC,BC,PC,WC,LI,VC,MS,GC,HC,KC,JC,QC,eT,aT,iT,oT,sT,uT,NC,cT,pT,mT,gT,WI,YI,bT,UI,jI,iS,xT,wT,IT,ET,AT,_T,FT,MT,CC,BT,VT,GT,jT,KT,YT,AC,ZT,{kernelName:xr,backendName:"cpu",kernelFunc:QT},WT,{kernelName:Nr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{axis:s}=n,{x:a}=e;SI(a,"unique");const i=r.data.get(a.dataId).values,{outputValues:o,outputShape:u,indices:l}=tE(i,s,a.shape,a.dtype);return[r.makeTensorInfo(u,a.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}}];for(const t of eE)zr(t);const nE={},rE={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function sE(t){if(!(t in nE)){const e=function(t){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=function(t){if("undefined"!=typeof OffscreenCanvas&&2===t)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(t);return e.addEventListener("webglcontextlost",(e=>{e.preventDefault(),delete nE[t]}),!1),1===t?e.getContext("webgl",rE)||e.getContext("experimental-webgl",rE):e.getContext("webgl2",rE)}(t);if(null===e)return console.log("Could not get context for WebGL version",t),null;nE[t]=e}const e=nE[t];return e.isContextLost()?(delete nE[t],sE(t)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),nE[t])}var aE,iE,oE;function uE(t,e){return[e,t]}function lE(t){const e=nt(t);return ot(Math.ceil(e/4))}function cE(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function hE(t,e){const n=t;let r,s,a,i,o,u,l,c,h,p;return 2===Bt().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,l=4,c=1,h=n.HALF_FLOAT,p=n.FLOAT):(r=t.RGBA,s=t.RGBA,a=t.RGBA,i=n.RGBA,o=t.RGBA,l=4,c=4,h=null!=e?e.HALF_FLOAT_OES:null,p=t.FLOAT),u=t.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:p}}function pE(t,e){const n=e();return Bt().getBool("DEBUG")&&function(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+function(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code "+e}}(t,e))}(t),n}function dE(t){return!!(Bt().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||5.96e-8<Math.abs(t)&&Math.abs(t)<65504)}function fE(t,e){return kE(t,(()=>t.getExtension(e)),'Extension "'+e+'" not supported on this browser.')}!function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"}(aE||(aE={})),function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"}(iE||(iE={})),function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(oE||(oE={}));const mE=/ERROR: [0-9]+:([0-9]+):/g;function gE(t,e){if(pE(t,(()=>t.validateProgram(e))),!1===t.getProgramParameter(e,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function yE(t,e,n,r,s,a,i){const o=t.getAttribLocation(e,n);return-1!==o&&(pE(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,r))),pE(t,(()=>t.vertexAttribPointer(o,s,t.FLOAT,!1,a,i))),pE(t,(()=>t.enableVertexAttribArray(o))),!0)}function bE(t,e,n,r){pE(t,(()=>function(t,e,n){(function(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+t.TEXTURE0;if(r<t.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(t,n),pE(t,(()=>t.activeTexture(t.TEXTURE0+n))),pE(t,(()=>t.bindTexture(t.TEXTURE_2D,e)))}(t,e,r))),pE(t,(()=>t.uniform1i(n,r)))}function xE(t,e,n){pE(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,n))),pE(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0)))}function vE(t,e){pE(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,e))),pE(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0)))}function wE(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error "+e}}(t,e))}function kE(t,e,n){const r=pE(t,(()=>e()));if(null==r)throw new Error(n);return r}function NE(t,e=2){return nt(t.slice(0,t.length-e))}function IE(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function SE(t){let e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[NE(t),...IE(t)]),e}function CE(t){return t%2==0}function TE(t,e){if(st(t=t.slice(-2),e=e.slice(-2)))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t.slice(-1)[0],r=e.slice(-1)[0];if(n===r)return!0;if(CE(n)&&CE(r)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&CE(t[0])&&CE(e[0])}let EE,$E;function AE(t,e){return null!=t.getExtension(e)}function RE(t){try{if(null!=sE(t))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function _E(t){const e=hE(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n),t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const r=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const s=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(r),s}function DE(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&Z("complex64"!==t.dtype,(()=>e+" does not support complex64 tensors in the WebGL backend."))}))}const FE=Bt();FE.registerFlag("HAS_WEBGL",(()=>FE.getNumber("WEBGL_VERSION")>0)),FE.registerFlag("WEBGL_VERSION",(()=>RE(2)?2:RE(1)?1:0)),FE.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),FE.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===FE.get("WEBGL_VERSION"))),FE.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),FE.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),FE.registerFlag("WEBGL_PACK",(()=>FE.getBool("HAS_WEBGL"))),FE.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>FE.getBool("WEBGL_PACK"))),FE.registerFlag("WEBGL_PACK_CLIP",(()=>FE.getBool("WEBGL_PACK"))),FE.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>!1)),FE.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>FE.getBool("WEBGL_PACK"))),FE.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>FE.getBool("WEBGL_PACK"))),FE.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>FE.getBool("WEBGL_PACK"))),FE.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>FE.getBool("WEBGL_PACK"))),FE.registerFlag("WEBGL_PACK_REDUCE",(()=>FE.getBool("WEBGL_PACK"))),FE.registerFlag("WEBGL_LAZILY_UNPACK",(()=>FE.getBool("WEBGL_PACK"))),FE.registerFlag("WEBGL_CONV_IM2COL",(()=>FE.getBool("WEBGL_PACK"))),FE.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(t){if(null==EE){const e=sE(t);EE=e.getParameter(e.MAX_TEXTURE_SIZE)}return EE}(FE.getNumber("WEBGL_VERSION")))),FE.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(t){if(null==$E){const e=sE(t);$E=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,$E)}(FE.getNumber("WEBGL_VERSION")))),FE.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const t=FE.getNumber("WEBGL_VERSION");return 0===t?0:function(t){if(0===t)return 0;let e;const n=sE(t);return e=AE(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:AE(n,"EXT_disjoint_timer_query")?1:0,e}(t)})),FE.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>FE.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Es())),FE.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(t){if(0===t)return!1;const e=sE(t);if(1===t){if(!AE(e,"OES_texture_float"))return!1}else if(!AE(e,"EXT_color_buffer_float"))return!1;return _E(e)}(FE.getNumber("WEBGL_VERSION")))),FE.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!FE.getBool("WEBGL_FORCE_F16_TEXTURES")&&FE.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),FE.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(t){if(0===t)return!1;const e=sE(t);if(1!==t){if(AE(e,"EXT_color_buffer_float"))return _E(e);const t="EXT_color_buffer_half_float";if(AE(e,t)){const n=e.getExtension(t);return function(t,e){const n=hE(t,e),r=t.createTexture();t.bindTexture(t.TEXTURE_2D,r),t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,s),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,r,0);const a=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(r),t.deleteFramebuffer(s),a}(e,n)}return!1}return!!AE(e,"OES_texture_float")&&!!AE(e,"WEBGL_color_buffer_float")&&_E(e)}(FE.getNumber("WEBGL_VERSION")))),FE.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(t=FE.getNumber("WEBGL_VERSION"))&&null!=sE(t).fenceSync;var t})),FE.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>FE.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),FE.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${t}.`)}));const{simpleAbsImpl:OE,addImpl:ME,ceilImpl:LE,expImpl:zE,expm1Impl:BE,floorImpl:PE,logImpl:WE,maxImpl:VE,multiplyImpl:UE,rsqrtImpl:GE,sliceImpl:jE,subImpl:HE,transposeImpl:qE,uniqueImpl:KE}=V;class XE{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map(((t,e)=>"T"+e));const n=[];this.variableNames.forEach((t=>{n.push(`float v${t} = get${t}AtOutCoords();`)}));const r=this.variableNames.map((t=>"v"+t)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class YE{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map(((t,e)=>"T"+e));const n=[];this.variableNames.forEach((t=>{n.push(`vec4 v${t} = get${t}AtOutCoords();`)}));const r=this.variableNames.map((t=>"v"+t)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}class JE{constructor(t,e,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:a}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];const i="max"===e?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}function ZE(t,e){return["x","y","z","w","u","v"].slice(0,e).map((e=>`${t}.${e}`))}function QE(t,e){return 1===e?[t]:ZE(t,e)}function t$(){let t,e,n,r,s,a,i,o,u,l;return 2===Bt().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",r="in",s="texture",a="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",r="varying",s="texture2D",a="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:r,texture2D:s,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:l}}function e$(t,e,n="index"){const r=Et(e);return r.map(((e,s)=>`int ${t[s]} = ${n} / ${e}; ${s===r.length-1?`int ${t[s+1]} = ${n} - ${t[s]} * ${e}`:`index -= ${t[s]} * ${e}`};`)).join("")}function n$(t){const e=Et(t).map((t=>t.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;\n  }\n`}const r$="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:s$}=g;function a$(t,e,n,r){const s=[];t.forEach((t=>{const e=nt(t.shapeInfo.logicalShape);t.shapeInfo.isUniform?s.push(`uniform float ${t.name}${e>1?`[${e}]`:""};`):(s.push(`uniform sampler2D ${t.name};`),s.push(`uniform int offset${t.name};`))}));const a=s.join("\n"),i=t.map((t=>function(t,e,n=!1){let r="";r+=n?o$(t):i$(t);const s=t.shapeInfo.logicalShape,a=e.logicalShape;return s.length<=a.length&&(r+=n?function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=t.shapeInfo.logicalShape.length,i=e.logicalShape.length,o=s$(t.shapeInfo.logicalShape,e.logicalShape),u=f$(i),l=i-a;let c;const h=["x","y","z","w","u","v"];c=0===a?"":i<2&&o.length>=1?"coords = 0;":o.map((t=>`coords.${h[t+l]} = 0;`)).join("\n");let p="";p=i<2&&a>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>"coords."+h[e+l])).join(", ");let d="return outputValue;";const f=1===nt(t.shapeInfo.logicalShape),m=1===nt(e.logicalShape);if(1!==a||f||m){if(f&&!m)d=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const t=a-2,e=a-1;o.indexOf(t)>-1&&o.indexOf(e)>-1?d="return vec4(outputValue.x);":o.indexOf(t)>-1?d="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(e)>-1&&(d="return vec4(outputValue.xx, outputValue.zz);")}}else d="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${u} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${p});\n      ${d}\n    }\n  `}(t,e):function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=e.texShape,i=t.shapeInfo.texShape,o=t.shapeInfo.logicalShape.length,u=e.logicalShape.length;if(!t.shapeInfo.isUniform&&o===u&&null==t.shapeInfo.flatOffset&&st(i,a))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=f$(u),c=s$(t.shapeInfo.logicalShape,e.logicalShape),h=u-o;let p;const d=["x","y","z","w","u","v"];p=0===o?"":u<2&&c.length>=1?"coords = 0;":c.map((t=>`coords.${d[t+h]} = 0;`)).join("\n");let f="";return f=u<2&&o>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>"coords."+d[e+h])).join(", "),`\n    float ${s}() {\n      ${l} coords = getOutputCoords();\n      ${p}\n      return get${r}(${f});\n    }\n  `}(t,e)),r}(t,e,r))).join("\n"),o=e.texShape,u=t$(),l=function(t){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${t.texture2D}(textureSampler, uv).r;\n    }\n  `}(u);let c,h,p=function(t){return`${t.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${t.varyingFs} vec2 resultUV;\n    ${t.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${t.defineSpecialNaN}\n    ${t.defineSpecialInf}\n    ${t.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${u$}\n    ${l$}\n    ${c$}\n  `}(u);return e.isPacked?(c=function(t,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return 1===n[0]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,e);case 2:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(st(t,e))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const r=Math.ceil(t[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[2]/2),s=r*Math.ceil(t[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(t,e);default:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[t.length-1]/2),s=r*Math.ceil(t[t.length-2]/2);let a=s,i="",o="b, r, c";for(let e=2;e<t.length-1;e++)a*=t[t.length-e-1],i=`\n      int b${e} = index / ${a};\n      index -= b${e} * ${a};\n    `+i,o=`b${e}, `+o;return`\n    ivec${t.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${t.length}(${o});\n    }\n  `}(t,e)}}(e.logicalShape,o),h=function(t){return`\n    void setOutput(vec4 val) {\n      ${t.output} = val;\n    }\n  `}(u)):(c=function(t,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return 1===(n=e)[0]?`\n      int getOutputCoords() {\n        return int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return resTexRC.x * ${n[1]} + resTexRC.y;\n    }\n  `;case 2:return function(t,e){return st(t,e)?`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));\n      }\n    `:1===t[1]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===t[0]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      int r = index / ${t[1]};\n      int c = index - r * ${t[1]};\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=e$(["r","c","d"],t);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(t,e);case 4:return function(t,e){const n=e$(["r","c","d","d2"],t);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(t,e);case 5:return function(t,e){const n=e$(["r","c","d","d2","d3"],t);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},\n                             ${e[1]}));\n\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(t,e);case 6:return function(t,e){const n=e$(["r","c","d","d2","d3","d4"],t);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(t,e);default:throw new Error(t.length+"-D output sampling is not yet supported")}var n}(e.logicalShape,o),h=function(t){return`\n    void setOutput(float val) {\n      ${t.output} = vec4(val, 0, 0, 0);\n    }\n  `}(u)),r&&(p+=h$),[p,l,h,a,c,i,n].join("\n")}function i$(t){const e=t.shapeInfo.logicalShape;switch(e.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`float ${n}() {return ${e};}`;const[r,s]=t.shapeInfo.texShape;if(1===r&&1===s)return`\n      float ${n}() {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const[a,i]=t.shapeInfo.texShape;return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${a}, ${i}, ${p$(e)});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${d$(t)}\n      }\n    `;const r=t.shapeInfo.texShape,s=r[0],a=r[1];if(1===a&&1===s)return`\n      float ${n}(int index) {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const i=p$(e);return 1===a?`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${s}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `:1===s?`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);\n        return sampleTexture(${e}, uv);\n      }\n    `:`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${a}, index + ${i});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape;if(null!=s&&st(e,s)){const t=s[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${t}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:a,keptDims:i}=dt(e),o=a;if(o.length<e.length){const e=["row","col"];return`\n      ${i$(m$(t,o))}\n      float ${r}(int row, int col) {\n        return ${r}(${g$(e,i)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));\n        ${d$(t)}\n      }\n    `;const u=s[0],l=s[1],c=p$(n);return 1===l?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:1===u?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${e[1]} + col + ${c};\n    vec2 uv = uvFromFlat(${u}, ${l}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[1]*e[2],a=e[2],{newShape:i,keptDims:o}=dt(e),u=i;if(u.length<e.length){const e=["row","col","depth"];return`\n        ${i$(m$(t,u))}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${g$(e,o)});\n        }\n      `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${a}, 1)));\n        ${d$(t)}\n      }\n    `;const l=t.shapeInfo.texShape,c=l[0],h=l[1],p=t.shapeInfo.flatOffset;if(h===s&&null==p)return`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${a}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${c}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(h===a&&null==p)return`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${c}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${a} + depth + ${p$(n)};\n        vec2 uv = uvFromFlat(${c}, ${h}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(t);case 4:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[3],a=e[2]*s,i=e[1]*a,{newShape:o,keptDims:u}=dt(e);if(o.length<e.length){const e=["row","col","depth","depth2"];return`\n      ${i$(m$(t,o))}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${g$(e,u)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${i}, ${a}, ${s}, 1)));\n        ${d$(t)}\n      }\n    `;const l=t.shapeInfo.flatOffset,c=t.shapeInfo.texShape,h=c[0],p=c[1];if(p===i&&null==l)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===s&&null==l)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${e[1]*e[2]}, ${e[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${a} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${p}, index + ${p$(n)});\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 5:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[4],a=e[3]*s,i=e[2]*a,o=e[1]*i,{newShape:u,keptDims:l}=dt(e);if(u.length<e.length){const e=["row","col","depth","depth2","depth3"];return`\n      ${i$(m$(t,u))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${g$(e,l)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${a}, ${s})) +\n          depth3;\n        ${d$(t)}\n      }\n    `;const c=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,p=h[0],d=h[1];if(d===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===s&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]},\n               ${e[2]*e[3]}, ${e[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${a} +\n          depth2 * ${s} + depth3 + ${p$(n)};\n      vec2 uv = uvFromFlat(${p}, ${d}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 6:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:a}=dt(e);if(s.length<e.length){const e=["row","col","depth","depth2","depth3","depth4"];return`\n      ${i$(m$(t,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${g$(e,a)});\n      }\n    `}const i=e[5],o=e[4]*i,u=e[3]*o,l=e[2]*u,c=e[1]*l;if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${l}, ${u}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${d$(t)}\n      }\n    `;const h=t.shapeInfo.flatOffset,p=t.shapeInfo.texShape,d=p[0],f=p[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${u}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]*e[4]},\n               ${e[2]*e[3]*e[4]},\n               ${e[3]*e[4]},\n               ${e[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${l} + depth * ${u} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${p$(n)};\n      vec2 uv = uvFromFlat(${d}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);default:throw new Error(e.length+"-D input sampling is not yet supported")}}function o$(t){switch(t.shapeInfo.logicalShape.length){case 0:return function(t){const e=t.name;return`\n    vec4 ${"get"+e.charAt(0).toUpperCase()+e.slice(1)}() {\n      return ${t$().texture2D}(${e}, halfCR);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),r=t.shapeInfo.texShape,s=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],a=t$();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${s[0]}, ${s[1]}, index);\n      return ${a.texture2D}(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape,a=s[0],i=s[1],o=t$();if(null!=s&&st(e,s))return`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${a}.0);\n\n        return ${o.texture2D}(${n}, uv);\n      }\n    `;const u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(e[1]/2)}, ${u[0]}, ${u[1]}, row, col);\n      return ${o.texture2D}(${n}, uv);\n    }\n  `}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape,a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===e[0]){const n=[1,2],s=["b","row","col"];return`\n        ${o$(m$(t,e.slice(1)))}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${g$(s,n)});\n        }\n      `}const i=a[0],o=a[1],u=Math.ceil(e[2]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${i}, ${o}, ${u*Math.ceil(e[1]/2)}, ${u}, b, row, col);\n      return ${t$().texture2D}(${n}, uv);\n    }\n  `}(t);default:return function(t){const e=t.shapeInfo.logicalShape,n=e.length,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=t.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],o=i[0],u=i[1],l=Math.ceil(e[n-1]/2);let c=l*Math.ceil(e[n-2]/2),h="int b, int row, int col",p=`b * ${c} + (row / 2) * ${l} + (col / 2)`;for(let t=2;t<n-1;t++)h=`int b${t}, `+h,c*=e[n-t-1],p=`b${t} * ${c} + `+p;return`\n    vec4 ${s}(${h}) {\n      int index = ${p};\n      int texR = index / ${u};\n      int texC = index - texR * ${u};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${o});\n      return ${t$().texture2D}(${r}, uv);\n    }\n  `}(t)}}const u$="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",l$="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",c$="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",h$="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function p$(t){return"offset"+t}function d$(t){const e=t.name,n=nt(t.shapeInfo.logicalShape);return n<2?`return ${e};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${e}[i];\n      }\n    }\n  `}function f$(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function m$(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function g$(t,e){return e.map((e=>t[e])).join(", ")}class y${constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,Z(t.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=t[t.length-1],a=Math.ceil(s/e);this.outputShape=t.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,u=f$(o),l=QE("coords",o);let c,h;if(1===a){h=o+1;const t=f$(h);c=`\n        ${t} sourceLocR = ${t}(${l.join()}, 0);\n        ++${l[o-1]};\n        ${t} sourceLocG = ${t}(${l.join()}, 0);\n        ++${l[o-2]};\n        ${t} sourceLocA = ${t}(${l.join()}, 0);\n        --${l[o-1]};\n        ${t} sourceLocB = ${t}(${l.join()}, 0);\n        --${l[o-2]};`}else h=o,c=`\n        ${u} sourceLocR = coords;\n        ++${l[o-1]};\n        ${u} sourceLocG = coords;\n        ++${l[o-2]};\n        ${u} sourceLocA = coords;\n        --${l[o-1]};\n        ${u} sourceLocB = coords;\n        --${l[o-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),d="."+p[h-1],f=p.map((t=>"int "+t)),m=QE("sourceLocR",h-1).concat("inIdx.r"),g=QE("sourceLocG",h-1).concat("inIdx.g"),y=QE("sourceLocB",h-1).concat("inIdx.b"),b=QE("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,w=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${l[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${l[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${d}, sourceLocG${d},\n          sourceLocB${d}, sourceLocA${d}) * ${e};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${e}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}class b${constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,a=t.dilationHeight,i=t.dilationWidth,o=t.effectiveFilterHeight,u=t.effectiveFilterWidth,l=o-1-t.padInfo.top,c=u-1-t.padInfo.left,h=1/(e*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class x${constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,s=t.strideDepth,a=t.strideHeight,i=t.strideWidth,o=t.dilationDepth,u=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterDepth,h=t.effectiveFilterHeight,p=t.effectiveFilterWidth,d=c-1-t.padInfo.front,f=h-1-t.padInfo.top,m=p-1-t.padInfo.left,g=1/(e*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const v$="return (a < 0.) ? b * a : a;";class w${constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=Fo(e,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${t}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const k$="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";class N${constructor(t,e,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Fo(e,n);const s=this.outputShape.length;let a="";if(r)if(0===s||1===nt(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(a=`\n          ${f$(s)} coords = getOutputCoords();\n        `,1===s)a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const t=QE("coords",s);a+=`\n            bool nextRowOutOfBounds =\n              (${t[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${t[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${t}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}class I${constructor(t){this.variableNames=["A"],this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}class S${constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}class C${constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}class T${constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,s=t.padInfo.left,a="channelsLast"===t.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              if (${a}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class E${constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,a="channelsLast"===t.dataFormat,i=e-1-t.padInfo.top,o=n-1-t.padInfo.left,u=a?1:2,l=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class $${constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,s=t.padInfo.front,a=t.padInfo.top,i=t.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yF = 0; yF < ${t.outDepth}; yF++) {\n            int xF = wF + yF * ${e} - ${s};\n\n            if (xF < 0 || xF >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${t.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${t.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class A${constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,s=t.strideDepth,a=t.strideHeight,i=t.strideWidth,o=e-1-t.padInfo.front,u=n-1-t.padInfo.top,l=r-1-t.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${e}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${e} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class R${constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,s=t.padInfo.left,a=t.outChannels/t.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class _${constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,a=e-1-t.padInfo.top,i=n-1-t.padInfo.left,o=t.outChannels/t.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class D${constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const s=t.padInfo.top,a=t.padInfo.left,i=t.strideHeight,o=t.strideWidth,u=t.dilationHeight,l=t.dilationWidth,c=t.filterHeight,h=t.filterWidth,p=4*Math.floor(t.inChannels/4),d=t.inChannels%4,f="channelsLast"===t.dataFormat,m=f?1:2,g=f?2:3,y=f?3:1;let b="",x="";n&&(b=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,x="result = activation(result);");const v=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${s}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${m}], coords[${g}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${c}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${h}; wC++) {\n            int xC = xCCorner + wC * ${l};\n\n            if (xC < 0 || xC >= ${t.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${f}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===d}) {\n\n              if (${f}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===d}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===d}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${x}\n        setOutput(result);\n      }\n    `}}class F${constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,r=t.padInfo.left,s=t.strideDepth,a=t.strideHeight,i=t.strideWidth,o=t.dilationDepth,u=t.dilationHeight,l=t.dilationWidth,c=t.filterDepth,h=t.filterHeight,p=t.filterWidth,d=4*Math.floor(t.inChannels/4),f=t.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${a}, ${i});\n      const ivec3 pads = ivec3(${e}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${d}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${d}) *\n                  getW(wF, wR, wC, ${d}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1),\n                  getX(batch, xF, xR, xC, ${d} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2),\n                  getW(wF, wR, wC, ${d} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class O${constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const s=t.inHeight,a=t.inWidth,i=t.padInfo.top,o=t.padInfo.left,u=t.strideHeight,l=t.strideWidth,c=t.dilationHeight,h=t.dilationWidth,p=t.filterHeight,d=t.filterWidth,f=t.outChannels/t.inChannels;let m="",g="";n&&(m=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,g="result = activation(result);");const y=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${m}\n\n      const ivec2 strides = ivec2(${u}, ${l});\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${f};\n        int q = d2 - d1 * ${f};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${c};\n\n          if (xR < 0 || xR >= ${s}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${h};\n\n            if (xC < 0 || xC >= ${a}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${y}\n        ${g}\n        setOutput(result);\n      }\n    `}}class M${constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.outShape;const s=t.inHeight,a=t.inWidth,i=t.padInfo.top,o=t.padInfo.left,u=t.strideHeight,l=t.strideWidth,c=t.dilationHeight,h=t.dilationWidth,p=t.filterHeight,d=t.filterWidth,f=d;let m="int xR; int xC; int xCOffset;";for(let t=0;t<p;t++)for(let e=0;e<d;e++)m+=`\n          vec4 xTexelR${t}C${2*e} = vec4(0.);\n          vec4 wR${t}C${e} = vec4(0.);\n          vec4 xR${t}C${e} = vec4(0.);`;for(let t=0;t<p;t++)for(let e=0;e<f;e++){const n=2*e;if(m+=`\n          xR = xRCorner + ${t*c};\n          xC = xCCorner + ${n*h};\n        `,1===l){if(n<d&&(m+=o%2==1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${a}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${a}) {\n                    xTexelR${t}C${n}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${a}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${a}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${t}C${n} = vec4(previous.zw, xTexelR${t}C${n}.xy);\n                } else {\n                  xR${t}C${n} = vec4(0, 0, xTexelR${t}C${n}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${s} && xC >= 0 && xC < ${a}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xR${t}C${n} = xTexelR${t}C${n};\n              `,n+1<d)){const e=o%2==0?K(h):h;h%2==0&&o%2==1||h%2!=0&&o%2!=1?(m+=`\n                  xCOffset = xC + ${o%2} + ${e};\n\n                  if(xR >= 0 && xR < ${s} &&\n                    xCOffset >= 0 && xCOffset < ${a}) {\n                    xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,h>1&&(m+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${s} &&\n                      xCOffset >= 0 && xCOffset < ${a}) {\n                      xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${t}C${n} = vec4(0.);\n                    }\n                  `),m+=`\n                  xR${t}C${n+1} = vec4(\n                    xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.xy);\n                `):m+=`\n                  xCOffset = xC + ${e};\n\n                  if(xR >= 0 && xR < ${s} &&\n                    xCOffset >= 0 && xCOffset < ${a}) {\n                    xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${t}C${n+1} = xTexelR${t}C${n+2};\n                `}}else n<d&&(m+=`\n              if(xR >= 0 && xR < ${s}) {\n            `,o%2==1?(m+=`\n                xCOffset = xC + 1 - ${l};\n                if(xCOffset >= 0 && xCOffset < ${a}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${a}) {\n                  xTexelR${t}C${n+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${t}C${n+2} = vec4(0.);\n                }\n\n                xR${t}C${n} = vec4(\n                  xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.zw);\n              `,n+1<d&&(m+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${l};\n                  if(xCOffset >= 0 && xCOffset < ${a}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${t}C${n+1} = vec4(xTexelR${t}C${n+2}.xy, final.xy);\n                `)):(m+=`\n                if(xC >= 0 && xC < ${a}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + ${l};\n                if(xCOffset >= 0 && xCOffset < ${a}) {\n                  xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${t}C${n+2} = vec4(0.);\n                }\n\n                xR${t}C${n} = vec4(\n                  xTexelR${t}C${n}.xy, xTexelR${t}C${n+2}.xy);\n              `,n+1<d&&(m+=`\n                  xR${t}C${n+1} = vec4(\n                    xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.zw);\n                `)),m+="}");n<d&&(m+=`\n            vec4 wTexelR${t}C${n} = getW(${t}, ${n}, d1, q);\n            wR${t}C${n} = vec4(wTexelR${t}C${n}.xz, wTexelR${t}C${n}.xz);\n          `,n+1<d&&(m+=`\n              vec4 wTexelR${t}C${n+1} = getW(${t}, ${n+1}, d1, q);\n              wR${t}C${n+1} =\n                vec4(wTexelR${t}C${n+1}.xz, wTexelR${t}C${n+1}.xz);`))}for(let t=0;t<p;t++)for(let e=0;e<d;e++)m+=`dotProd += xR${t}C${e} * wR${t}C${e};`;let g="",y="";n&&(g=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,y="result = activation(result);");const b=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${g}\n\n      const ivec2 strides = ivec2(${u}, ${l});\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${m}\n\n        vec4 result = dotProd;\n        ${b}\n        ${y}\n        setOutput(result);\n      }\n    `}}class L${constructor(t,e,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,u]=t,[l]=e,[c,h]=n;this.outputShape=[l,c,h,u];const p="bilinear"===r?1:0,[d,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0","0.5 * (y1+y2) * "+d],[b,x,v]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0","0.5 * (x1+x2) * "+f];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${d} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}class z${constructor(t,e,n){this.variableNames=["x"],this.outputShape=t;const r=t.length,s=e?"0.0":`getX(${B$(r,"coords")})`,a=t[t.length-1];let i="",o="";e?(i=n?"end != "+(a-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?"end + pow2 < "+a:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${f$(r)} coords = getOutputCoords();\n        int end = ${P$(r,"coords")};\n        float val = ${s};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${P$(r,"coords")} = idx;\n          val += getX(${B$(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.index&&(this.index=e.getUniformLocation(n,"index")),e.gl.uniform1f(this.index,t)}}}function B$(t,e){if(1===t)return""+e;if(2===t)return`${e}.x, ${e}.y`;if(3===t)return`${e}.x, ${e}.y, ${e}.z`;if(4===t)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}function P$(t,e){if(1===t)return""+e;if(2===t)return e+".y";if(3===t)return e+".z";if(4===t)return e+".w";throw Error(`Cumulative sum for rank ${t} is not yet supported`)}class W${constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=aE.DENSE;const e=lE(t),n=t$();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${e$(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class V${constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=aE.DENSE;const e=lE(t),n=t$();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${e$(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class U${constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${e};\n      int offset_h = imod(h, ${e});\n      int in_w = w / ${e};\n      int offset_w = imod(w, ${e});\n      int offset_d = (offset_h * ${e} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}class G${constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}class j${constructor(t){this.variableNames=["A"],this.outTexUsage=iE.DOWNLOAD;const e=t$();this.outputShape=t,this.userCode=`\n      ${r$}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${e.output} = encode_float(x);\n      }\n    `}}class H${constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=iE.DOWNLOAD;const e=t$();this.outputShape=t,this.userCode=`\n      ${r$}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${e.output} = encode_float(x);\n      }\n    `}}class q${constructor(t,e,n=!1){this.variableNames=["A"];const r=t$(),[s,a]=e;this.outputShape=t;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`\n      ${n$(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${a};\n        int c = imod(flatIndex, ${a});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${i}, 0., 0., 0.);\n      }\n    `}}class K${constructor(t,e,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=t$(),[s,a]=e;this.outputShape=t;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let e=0;e<=1;e++)for(let n=0;n<=1;n++){const o=2*e+n;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${t[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${e} < ${t[1]}) {\n              localCoords[1] += ${e};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${a};\n              c = imod(flatIndex, ${a});\n              uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${o}] = values[0];\n              } else if(offset == 1) {\n                result[${o}] = values[1];\n              } else if(offset == 2) {\n                result[${o}] = values[2];\n              } else {\n                result[${o}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${n$(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${i}\n\n        ${r.output} = ${o};\n      }\n    `}}class X${constructor(t,e){this.outputShape=[],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}class Y${constructor(t,e,n){this.variableNames=["A","indices"];const r=t.slice();r[n]=e,this.outputShape=r,this.rank=r.length;const s=f$(this.rank),a=function(t,e){const n=t.length;if(n>4)throw Error(`Gather for rank ${n} is not yet supported`);if(1===n)return"int(getIndices(resRC))";const r=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let n=0;n<t.length;n++)n===e?s.push(`int(getIndices(${r[n]}))`):s.push(""+r[n]);return s.join()}(t,n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}class J${constructor(t,e,n){this.sliceDim=t,this.strides=e,this.variableNames=["x","indices"],this.outputShape=n;const r=f$(e.length),s=f$(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${a};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}function Z$(t,e,n,r,s,a){!function(t,e){const n=Bt().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0)throw new Error(`Requested texture size [${t}x${e}] is invalid.`);if(t>n||e>n)throw new Error(`Requested texture size [${t}x${e}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(e,n);const i=function(t){return kE(t,(()=>t.createTexture()),"Unable to create WebGLTexture.")}(t),o=t.TEXTURE_2D;return pE(t,(()=>t.bindTexture(o,i))),pE(t,(()=>t.texParameteri(o,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE))),pE(t,(()=>t.texParameteri(o,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE))),pE(t,(()=>t.texParameteri(o,t.TEXTURE_MIN_FILTER,t.NEAREST))),pE(t,(()=>t.texParameteri(o,t.TEXTURE_MAG_FILTER,t.NEAREST))),pE(t,(()=>t.texImage2D(o,0,r,e,n,0,s,a,null))),pE(t,(()=>t.bindTexture(t.TEXTURE_2D,null))),i}function Q$(t){return t.internalFormatFloat}function tA(t){return t.internalFormatHalfFloat}function eA(t){return t.downloadTextureFormat}function nA(t){return t.internalFormatPackedFloat}function rA(t){return t.internalFormatPackedHalfFloat}class sA{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=Bt().getNumber("WEBGL_VERSION");null!=t?(this.gl=t,function(t,e){nE[t]=e}(e,t)):this.gl=sE(e);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===Bt().getNumber("WEBGL_VERSION")){const t="OES_texture_float",e="OES_texture_half_float";if(this.textureFloatExtension=fE(this.gl,t),AE(this.gl,e))this.textureHalfFloatExtension=fE(this.gl,e);else if(Bt().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),AE(this.gl,r))this.colorBufferHalfFloatExtension=fE(this.gl,r);else if(Bt().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",AE(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!AE(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(t){return function(t,e){const n=kE(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return pE(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),pE(t,(()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(t){return function(t,e){const n=kE(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return pE(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n))),pE(t,(()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(t){return kE(t,(()=>t.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=hE(this.gl,this.textureHalfFloatExtension)}get debug(){return Bt().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;pE(t,(()=>t.finish())),pE(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,null))),pE(t,(()=>t.deleteFramebuffer(this.framebuffer))),pE(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,null))),pE(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null))),pE(t,(()=>t.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,a]=uE(e,n);return Z$(t,s,a,Q$(r),r.textureFormatFloat,t.FLOAT)}(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,a]=uE(e,n);return Z$(t,s,a,tA(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,a]=uE(e,n);return Z$(t,s,a,eA(r),t.RGBA,t.UNSIGNED_BYTE)}(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function(t,e,n){pE(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),n.data instanceof Uint8Array?pE(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data))):pE(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n))),pE(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,r){this.throwIfDisposed(),function(t,e,n,r,s,a){let i,o,u;pE(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),s instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=t.UNSIGNED_BYTE,u=t.RGBA):(i=new Float32Array(n*r*4),o=t.FLOAT,u=a.internalFormatPackedFloat),i.set(s),pE(t,(()=>t.texImage2D(t.TEXTURE_2D,0,u,n,r,0,t.RGBA,o,i))),pE(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,a]=cE(e,n);return Z$(t,s,a,rA(r),t.RGBA,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,a]=cE(e,n);return Z$(t,s,a,nA(r),t.RGBA,t.FLOAT)}(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(vE(this.gl,this.framebuffer),this.outputTexture=null),pE(this.gl,(()=>this.gl.deleteTexture(t)))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n,r){const[s,a]=uE(e,n),i=new Uint8Array(e*n*4);return pE(t,(()=>t.readPixels(0,0,s,a,r.downloadTextureFormat,t.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,e,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(t,e,n,r,s,a){return function(t,e,n,r,s,a,i,o){const u=t,l=new Float32Array(function(t,e){const[n,r]=cE(t,e);return n*r*4}(a,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,e),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}(this.gl,t,0,0,0,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return function(t,e,n){const r=t,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const r=function(t,e,n,r){const s=t.createBuffer();pE(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,s)));const a=16*e*n;return pE(t,(()=>t.bufferData(t.PIXEL_PACK_BUFFER,a,t.STREAM_READ))),pE(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0))),pE(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null))),s}(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(Bt().getBool("WEBGL_FENCE_API_ENABLED")){const r=t,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=r.clientWaitSync(s,0,0);return t===r.ALREADY_SIGNALED||t===r.CONDITION_SATISFIED},e=s}else Bt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,Bt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n){const r=new Float32Array(e*n*4);return pE(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,r))),r}(this.gl,e,n)))}createProgram(t){this.throwIfDisposed();const e=this.gl,n=function(t,e){const n=kE(t,(()=>t.createShader(t.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(pE(t,(()=>t.shaderSource(n,e))),pE(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw function(t,e){const n=mE.exec(e);if(null==n)return console.log("Couldn't parse line number in error: "+e),void console.log(t);const r=+n[1],s=t.split("\n"),a=s.length.toString().length+2,i=s.map(((t,e)=>lt((e+1).toString(),a)+t));let o=0;for(let t=0;t<i.length;t++)o=Math.max(i[t].length,o);const u=i.slice(0,r-1),l=i.slice(r-1,r),c=i.slice(r);console.log(u.join("\n")),console.log(e.split("\n")[0]),console.log("%c "+lt(l[0],o),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e,t),r=function(t){const e=t$();return function(t,e){const n=kE(t,(()=>t.createShader(t.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(pE(t,(()=>t.shaderSource(n,e))),pE(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(t,`${e.version}\n    precision highp float;\n    ${e.attribute} vec3 clipSpacePos;\n    ${e.attribute} vec2 uv;\n    ${e.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(e),s=function(t){return kE(t,(()=>t.createProgram()),"Unable to create WebGLProgram.")}(e);return pE(e,(()=>e.attachShader(s,r))),pE(e,(()=>e.attachShader(s,n))),function(t,e){if(pE(t,(()=>t.linkProgram(e))),!1===t.getProgramParameter(e,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}(e,s),this.debug&&gE(e,s),this.vertexAttrsAreBound||(this.setProgram(s),this.vertexAttrsAreBound=function(t,e,n){return pE(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),yE(t,e,"clipSpacePos",n,3,20,0)&&yE(t,e,"uv",n,2,20,12)}(e,this.program,this.vertexBuffer)),s}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&pE(this.gl,(()=>this.gl.deleteProgram(t)))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&gE(this.gl,this.program),pE(this.gl,(()=>this.gl.useProgram(t)))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?function(t,e,n){return kE(t,(()=>t.getUniformLocation(e,n)),'uniform "'+n+'" not present in program.')}(this.gl,t,e):function(t,e,n){return t.getUniformLocation(e,n)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),pE(this.gl,(()=>this.gl.getAttribLocation(t,e)))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),bE(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[r,s]=cE(e,n);this.setOutputMatrixTextureDriver(t,r,s)}setOutputMatrixWriteRegion(t,e,n,r){this.setOutputMatrixWriteRegionDriver(n,t,r,e)}setOutputPackedMatrixWriteRegion(t,e,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&gE(this.gl,this.program),wE(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),pE(t,(()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),pE(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=fE(this.gl,2===Bt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Bt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===Bt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await ct((()=>this.disposed||this.isQueryAvailable(t,Bt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(t,Bt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl;return e.getQueryParameter(t,e.QUERY_RESULT)/1e6}{const e=this.getQueryTimerExtensionWebGL1();return e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise((e=>{this.addItemToPoll((()=>t.isFencePassed()),(()=>e()))}))}pollItems(){const t=function(t){let e=0;for(;e<t.length&&t[e]();++e);return e-1}(this.itemsToPoll.map((t=>t.isDoneFn)));for(let e=0;e<=t;++e){const{resolveFn:t}=this.itemsToPoll[e];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1||ct((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(t){this.throwIfDisposed(),xE(this.gl,t,this.framebuffer),this.debug&&wE(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(xE(this.gl,this.outputTexture,this.framebuffer),this.debug&&wE(this.gl)):vE(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const r=this.gl;xE(r,t,this.framebuffer),this.debug&&wE(r),this.outputTexture=t,pE(r,(()=>r.viewport(0,0,e,n))),pE(r,(()=>r.scissor(0,0,e,n)))}setOutputMatrixWriteRegionDriver(t,e,n,r){this.throwIfDisposed(),pE(this.gl,(()=>this.gl.scissor(t,e,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}function aA(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach(((t,n)=>{const r=t.logicalShape,s=e[n],a=s.shape;if(!st(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(t.isUniform&&s.isUniform)return;const i=t.texShape,o=s.isUniform?null:s.texData.texShape;if(!st(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}class iA{constructor(t,e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;const{filterWidth:r,inChannels:s,strideWidth:a,strideHeight:i,padInfo:o,outWidth:u,dilationWidth:l,dilationHeight:c,dataFormat:h}=n,{left:p,top:d}=o,f=s*r,m=t$(),g="channelsLast"===h,y=g?0:1,b=g?1:2;let x="";for(let n=0;n<=1;n++)for(let r=0;r<=1;r++)x+=`\n          blockIndex = rc.y + ${r};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${t[1]} && pos < ${t[0]}) {\n            offsetY = int(blockIndex / (${u})) * ${i} - ${d};\n            d0 = offsetY + ${c} * (pos / ${f});\n\n            if(d0 < ${e[y]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${u}.) * ${a}. - ${p}.);\n              d1 = offsetX + ${l} * (int(mod(float(pos), ${f}.) / ${s}.));\n\n              if(d1 < ${e[b]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${s}.));\n\n                if (${g}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+r}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+r}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${m.output} = result;\n      }\n    `}}class oA{constructor(t,e,n,r,s){this.variableNames=["x"],this.outputShape=[];const a=e,i=t[3]-1;let o;this.outputShape=t;const u=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class uA{constructor(t,e,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${e})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${e} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}class lA{constructor(t,e,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=e,i=t[3]-1;let o;this.outputShape=t;const u=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}class cA{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,r=t.dilationHeight,s=t.effectiveFilterHeight,a=t.effectiveFilterWidth,i=s-1-t.padInfo.top,o=a-1-t.padInfo.left,u=s*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${e}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class hA{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,s=t.dilationDepth,a=t.dilationHeight,i=t.dilationWidth,o=t.effectiveFilterDepth,u=t.effectiveFilterHeight,l=t.effectiveFilterWidth,c=o-1-t.padInfo.front,h=u-1-t.padInfo.top,p=l-1-t.padInfo.left,d=o*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${e}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${d} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class pA{constructor(t,e,n,r=!1,s=!1,a=!1,i=null,o=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const u=r?t[1]:t[2],l=Math.ceil(u/2),c=r?"i * 2, rc.y":"rc.y, i * 2",h=s?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],d=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let f="",m="";i&&(f=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,m="result = activation(result);");const g=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights");let y="rc.x",b="rc.x";t[0]<e[0]?y=`int(min(float(rc.x), ${t[0]-1}.))`:e[0]<t[0]&&(b=`int(min(float(rc.x), ${e[0]-1}.))`),this.userCode=`\n      ${f}\n\n      const float sharedDimension = ${l}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${l}; i++) {\n          int batchA = ${y};\n          int batchB = ${b};\n          vec4 a = getMatrixA(batchA, ${c});\n          vec4 b = getMatrixB(batchB, ${h});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${d[0]});\n          result += (${p[1]} * ${d[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${g}\n\n        ${m}\n\n        setOutput(result);\n      }\n    `}}class dA{constructor(t,e,n){this.variableNames=["probs"],this.outputShape=[t,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${e-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${e-1}));\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.seedLoc&&(this.seedLoc=e.getUniformLocation(n,"seed")),e.gl.uniform1f(this.seedLoc,t)}}}class fA{constructor(t,e,n,r){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}class mA{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t;const e=t.length;if(0===e)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=QE("rc",e),r=f$(e),s=function(t,e,n){if(1===t)return"rc > "+e[0];let r="";for(let s=t-2;s<t;s++)r+=`${n[s]} >= ${e[s]}`,s<t-1&&(r+="||");return r}(e,t,n),a=function(t,e,n,r){if(1===t)return"";const s=r.slice(-2);return`\n    int r = ${s[0]};\n    int c = ${s[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${e};\n    bool rEdge = rp1 >= ${n};\n  `}(e,t[t.length-1],t[t.length-2],n),i=function(t,e){const n=t.length,r=function(t,e){const n=[];for(let r=0;r<=1;r++)for(let s=0;s<=1;s++){let a=`${0===r?"r":"rp1"}, ${0===s?"c":"cp1"}`;for(let n=2;n<t;n++)a=e[e.length-1-n]+","+a;n.push(a)}return n}(n,e);return 1===n?`getA(rc),\n            rc + 1 >= ${t[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(t,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${s}) {\n            setOutput(vec4(0));\n          } else {\n            ${a}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}class gA{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=f$(r),a=e.map((t=>t[0])).join(","),i=e.map(((e,n)=>e[0]+t[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(${n}));\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(${n}));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class yA{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=f$(r),a=e.map((t=>t[0])).join(","),i=e.map(((e,n)=>e[0]+t[n])).join(","),o=QE("rc",r),u=QE("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h=[s+" rc = outputLoc;",`${o[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${l}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let d="";for(let t=0,e=1===r?2:4;t<e;t++)d+=`\n        ${h[t]}\n        if (${p}) {\n          result[${t}] = float(${n});\n        } else {\n          ${s} source = rc - start;\n          result[${t}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;d+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}class bA{constructor(t,e,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const a=t.filterWidth,i=t.strideHeight,o=t.strideWidth,u=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.top,d=t.padInfo.left;this.outputShape=t.outShape;const f="avg"===e,m=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,g=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${p}, ${d});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${e} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(b="avgValue / count");const x=4*Math.floor(a/4),v=a%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${p}, ${d});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class xA{constructor(t,e,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const a=t.filterWidth,i=t.strideDepth,o=t.strideHeight,u=t.strideWidth,l=t.dilationDepth,c=t.dilationHeight,h=t.dilationWidth,p=t.effectiveFilterDepth,d=t.effectiveFilterHeight,f=t.effectiveFilterWidth,m=t.padInfo.front,g=t.padInfo.top,y=t.padInfo.left;this.outputShape=t.outShape;const b="avg"===e;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${d};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${e} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${d} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(v="avgValue / count");const w=4*Math.floor(a/4),k=a%4,N=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${N}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${N}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${N}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${N}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}}class vA{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=t;this.outputShape=[r,a];let i="0.0",o="";"prod"===e?i="1.0":"min"===e?(i="1.0 / 1e-20",o="min"):"max"===e&&(i="-1.0 / 1e-20",o="max");let u=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===e?u="sumValue":"prod"===e?u="prodValue":"all"===e?u="allValue":"any"===e&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===e}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===e}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n      }\n    `,p="vec4";"all"===e?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===e&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let d="";s%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${u});\n      }\n    `}}class wA{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;let n="";for(let t=0;t<4;t++){let e="thisRC = rc;";t%2==1&&(e+="thisRC.z += 1;"),t>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${t>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${t}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${t>0?"}":""}\n      `}var r;this.userCode=`\n      ${r=e,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${e$(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${n$(t)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${t[1]};\n        int cols = ${t[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class kA{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;const[,r,s]=e.shape,[,a,i]=t.shape,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}class NA{constructor(t,e,n,r){this.variableNames=["A"],this.outputShape=[];const[s,a,i,o]=t;this.outputShape=[s,e,n,o];const u=[r&&e>1?a-1:a,r&&n>1?i-1:i],l=[r&&e>1?e-1:e,r&&n>1?n-1:n];this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/l[0]},\n          ${u[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class IA{constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,a,i,o]=t;this.outputShape=[s,e,n,o];const u=[r&&e>1?a-1:a,r&&n>1?i-1:i],l=[r&&e>1?e-1:e,r&&n>1?n-1:n];this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/l[0]},\n          ${u[1]/l[1]},\n          ${u[1]/l[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = vec3(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(sourceFracIndexRC);\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${o-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}class SA{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;const[,r,s]=e.shape,[,a,i]=t.shape,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}class CA{constructor(t,e,n,r){this.variableNames=["A"],this.outputShape=[];const[s,a,i,o]=t;this.outputShape=[s,e,n,o];const u=[r&&e>1?a-1:a,r&&n>1?i-1:i],l=[r&&e>1?e-1:e,r&&n>1?n-1:n],c=r?"0.5":"0.0";this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/l[0]},\n          ${u[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));\n\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class TA{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${t[0]} - coord - 1));\n        }\n      `);const r=t.map(((n,r)=>(n=>-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),s=f$(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class EA{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;const r=QE("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=f$(n);function o(n){const r=t.map(((r,s)=>function(n,r){return-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - ${r[n]} - 1`:""+r[n]}(s,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${t[0]} - rc - 1),\n            ${t[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),\n                ${t[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(t){return o(t)}(r.slice())};\n          if(${s}){\n            result.g = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",o(t)}(r.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(t){return t[n-2]="("+t[n-2]+" + 1)",o(t)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",t[n-2]="("+t[n-2]+" + 1)",o(t)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}class $A{constructor(t,e,n,r,s,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const o=f$(s.length),u=f$(a.length);let l="";1===n?l="i":2===n&&(l="i, j");const c=`getIndices(${l})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const p=`getUpdates(${h})`,d=e>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${s});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${t}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${e}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${d};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}class AA{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,r=t.batchSize,s=t.inSize,a=t.numSegments,i=a*Math.ceil(s/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class RA{constructor(t,e,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let r=0;r<e.length;r++)i.push(""+n[r]),r<t&&a.push(""+n[r]);r=a.join(),s=i.join()}const a=f$(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}class _A{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=f$(this.rank),n=`uniform int start[${this.rank}];`,r=function(t){if(1===t)return"sourceLoc";if(t<=6)return DA.slice(0,t).map((t=>"sourceLoc."+t)).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}(this.rank);let s;s=`\n        ${e} sourceLoc;\n        ${e} coords = getOutputCoords();\n        ${t.map(((t,e)=>`sourceLoc.${DA[e]} = start[${e}] + coords.${DA[e]};`)).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${s}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}const DA=["x","y","z","w","u","v"];class FA{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length;const e=f$(this.rank),n=QE("coords",this.rank),r=QE("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${a};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${e}(${t.map(((t,e)=>`start[${e}]`)).join()});`:t.map(((t,e)=>`${r[e]} = ${n[e]} + start[${e}];`)).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${e} coords = getOutputCoords();\n        ${e} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}class OA{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=f$(n.length),a=f$(n.length);let i="";if(1===r)i="coords * strides + begin";else{let t=0;i=n.map(((e,r)=>(t++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${t-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${t});\n      ${s} strides = ${s}(${e});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}class MA{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const r=zA(e,n),s=BA(t,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const a=LA(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const t=this.freeTextures[s].shift();return this.usedTextures[s].push(t),t}let i;return r===oE.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):r===oE.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):r===oE.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):r===oE.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):r===oE.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(t,e,n,r){if(null==this.freeTextures)return;const s=zA(n,r),a=BA(e,s,r);a in this.freeTextures||(this.freeTextures[a]=[]);const i=LA(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=Bt().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(t),this._numBytesAllocated-=i):(this.freeTextures[a].push(t),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[a],l=u.indexOf(t);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(l,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: "+this._numBytesAllocated),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t)}));for(const t in this.usedTextures)this.usedTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function LA(t,e,n,r,s){const a=function(t,e){switch(t){case oE.PACKED_2X2_FLOAT32:return nA(e);case oE.PACKED_2X2_FLOAT16:return rA(e);case oE.UNPACKED_FLOAT32:return Q$(e);case oE.UNPACKED_FLOAT16:return tA(e);case oE.PACKED_4X1_UNSIGNED_BYTE:return eA(e);default:throw new Error("Unknown physical texture type "+t)}}(e,r);let i;if(s){const[e,n]=cE(t[0],t[1]);i=e*n}else{const[e,n]=uE(t[0],t[1]);i=e*n}return i*function(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;throw new Error("Unknown internal format "+e)}(n,a)}function zA(t,e){if(t===iE.UPLOAD)return oE.PACKED_2X2_FLOAT32;if(t===iE.RENDER||null==t)return function(t){return Bt().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?oE.PACKED_2X2_FLOAT32:oE.UNPACKED_FLOAT32:t?oE.PACKED_2X2_FLOAT16:oE.UNPACKED_FLOAT16}(e);if(t===iE.DOWNLOAD||t===iE.PIXELS)return oE.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type "+t)}function BA(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}class PA{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[r]*e[r];this.outputShape=n,this.rank=n.length;const r=f$(this.rank),s=function(t){const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let e=0;e<t.length;e++)r.push(`imod(${n[e]}, ${t[e]})`);return r.join()}(t);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}class WA{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.userCode=`\n      float unaryOperation(float x) {\n        ${e}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const VA="return abs(x);",UA="if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",GA="if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",jA="return (x >= 0.0) ? x : (exp(x) - 1.0);",HA=`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Xp};\n  float scale = ${Yp};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`,qA="return -x;",KA="return ceil(x);",XA="return floor(x);",YA="return exp(x);",JA="return exp(x) - 1.0;",ZA=`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Jp};\n  float a1 = ${Zp};\n  float a2 = ${Qp};\n  float a3 = ${td};\n  float a4 = ${ed};\n  float a5 = ${nd};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`,QA="return x;",tR="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",eR="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",nR="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n";class rR{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${e}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class sR{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t;const e=t.length,n=QE("rc",e),r=f$(e),s=function(t,e){if(1===t)return"rc";let n="";for(let r=0;r<t;r++)n+=e[r],r<t-1&&(n+=",");return n}(e,n),a=n.slice(-2),i=e<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const{segment_util:aR}=g,iR=gd,oR=yd,uR=bd,lR=fh,cR={};function hR(t,e=!1){if("linear"===t)return"return x;";if("relu"===t)return e?tR:UA;if("elu"===t)return e?nR:jA;if("relu6"===t)return e?eR:GA;if("prelu"===t)return e?k$:v$;throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}class pR extends G{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!Bt().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==t){const t=sE(Bt().getNumber("WEBGL_VERSION"));this.binaryCache=((e=Bt().getNumber("WEBGL_VERSION"))in cR||(cR[e]={}),cR[e]),this.gpgpu=new sA(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=t,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=t.gl.canvas;var e;this.textureManager=new MA(this.gpgpu),this.numMBBeforeWarning=null==Bt().global.screen?1024:Bt().global.screen.height*Bt().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new U(this,Hi())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(t,e,n){if((Bt().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Bt().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={};return this.texData.set(r,{shape:e,dtype:n,values:t,usage:iE.UPLOAD,refCount:1,complexParentRefCount:0}),r}incRef(t){this.texData.get(t).refCount++}decRef(t){this.texData.has(t)&&this.texData.get(t).refCount--}move(t,e,n,r){if(Bt().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:r,values:e,usage:iE.UPLOAD,refCount:1,complexParentRefCount:0})}disposeIntermediateTensorInfo(t){const e=t.dataId;if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--,t.refCount<1&&this.disposeData(e)}}readSync(t){const e=this.texData.get(t),{values:n,dtype:r,complexTensorInfos:s,slice:a,shape:i,isPacked:o}=e;if(null!=a){let e;e=o?new rR(i,QA):new WA(i,QA);const n=this.runWebGLProgram(e,[{dataId:t,shape:i,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===r)return n;const u=null!=this.activeTimers;let l,c;return u&&(l=ts()),c="complex64"===r?ad(this.readSync(s.real.dataId),this.readSync(s.imag.dataId)):this.getValuesFromTexture(t),u&&(this.downloadWaitMs+=ts()-l),this.convertAndCacheOnCPU(t,c)}async read(t){if(this.pendingRead.has(t)){const e=this.pendingRead.get(t);return new Promise((t=>e.push(t)))}const e=this.texData.get(t),{values:n,shape:r,slice:s,dtype:a,complexTensorInfos:i,isPacked:o}=e;if(null!=s){let e;e=o?new rR(r,QA):new WA(r,QA);const n=this.runWebGLProgram(e,[{dataId:t,shape:r,dtype:a}],a),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(t);if(!Bt().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Bt().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,c=null;if("complex64"!==a&&Bt().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(t);const e=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(e.texture,...lE(r))}if(this.pendingRead.set(t,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const t=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);l=ad(t[0],t[1])}else if(null==c)l=this.getValuesFromTexture(t);else{const t=nt(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(c,t)}null!=u&&this.disposeIntermediateTensorInfo(u);const h=this.convertAndCacheOnCPU(t,l),p=this.pendingRead.get(t);return this.pendingRead.delete(t),p.forEach((t=>t(h))),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t),this.pendingDeletes--),h}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const n=t[e];if(!dE(n)){if(Bt().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:r}=this.texData.get(t),s=nt(e);if(Bt().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...lE(e)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),a}const a=Bt().getBool("WEBGL_PACK")&&!0===r,i=a?SE(e):e,o=a?new H$(i):new j$(i),u=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:t}],"float32"),l=this.texData.get(u.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture,l.texShape[0],l.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(u),c}async time(t){const e=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,t();const s=et(this.activeTimers.map((t=>t.query))).filter((t=>null!=t)),a=et(this.activeTimers.map((t=>t.name))).filter((t=>null!=t));this.activeTimers=e,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Bt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=await Promise.all(s);i.kernelMs=X(t),i.getExtraProfileInfo=()=>t.map(((t,e)=>({name:a[e],ms:t}))).map((t=>`${t.name}: ${t.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Bt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:ts(),endMs:null}}endTimer(t){return Bt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=ts(),t)}async getQueryTime(t){if(Bt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t){if(this.pendingDisposal.has(t))return;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),void this.pendingDeletes++;if(!this.texData.has(t))return;if(this.texData.get(t).complexParentRefCount>0)return void this.texData.get(t).refCount--;this.releaseGPUData(t);const{complexTensorInfos:e}=this.texData.get(t);null!=e&&(this.texData.get(e.real.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(e.real),this.texData.get(e.imag.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(e.imag)),this.texData.delete(t)}releaseGPUData(t){const{texture:e,dtype:n,texShape:r,usage:s,isPacked:a,slice:i}=this.texData.get(t),o=i&&i.origDataId||t,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=e&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(e,r,s,a)));const l=this.texData.get(t);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture}getDataInfo(t){return this.texData.get(t)}getCPUBackend(){return Bt().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=Hi().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(t,e=128){const n=this.getCPUBackend();return this.warnedAboutCPUBackend||null!=n||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&t.every((t=>null==this.texData.get(t.dataId).texture&&nt(t.shape)<e))}getGPGPUContext(){return this.gpgpu}slice(t,e,n){if(this.shouldExecuteOnCPU([t])){const r=jE(this.texData.get(t.dataId).values,e,n,t.shape,t.dtype);return this.makeOutput(n,t.dtype,r)}if(0===nt(n))return Ps([],n,t.dtype);const{isPacked:r}=this.texData.get(t.dataId),s=Ii(t.shape,e,n);if(r||!s){const r=Bt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new FA(n):new _A(n),s=r.getCustomSetupFunc(e);return this.compileAndRun(r,[t],null,s)}return this.uploadToGPU(t.dataId),this.shallowSlice(t,e,n)}shallowSlice(t,e,n){const r=this.texData.get(t.dataId),s=this.makeOutput(n,t.dtype),a=this.texData.get(s.dataId);Object.assign(a,r),a.shape=n,a.dtype=t.dtype;let i=Si(e,t.strides);r.slice&&(i+=r.slice.flatOffset),a.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||t.dataId};const o=this.dataRefCount.get(a.slice.origDataId)||1;return this.dataRefCount.set(a.slice.origDataId,o+1),s}stridedSlice(t,e,n,r){const s=this.tryRunOnCpuOrThrow([t],(()=>this.cpuBackend.stridedSlice(t,e,n,r)));if(s)return s;const a=fi(e,n,r);if(a.some((t=>0===t)))return Ps([],a);const i=new OA(e,r,a);return this.compileAndRun(i,[t])}reverse(t,e){const n=Bt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new EA(t.shape,e):new TA(t.shape,e);return this.compileAndRun(n,[t])}neg(t){const e=this.tryRunOnCpuOrThrow([t],(()=>this.cpuBackend.neg(t)));if(e)return e;if(Bt().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,qA,t.dtype);const n=new WA(t.shape,qA);return this.compileAndRun(n,[t])}batchMatMul(t,e,n,r){const s=n?t.shape[2]:t.shape[1],a=r?e.shape[1]:e.shape[2],i=n?t.shape[1]:t.shape[2],o=Math.max(t.shape[0],e.shape[0]);if((1===s||1===a)&&i>1e3){n&&(t=ni(t,[0,2,1])),r&&(e=ni(e,[0,2,1]));const s=1===a?t:t.as3D(o,i,1),u=1===a?2:1,l=1===a?e.as3D(o,1,i):e;return ho(s,l).sum(u,!0)}const u=gs(t.dtype,e.dtype),l=new pA(t.shape,e.shape,[o,s,a],n,r);return this.compileAndRun(l,[t,e],u)}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:r,bias:s,activation:a,preluActivationWeights:i}){const o=n?t.shape[2]:t.shape[1],u=r?e.shape[1]:e.shape[2],l=Math.max(t.shape[0],e.shape[0]),c=gs(t.dtype,e.dtype),h=null!=s,p=null!=i,d=a?hR(a,!0):null,f=new pA(t.shape,e.shape,[l,o,u],n,r,h,d,p),m=[t,e];return s&&m.push(s),i&&m.push(i),this.compileAndRun(f,m,c)}localResponseNormalization4D(t,e,n,r,s){const a=Bt().getBool("WEBGL_PACK_NORMALIZATION")?new lA(t.shape,e,n,r,s):new oA(t.shape,e,n,r,s);return this.compileAndRun(a,[t])}LRNGrad(t,e,n,r,s,a,i){const o=new uA(e.shape,r,s,a,i);return this.compileAndRun(o,[e,n,t])}tile(t,e){if("string"===t.dtype){const n=this.readSync(t.dataId).map((t=>rs(t))),r=_a(t.shape,t.dtype,n);return oR(r,e)}const n=new PA(t.shape,e);return this.compileAndRun(n,[t])}pad(t,e,n){const r=Bt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new yA(t.shape,e,n):new gA(t.shape,e,n);return this.compileAndRun(r,[t])}gather(t,e,n){const r=this.tryRunOnCpuOrThrow([t,e],(()=>this.cpuBackend.gather(t,e,n)));if(r)return r;const s=new Y$(t.shape,e.size,n);return this.compileAndRun(s,[t,e])}batchToSpaceND(t,e,n){Z(t.rank<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const r=e.reduce(((t,e)=>t*e)),s=Gp(t.shape,e,r),a=jp(s.length,e.length),i=Hp(t.shape,e,r),o=qp(n,e.length),u=Kp(i,n,e.length);return ni(t.reshape(s),a).reshape(i).slice(o,u)}spaceToBatchND(t,e,n){Z(t.rank<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const r=e.reduce(((t,e)=>t*e)),s=[[0,0]];s.push(...n);for(let n=1+e.length;n<t.shape.length;++n)s.push([0,0]);const a=t.pad(s),i=Gp(a.shape,e,r,!1),o=jp(i.length,e.length,!1),u=Hp(a.shape,e,r,!1),l=ni(a.reshape(i),o);return Qa(l,u)}reduce(t,e,n){const r=t.shape[0],s=t.shape[1],a=fl(s),i=Math.ceil(s/a),o=new vA({windowSize:a,inSize:s,batchSize:r,outSize:i},e),u=this.compileAndRun(o,[t],n);return 1===u.shape[1]?u:this.reduce(u,e,n)}argReduce(t,e,n=null){let r=t.shape[0],s=t.shape[1];null!=n&&(r=n.shape[0],s=n.shape[1]);const a=fl(s),i={windowSize:a,inSize:s,batchSize:r,outSize:Math.ceil(s/a)},o=new JE(i,e,null==n),u=[t];null!=n&&u.push(n);const l=this.compileAndRun(o,u,"int32");return 1===l.shape[1]?l:this.argReduce(t,e,l)}argReducePacked(t,e,n=null){const r=null!=n?n.shape:t.shape,s=fl(r[r.length-1]),a=new y$(r,s,e,null==n),i=null==n?[t]:[t,n],o=this.compileAndRun(a,i,"int32");return o.rank===t.rank?this.argReducePacked(t,e,o):o}sum(t,e){qo("sum",e,t.rank);const[n,r]=jo(t.shape,e),s=nt(r),a=t.as2D(-1,s),i=ys(t.dtype);return this.reduce(a,"sum",i).reshape(n)}prod(t,e){const n=this.tryRunOnCpuOrThrow([t],(()=>this.cpuBackend.prod(t,e)));if(n)return n;const[r,s]=jo(t.shape,e),a=nt(s),i=t.as2D(-1,a),o=ys(t.dtype);return this.reduce(i,"prod",o).reshape(r)}unsortedSegmentSum(t,e,n){let r=0;const s=Ko([r],t.rank);let a=t;null!=s&&(a=ni(t,s),r=Yo(1,t.rank)[0]);const i=aR.computeOutShape(a.shape,r,n),o=nt([a.shape[r]]),u=a.as2D(-1,o),l=ys(t.dtype);let c=this.segOpCompute(u,"unsortedSegmentSum",e,l,n).reshape(i);return null!=s&&(c=ni(c,Xo(s))),c}segOpCompute(t,e,n,r,s){const a=t.shape[0],i=t.shape[1],o=aR.segOpComputeOptimalWindowSize(i,s),u=new AA({windowSize:o,inSize:i,batchSize:a,numSegments:s},e),l=this.compileAndRun(u,[t,n],r);return l.shape[1]===s?l:(n=Ic(0,s).tile([i/o]),this.segOpCompute(l,e,n,r,s))}argMinMaxReduce(t,e,n){const r=[e];if(qo("arg"+n.charAt(0).toUpperCase()+n.slice(1),r,t.rank),!Bt().getBool("WEBGL_PACK_REDUCE")||t.rank<=2){const[e,s]=jo(t.shape,r),a=nt(s),i=t.as2D(-1,a);return this.argReduce(i,n).reshape(e)}return this.argReducePacked(t,n)}argMin(t,e){return this.argMinMaxReduce(t,e,"min")}argMax(t,e){return this.argMinMaxReduce(t,e,"max")}cumsum(t,e,n,r){if(e!==t.rank-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${t.rank-1} but got axis=`+e);const s=t.shape[e];let a=t;for(let e=0;e<=Math.ceil(Math.log2(s))-1;e++){const n=new z$(t.shape,!1,r),s=n.getCustomSetupFunc(e),i=a;a=this.compileAndRun(n,[a],a.dtype,s),i.dispose()}if(n){const e=new z$(t.shape,n,r),s=a;a=this.compileAndRun(e,[a]),s.dispose()}return a}equal(t,e){if(Bt().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(equal(a, b));\n","bool");const n=new w$("return float(a == b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}less(t,e){const n=this.tryRunOnCpuOrThrow([t,e],(()=>this.cpuBackend.less(t,e)));if(n)return n;if(Bt().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(lessThan(a, b));\n","bool");const r=new w$("return float(a < b);",t.shape,e.shape);return this.compileAndRun(r,[t,e],"bool")}lessEqual(t,e){if(Bt().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(lessThanEqual(a, b));\n","bool");const n=new w$("return float(a <= b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}greater(t,e){const n=this.tryRunOnCpuOrThrow([t,e],(()=>this.cpuBackend.greater(t,e)));if(n)return n;if(Bt().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(greaterThan(a, b));\n","bool");const r=new w$("return float(a > b);",t.shape,e.shape);return this.compileAndRun(r,[t,e],"bool")}greaterEqual(t,e){if(Bt().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(greaterThanEqual(a, b));\n","bool");const n=new w$("return float(a >= b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}logicalNot(t){const e=new WA(t.shape,"return float(!(x >= 1.0));");return this.compileAndRun(e,[t])}logicalAnd(t,e){if(Bt().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n","bool");const n=new w$("return float(a >= 1.0 && b >= 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}logicalOr(t,e){if(Bt().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n","bool");const n=new w$("return float(a >= 1.0 || b >= 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}select(t,e,n){const r=new RA(t.rank,e.shape,e.rank);return this.compileAndRun(r,[t,e,n],gs(e.dtype,n.dtype))}where(t){rd("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return lR(t.shape,e)}topk(t,e,n){const r=t.dataSync();return uR(r,t.shape,t.dtype,e,n)}min(t,e){qo("min",e,t.rank);const[n,r]=jo(t.shape,e),s=nt(r),a=t.as2D(-1,s);return this.reduce(a,"min",a.dtype).reshape(n)}minimum(t,e){const n=this.tryRunOnCpuOrThrow([t,e],(()=>this.cpuBackend.minimum(t,e)));if(n)return n;const r=Bt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new N$("\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new w$("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",t.shape,e.shape);return this.compileAndRun(r,[t,e])}mod(t,e){const n=Bt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new N$("\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new w$("if (b == 0.0) return NAN;\n  return mod(a, b);",t.shape,e.shape);return this.compileAndRun(n,[t,e])}maximum(t,e){const n=this.tryRunOnCpuOrThrow([t,e],(()=>this.cpuBackend.maximum(t,e)));if(n)return n;const r=Bt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new N$("\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new w$("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",t.shape,e.shape);return this.compileAndRun(r,[t,e])}all(t,e){qo("all",e,t.rank);const[n,r]=jo(t.shape,e),s=nt(r),a=t.as2D(-1,s);return this.reduce(a,"all",a.dtype).reshape(n)}any(t,e){qo("any",e,t.rank);const[n,r]=jo(t.shape,e),s=nt(r),a=t.as2D(-1,s);return this.reduce(a,"any",a.dtype).reshape(n)}floorDiv(t,e){const n="int32";if(Bt().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",n);const r=new w$("\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",t.shape,e.shape);return this.compileAndRun(r,[t,e],n)}packedUnaryOp(t,e,n){const r=new rR(t.shape,e);return this.compileAndRun(r,[t],n)}packedBinaryOp(t,e,n,r,s=!1){const a=new N$(n,t.shape,e.shape,s);return this.compileAndRun(a,[t,e],r)}makeComplexComponentTensorInfo(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}addN(t){if(1===t.length)return t[0];if(t.length>Bt().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(t.length/2),n=this.addN(t.slice(0,e)),r=this.addN(t.slice(e));return this.addN([n,r])}const e=t.map((t=>t.dtype)).reduce(((t,e)=>gs(t,e))),n=t.map((t=>t.shape)),r=Bt().getBool("WEBGL_PACK")?new YE(t[0].shape,n):new XE(t[0].shape,n);return this.compileAndRun(r,t,e)}pow(t,e){const n=Bt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new N$("\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new w$("\nif(a < 0.0 && floor(b) < b){\n  return NAN;\n}\nif (b == 0.0) {\n  return 1.0;\n}\nreturn (round(mod(b, 2.0)) != 1) ?\n    pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",t.shape,e.shape),r=gs(t.dtype,e.dtype);return this.compileAndRun(n,[t,e],r)}ceil(t){if(this.shouldExecuteOnCPU([t])){const e=LE(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if(Bt().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,KA,t.dtype);const e=new WA(t.shape,KA);return this.compileAndRun(e,[t])}floor(t){if(this.shouldExecuteOnCPU([t])){const e=PE(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if(Bt().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,XA,t.dtype);const e=new WA(t.shape,XA);return this.compileAndRun(e,[t])}sign(t){const e=new WA(t.shape,"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n");return this.compileAndRun(e,[t])}isNaN(t){const e=new WA(t.shape,"return float(isnan(x));");return this.compileAndRun(e,[t],"bool")}isInf(t){const e=new WA(t.shape,"return float(isinf(x));");return this.compileAndRun(e,[t],"bool")}isFinite(t){const e=new WA(t.shape,"return float(!isnan(x) && !isinf(x));");return this.compileAndRun(e,[t],"bool")}round(t){const e=new WA(t.shape,"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n");return this.compileAndRun(e,[t])}exp(t){if(this.shouldExecuteOnCPU([t])){const e=zE(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if(Bt().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,YA,t.dtype);const e=new WA(t.shape,YA);return this.compileAndRun(e,[t])}expm1(t){if(this.shouldExecuteOnCPU([t])){const e=BE(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if(Bt().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,JA,t.dtype);const e=new WA(t.shape,JA);return this.compileAndRun(e,[t])}softmax(t,e){const n=pt([e],t.shape),r=Ol(t,n),s=Ho(r.shape,n),a=$o(t,r.reshape(s)),i=this.exp(a),o=this.sum(i,n).reshape(s);return co(i,o)}log(t){if(this.shouldExecuteOnCPU([t])){const e=WE(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if(Bt().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",t.dtype);const e=new WA(t.shape,"if (x < 0.0) return NAN;\n  return log(x);");return this.compileAndRun(e,[t])}log1p(t){const e=new WA(t.shape,"return log(1.0 + x);");return this.compileAndRun(e,[t])}sqrt(t){const e=new WA(t.shape,"return sqrt(x);");return this.compileAndRun(e,[t])}rsqrt(t){if(this.shouldExecuteOnCPU([t])){const e=GE(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}const e=new WA(t.shape,"return inversesqrt(x);");return this.compileAndRun(e,[t])}reciprocal(t){const e=new WA(t.shape,"return 1.0 / x;");return this.compileAndRun(e,[t])}relu(t){let e;return e=Bt().getBool("WEBGL_PACK")?new rR(t.shape,tR):new WA(t.shape,UA),this.compileAndRun(e,[t])}relu6(t){let e;return e=Bt().getBool("WEBGL_PACK")?new rR(t.shape,eR):new WA(t.shape,GA),this.compileAndRun(e,[t])}prelu(t,e){const n=Bt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new N$(k$,t.shape,e.shape):new w$(v$,t.shape,e.shape);return this.compileAndRun(n,[t,e])}elu(t){if(Bt().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,nR,t.dtype);const e=new WA(t.shape,jA);return this.compileAndRun(e,[t])}eluDer(t,e){const n=Bt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new N$("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",t.shape,e.shape):new w$("return (b >= 1.0) ? a : a * (b + 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e])}selu(t){const e=new WA(t.shape,HA);return this.compileAndRun(e,[t])}clip(t,e,n){let r;r=Bt().getBool("WEBGL_PACK_CLIP")?new S$(t.shape):new I$(t.shape);const s=r.getCustomSetupFunc(e,n);return this.compileAndRun(r,[t],null,s)}abs(t){if(this.shouldExecuteOnCPU([t])&&"complex64"!==t.dtype){const e=OE(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,e)}if(Bt().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,VA,t.dtype);const e=new WA(t.shape,VA);return this.compileAndRun(e,[t])}complexAbs(t){const e=this.texData.get(t.dataId),n=new C$(t.shape),r=[this.makeComplexComponentTensorInfo(t,e.complexTensorInfos.real),this.makeComplexComponentTensorInfo(t,e.complexTensorInfos.imag)];return this.compileAndRun(n,r)}sigmoid(t){const e=new WA(t.shape,"return 1.0 / (1.0 + exp(-1.0 * x));");return this.compileAndRun(e,[t])}softplus(t){const e=new WA(t.shape,"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n");return this.compileAndRun(e,[t])}asin(t){const e=new WA(t.shape,"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n");return this.compileAndRun(e,[t])}acos(t){const e=new WA(t.shape,"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n");return this.compileAndRun(e,[t])}atan(t){const e=new WA(t.shape,"if (isnan(x)) return x;\n  return atan(x);\n");return this.compileAndRun(e,[t])}sinh(t){const e=new WA(t.shape,"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n");return this.compileAndRun(e,[t])}cosh(t){const e=new WA(t.shape,"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n");return this.compileAndRun(e,[t])}tanh(t){const e=new WA(t.shape,"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n");return this.compileAndRun(e,[t])}asinh(t){const e=new WA(t.shape,"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));");return this.compileAndRun(e,[t])}acosh(t){const e=new WA(t.shape,"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\n  return log(x + sqrt(x * x - 1.0));");return this.compileAndRun(e,[t])}atanh(t){const e=new WA(t.shape,"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\n  return (log(1.0 + x) - log(1.0 - x)) / 2.0;");return this.compileAndRun(e,[t])}erf(t){const e=new WA(t.shape,ZA);return this.compileAndRun(e,[t])}step(t,e){const n=new WA(t.shape,function(t=0){return`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t});\n  `}(e));return this.compileAndRun(n,[t])}conv2dByMatMul(t,e,n,r,s,a){const i=t.shape,o=this.texData.get(t.dataId),u=n.inChannels,l=i[0]*i[1]*i[2],c=n.outChannels,h="channelsLast"===n.dataFormat,p=(1===l||1===c)&&u>1e3,d=i[2]%2!=0&&!!o.isPacked;if(p||!Bt().getBool("WEBGL_LAZILY_UNPACK")||!Bt().getBool("WEBGL_PACK_BINARY_OPERATIONS")||!d){const o=h?i[0]*i[1]*i[2]:i[0]*i[2]*i[3],u=Qa(t,[1,o,n.inChannels]),l=Qa(e,[1,n.inChannels,n.outChannels]),c=this.fusedBatchMatMul({a:u,b:l,transposeA:!1,transposeB:!1,bias:r,activation:s,preluActivationWeights:a});return Qa(c,n.outShape)}const f=h?i[0]*i[1]*(i[2]+1):i[0]*i[2]*(i[3]+1),m={dataId:t.dataId,shape:[1,f,n.inChannels],dtype:t.dtype},g=o.shape;o.shape=o.shape.slice(),o.shape[o.shape.length-2]++,Z(TE(o.shape,m.shape),(()=>`packed reshape ${o.shape} to ${m.shape} isn't free`));const y=Qa(e,[1,n.inChannels,n.outChannels]),b=this.fusedBatchMatMul({a:m,b:y,transposeA:!1,transposeB:!1,bias:r,activation:s,preluActivationWeights:a}),x=this.texData.get(b.dataId);return Z(x.isPacked,(()=>"batchMatMul result is expected to be packed")),o.shape=g,x.shape=n.outShape,Hi().makeTensorFromDataId(b.dataId,n.outShape,b.dtype)}conv2dWithIm2Row(t,e,n,r,s,a){const{filterWidth:i,filterHeight:o,inChannels:u,outWidth:l,outHeight:c,dataFormat:h}=n,p="channelsLast"===h,d=i*o*u,f=c*l,m=[d,f],g=t.squeeze([0]),y=e.reshape([1,d,-1]),b=new iA(m,g.shape,n),x=this.compileAndRun(b,[g]).reshape([1,m[0],m[1]]),v=null!=r,w=null!=a,k=s?hR(s,!0):null,N=new pA(x.shape,y.shape,[1,f,n.outChannels],!0,!1,v,k,w),I=[x,y];r&&I.push(r),w&&I.push(a);const S=this.compileAndRun(N,I);return p?S.reshape([1,c,l,n.outChannels]):S.reshape([1,n.outChannels,c,l])}fusedConv2d({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:a}){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(t,e,n,r,s,a);if(Bt().getBool("WEBGL_CONV_IM2COL")&&1===t.shape[0])return this.conv2dWithIm2Row(t,e,n,r,s,a);const i=null!=r,o=null!=a,u=s?hR(s,!1):null,l=new D$(n,i,u,o),c=[t,e];return r&&c.push(r),a&&c.push(a),this.compileAndRun(l,c)}conv2d(t,e,n){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(t,e,n);if(Bt().getBool("WEBGL_CONV_IM2COL")&&1===t.shape[0])return this.conv2dWithIm2Row(t,e,n);const r=new D$(n);return this.compileAndRun(r,[t,e])}conv2dDerInput(t,e,n){const r=new E$(n);return this.compileAndRun(r,[t,e])}conv2dDerFilter(t,e,n){const r=new T$(n);return this.compileAndRun(r,[t,e])}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:a}){const i=Bt().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels==1,o=s?hR(s,i):null,u=[t,e],l=null!=r,c=null!=a;let h;return l&&u.push(r),c&&u.push(a),i?(h=new M$(n,l,o,c),this.compileAndRun(h,u)):(h=new O$(n,l,o,c),this.compileAndRun(h,u))}depthwiseConv2D(t,e,n){let r;return Bt().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels==1?(r=new M$(n),this.compileAndRun(r,[t,e])):(r=new O$(n),this.compileAndRun(r,[t,e]))}depthwiseConv2DDerInput(t,e,n){const r=new _$(n);return this.compileAndRun(r,[t,e])}depthwiseConv2DDerFilter(t,e,n){const r=new R$(n);return this.compileAndRun(r,[t,e])}conv3d(t,e,n){const r=new F$(n);return this.compileAndRun(r,[t,e])}conv3dDerInput(t,e,n){const r=new A$(n);return this.compileAndRun(r,[t,e])}conv3dDerFilter(t,e,n){const r=new $$(n);return this.compileAndRun(r,[t,e])}unstack(t,e){const n=t.shape[e],r=new Array(t.rank-1);let s=0;for(let n=0;n<t.rank;n++)n!==e&&(r[s++]=t.shape[n]);const a=new Array(t.rank).fill(0),i=t.shape.slice();i[e]=1;const o=new Array(n);for(let n=0;n<o.length;n++)a[e]=n,o[n]=this.slice(t,a,i).reshape(r);return o}avgPool3d(t,e){const n=new xA(e,"avg",!1);return this.compileAndRun(n,[t],"float32")}avgPool3dBackprop(t,e,n){const r=new x$(n);return this.compileAndRun(r,[t],e.dtype)}maxPool3d(t,e){const n=new xA(e,"max",!1);return this.compileAndRun(n,[t],"float32")}maxPool3dBackprop(t,e,n,r){const s=new xA(r,"max",!0),a=this.compileAndRun(s,[e]),i=new hA(r),o=this.compileAndRun(i,[t,a],e.dtype);return a.dispose(),o}resizeBilinear(t,e,n,r){const s=Bt().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new IA(t.shape,e,n,r):new NA(t.shape,e,n,r);return this.compileAndRun(s,[t],"float32")}resizeBilinearBackprop(t,e,n){const r=new kA(t,e,n);return this.compileAndRun(r,[t])}resizeNearestNeighbor(t,e,n,r){const s=new CA(t.shape,e,n,r);return this.compileAndRun(s,[t])}resizeNearestNeighborBackprop(t,e,n){const r=new SA(t,e,n);return this.compileAndRun(r,[t])}multinomial(t,e,n,r){const s=e?t:jc(t),a=s.shape[0],i=s.shape[1],o=new dA(a,i,n),u=o.getCustomSetupFunc(r);return this.compileAndRun(o,[s],"int32",u)}oneHot(t,e,n,r){const s=new fA(t.size,e,n,r);return this.compileAndRun(s,[t])}diag(t){const e=new G$(t.size);return this.compileAndRun(e,[t])}cropAndResize(t,e,n,r,s,a){const i=new L$(t.shape,e.shape,r,s,a);return this.compileAndRun(i,[t,e,n],"float32")}depthToSpace(t,e,n){Z(e>1,(()=>"blockSize should be > 1 for depthToSpace, but was: "+e));const r=t.shape[0],s="NHWC"===n?t.shape[1]:t.shape[2],a="NHWC"===n?t.shape[2]:t.shape[3],i="NHWC"===n?t.shape[3]:t.shape[1],o=s*e,u=a*e,l=i/(e*e),c=new U$("NHWC"===n?[r,o,u,l]:[r,l,o,u],e,n);return this.compileAndRun(c,[t])}split(t,e,n){return iR(t,e,n)}scatterND(t,e,n){const{sliceRank:r,numUpdates:s,sliceSize:a,strides:i,outputSize:o}=hi(0,t,n),u=[o/a,a],l=t.reshape([s,r]),c=e.reshape([s,a]);if(0===o)return fd(Ps([]),n);const h=No(0),p=new $A(s,r,l.rank,c.rank,i,u);return this.compileAndRun(p,[c,l,h]).reshape(n)}sparseToDense(t,e,n,r){const{sliceRank:s,numUpdates:a,strides:i,outputSize:o}=hi(0,t,n),u=new $A(a,s,t.rank,e.rank,i,[o,1],!1);return this.compileAndRun(u,[e,t,r]).reshape(n)}gatherND(t,e){const n=e.shape,r=n[n.length-1],[s,a,i,o]=ui(t,e),u=e.reshape([a,r]),l=t.reshape([t.size/i,i]),c=new J$(r,o,[a,i]);return this.compileAndRun(c,[l,u]).reshape(s)}fill(t,e,n){if("string"===(n=n||St(e))){const r=mt(n,nt(t));return r.fill(e),Hi().makeTensor(r,t,n,this)}{const r=new X$(t,e),s=r.getCustomSetupFunc(e);return this.compileAndRun(r,[],n,s)}}onesLike(t){if("string"===t.dtype)throw new Error("onesLike is not supported under string dtype");return this.fill(t.shape,1,t.dtype)}zerosLike(t){return this.fill(t.shape,"string"===t.dtype?"":0,t.dtype)}linspace(t,e,n){return md(t,e,n)}makeTensorInfo(t,e,n){const r=this.write(n,t,e);return this.texData.get(r).usage=null,{dataId:r,shape:t,dtype:e}}makeOutput(t,e,n){const{dataId:r}=this.makeTensorInfo(t,e,n);return Hi().makeTensorFromDataId(r,t,e,this)}unpackTensor(t){const e=new sR(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new mA(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const n=[NE(t.shape),...IE(t.shape)],r={dtype:t.dtype,shape:n,dataId:t.dataId},s=[NE(e),...IE(e)],a=new wA(s,n),i=this.runWebGLProgram(a,[r],t.dtype,null,!0);return{dataId:i.dataId,shape:e,dtype:i.dtype}}decode(t){const e=this.texData.get(t),{isPacked:n,shape:r,dtype:s}=e,a=SE(r);let i;return i=n?new V$(a):new W$(a),{dtype:s,shape:r,dataId:this.runWebGLProgram(i,[{shape:a,dtype:s,dataId:t}],s,null,!0).dataId}}runWebGLProgram(t,e,n,r,s=!1){const a=this.makeTensorInfo(t.outputShape,n),i=this.texData.get(a.dataId);if(t.packedOutput&&(i.isPacked=!0),t.outPackingScheme===aE.DENSE){const e=lE(t.outputShape);i.texShape=e.map((t=>2*t))}if(null!=t.outTexUsage&&(i.usage=t.outTexUsage),0===nt(a.shape))return i.values=ft(a.dtype,0),a;const o=[],u=e.map((e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(e.dataId);if(null==n.texture){if(!t.packedInputs&&nt(e.shape)<=Bt().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.packedInputs&&(n.isPacked=!0,n.shape=e.shape)}else if(!!n.isPacked!=!!t.packedInputs)e=n.isPacked?this.unpackTensor(e):this.packTensor(e),o.push(e),n=this.texData.get(e.dataId);else if(n.isPacked&&!TE(n.shape,e.shape)){const t=e,r=e.shape;e.shape=n.shape,e=this.packedReshape(e,r),o.push(e),n=this.texData.get(e.dataId),t.shape=r}return this.uploadToGPU(e.dataId),{shape:e.shape,texData:n,isUniform:!1}}));this.uploadToGPU(a.dataId);const l={shape:a.shape,texData:i,isUniform:!1},c=function(t,e,n){let r="";e.concat(n).forEach((t=>{const e=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0,n=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${n}_${e}`}));const s=t.userCode;let a=t.constructor.name;return a+="_"+r+"_"+s,a}(t,u,l),h=this.getAndSaveBinary(c,(()=>function(t,e,n,r){const s=e.userCode,a=n.map(((t,n)=>{const r={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(r.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:r}})),i=a.map((t=>t.shapeInfo)),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},u=a$(a,o,s,e.packedInputs),l=t.createProgram(u);let c=null;const h=t.getUniformLocation(l,"NAN",!1);1===Bt().getNumber("WEBGL_VERSION")&&(c=t.getUniformLocation(l,"INFINITY",!1));const p={};for(let n=0;n<e.variableNames.length;n++){const r=e.variableNames[n],s=!1;p[r]=t.getUniformLocation(l,r,s),p["offset"+r]=t.getUniformLocation(l,"offset"+r,s)}return{program:e,source:u,webGLProgram:l,uniformLocations:p,inShapeInfos:i,outShapeInfo:o,infLoc:c,nanLoc:h}}(this.gpgpu,t,u,l))),p=null!=this.activeTimers;let d;if(p&&(d=this.startTimer()),function(t,e,n,r,s){aA(e.inShapeInfos,n),aA([e.outShapeInfo],[r]);const a=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?t.setOutputPackedMatrixTexture(a,i[0],i[1]):t.setOutputMatrixTexture(a,i[0],i[1]),t.setProgram(e.webGLProgram),1===Bt().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN),n.forEach(((n,r)=>{const s=e.program.variableNames[r],a=e.uniformLocations[s],i=e.uniformLocations["offset"+s];if(null!=a)if(n.isUniform)if(nt(n.shape)<2)t.gl.uniform1f(a,n.uniformValues[0]);else{let e=n.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(a,e)}else null!=n.texData.slice&&null!=i&&t.gl.uniform1i(i,n.texData.slice.flatOffset),t.setInputMatrixTexture(n.texData.texture,a,r)})),null!=s&&s(t,e.webGLProgram),t.executeProgram()}(this.gpgpu,h,u,l,r),o.forEach((t=>this.disposeIntermediateTensorInfo(t))),p&&(d=this.endTimer(d),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(d)})),!Bt().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===s){const t=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),t}return a}compileAndRun(t,e,n,r,s=!1){n=n||e[0].dtype;const a=this.runWebGLProgram(t,e,n,r,s);return Hi().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Bt().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Xi((()=>{if(!Bt().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=Bt().getBool("DEBUG");Bt().set("DEBUG",!1);const e=this.abs(No(1e-8)).dataSync()[0];if(Bt().set("DEBUG",t),e>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:r,values:s,texture:a,usage:i,isPacked:o}=e;if(null!=a)return;const u=null!=this.activeTimers;let l;u&&(l=ts());let c=e.texShape;if(null==c&&(c=function(t,e=!1){let n=Bt().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e&&(n*=2,1===(t=t.map(((e,n)=>n>=t.length-2?K(t[n]):t[n]))).length&&(t=[2,t[0]])),2!==t.length){const e=dt(t);t=e.newShape}let r=nt(t);if(t.length<=1&&r<=n)return[1,r];if(2===t.length&&t[0]<=n&&t[1]<=n)return t;if(3===t.length&&t[0]*t[1]<=n&&t[2]<=n)return[t[0]*t[1],t[2]];if(3===t.length&&t[0]<=n&&t[1]*t[2]<=n)return[t[0],t[1]*t[2]];if(4===t.length&&t[0]*t[1]*t[2]<=n&&t[3]<=n)return[t[0]*t[1]*t[2],t[3]];if(4===t.length&&t[0]<=n&&t[1]*t[2]*t[3]<=n)return[t[0],t[1]*t[2]*t[3]];if(e){const e=NE(t);let n=2,s=2;return t.length&&([n,s]=IE(t)),r=e*(n/2)*(s/2),ot(r).map((t=>2*t))}return ot(r)}(n,o),e.texShape=c),null!=s){const t=SE(n);let a,i=c[1],h=c[0];const p=s instanceof Uint8Array;o?([i,h]=cE(c[0],c[1]),a=new K$(t,[h,i],p)):a=new q$(t,[h,i],p);const d=this.makeTensorInfo([h,i],r);this.texData.get(d.dataId).usage=p?iE.PIXELS:iE.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(d.dataId),i,h,s);const f=!0,m=this.runWebGLProgram(a,[d],r,null,f),g=this.texData.get(m.dataId);e.texture=g.texture,e.texShape=g.texShape,e.isPacked=g.isPacked,e.usage=g.usage,this.disposeIntermediateTensorInfo(d),this.texData.delete(m.dataId),e.values=null,u&&(this.uploadWaitMs+=ts()-l)}else{const t=this.acquireTexture(c,i,r,o);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:r}=n;return this.releaseGPUData(t),null!=e&&(n.values=function(t,e){if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){const n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}throw new Error("Unknown dtype "+e)}(e,r)),n.values}acquireTexture(t,e,n,r){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const t=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${t} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,r)}computeBytes(t,e){return t[0]*t[1]*vt(e)}tryRunOnCpuOrThrow(t,e){if(this.shouldExecuteOnCPU(t))try{return e()}catch(t){if(Bt().getBool("IS_TEST"))throw new Error("CPU forwarding failed")}return null}}function dR(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}$s()&&ao("webgl",(()=>new pR),2);const fR={kernelName:Je,backendName:"webgl",kernelFunc:dR};function mR(t){const{inputs:e,backend:n}=t,{real:r,imag:s}=e,a=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(a.dataId),o=dR({inputs:{x:r},backend:n});n.texData.get(o.dataId).complexParentRefCount++;const u=dR({inputs:{x:s},backend:n});return n.texData.get(u.dataId).complexParentRefCount++,i.complexTensorInfos={real:o,imag:u},a}const gR={kernelName:fe,backendName:"webgl",kernelFunc:mR};function yR(t){return({inputs:e,backend:n})=>{const{x:r}=e,s=n,a=new WA(r.shape,t);return s.runWebGLProgram(a,[r],r.dtype)}}function bR({opSnippet:t,packedOpSnippet:e,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:a}){return({inputs:i,backend:o})=>{const{a:u,b:l}=i,c=o;if(r&&"complex64"===u.dtype){const e=c.texData.get(u.dataId),n=c.texData.get(l.dataId),[r,s]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,r]=e,s={dataId:n.dataId,dtype:n.dtype,shape:u.shape},a={dataId:r.dataId,dtype:r.dtype,shape:l.shape},i=new w$(t,u.shape,l.shape);return c.runWebGLProgram(i,[s,a],gs(n.dtype,r.dtype))})),a=mR({inputs:{real:r,imag:s},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(s),a}const h=a||gs(u.dtype,l.dtype);if(c.shouldExecuteOnCPU([u,l])&&null!=s){const t=c.texData.get(u.dataId),e=c.texData.get(l.dataId),[n,r]=s(u.shape,l.shape,t.values,e.values,h),a=c.makeTensorInfo(r,h);return c.texData.get(a.dataId).values=n,a}let p;return p=Bt().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=e?new N$(e,u.shape,l.shape,n):new w$(t,u.shape,l.shape),c.runWebGLProgram(p,[u,l],h)}}const xR="return a + b;",vR=bR({opSnippet:xR,packedOpSnippet:xR,supportsComplex:!0,cpuKernelImpl:ME}),wR={kernelName:qt,backendName:"webgl",kernelFunc:vR},kR=bR({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),NR={kernelName:re,backendName:"webgl",kernelFunc:kR},IR={kernelName:se,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;DE(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;Z(yu(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=ou(s.shape,a,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&st(l.inShape,l.outShape))return dR({inputs:{x:s},backend:n});const c=new bA(l,"avg",!1);return n.runWebGLProgram(c,[s],"float32")}},SR={kernelName:ae,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:a}=e,i=a;DE([s,a],"avgPoolBackprop");const{filterSize:o,strides:u,pad:l}=r,c=ou(i.shape,o,u,1,l),h=new b$(c);return n.runWebGLProgram(h,[s],i.dtype)}};class CR{constructor(t,e,n,r,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],Fo(t,e),Fo(t,n);let i="0.0";null!=r&&(Fo(t,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=s&&(Fo(t,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class TR{constructor(t,e,n,r,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Fo(t,e),Fo(t,n);let i="vec4(0.0)";null!=r&&(Fo(t,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=s&&(Fo(t,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const ER={kernelName:He,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,mean:s,variance:a,offset:i,scale:o}=t;Z(s.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Z(null==i||s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Z(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=n;null==u&&(u=.001);const l=[r,s,a];let c=null;null!=i&&(c=i.shape,l.push(i));let h=null;null!=o&&(h=o.shape,l.push(o));const p=Bt().getBool("WEBGL_PACK_NORMALIZATION")?new TR(r.shape,s.shape,a.shape,c,h,u):new CR(r.shape,s.shape,a.shape,c,h,u);return e.runWebGLProgram(p,l,l[0].dtype)}},$R=bR({opSnippet:"return float(a != b);",dtype:"bool"}),AR={kernelName:$n,backendName:"webgl",kernelFunc:$R};function RR(t){const{inputs:e,backend:n}=t,{input:r}=e;return dR({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const _R={kernelName:Wn,backendName:"webgl",kernelFunc:RR},DR={kernelName:he,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r,attrs:s}=e,{x:a}=n,{dtype:i}=s;if("complex64"===i){if("complex64"===a.dtype)return dR({inputs:{x:a},backend:r});const e=Hl(a.shape),n=t({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),s=mR({inputs:{real:n,imag:e},backend:r});return e.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===a.dtype){const e=RR({inputs:{input:a},backend:r}),n=t({inputs:{x:e},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(e),n}if(!bt(a.dtype,i)){const t=dR({inputs:{x:a},backend:r});return{dataId:t.dataId,shape:t.shape,dtype:i}}if("int32"===i)return function(t,e){const n=new WA(t.shape,"return float(int(x));"),r=e.runWebGLProgram(n,[t],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(a,r);if("bool"===i){const t=r.makeTensorInfo([],"bool",ft("bool",1)),e=$R({inputs:{a,b:t},backend:r});return r.disposeIntermediateTensorInfo(t),e}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}};class FR{constructor(t){this.outputShape=[],this.outputShape=ku(t,1),this.variableNames=t.map(((t,e)=>"T"+e));const e=new Array(t.length-1);e[0]=t[0][1];for(let n=1;n<e.length;n++)e[n]=e[n-1]+t[n][1];const n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let t=1;t<e.length;t++){const r=e[t-1];n.push(`else if (yC < ${e[t]}) setOutput(getT${t}(yR, yC-${r}));`)}const r=e.length,s=e[e.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class OR{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=ku(t,e);const n=this.outputShape,r=n.length,s=f$(r),a=QE("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=t.map(((t,e)=>"T"+e));const o=new Array(t.length-1);o[0]=t[0][e];for(let n=1;n<o.length;n++)o[n]=o[n-1]+t[n][e];const u=i[e],l=i.slice(-2),c=i.join();let h=`if (${u} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${l.join()}));\n        }`;for(let t=1;t<o.length;t++){const e=o[t-1];h+=`\n        if (${u} < ${o[t]}  && ${u} >= ${o[t-1]}) {\n          return getChannel(\n            getT${t}(${MR(i,u,e)}),\n            vec2(${MR(l,u,e)}));\n        }`}const p=o.length,d=o[o.length-1];h+=`\n        return getChannel(\n          getT${p}(${MR(i,u,d)}),\n          vec2(${MR(l,u,d)}));`,this.userCode=`\n      float getValue(${i.map((t=>"int "+t))}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[r-1]} = ${a[r-1]} + 1;\n        if (${a[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[r-2]} = ${a[r-2]} + 1;\n        if (${a[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[r-1]} = ${a[r-1]} - 1;\n        if (${a[r-2]} < ${n[r-2]} &&\n            ${a[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function MR(t,e,n){const r=t.indexOf(e);return t.map(((t,e)=>e===r?`${t} - ${n}`:t)).join()}function LR(t){const{inputs:e,backend:n}=t,{input:r}=e;return dR({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const zR={kernelName:Qe,backendName:"webgl",kernelFunc:LR};function BR(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{shape:a}=r,i=n,o=nt(s.shape),u=ht(a,o),l=nt(u);Z(o===l,(()=>`The new shape (${u}) has ${l} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(s.dataId);return!c.isPacked||TE(s.shape,u)||null!==c.texture&&TE(c.shape,u)?(i.incRef(s.dataId),{dataId:s.dataId,shape:u,dtype:s.dtype}):function(t,e,n){const r=[NE(t.shape),...IE(t.shape)],s={dtype:t.dtype,shape:r,dataId:t.dataId},a=[NE(e),...IE(e)],i=new wA(a,r),o=n.runWebGLProgram(i,[s],t.dtype,null,!0);return{dataId:o.dataId,shape:e,dtype:o.dtype}}(s,u,i)}const PR={kernelName:Gn,backendName:"webgl",kernelFunc:BR};function WR(t,e,n){const r=t[0].dtype;if("complex64"===r){const r=t.map((t=>RR({inputs:{input:t},backend:n}))),s=t.map((t=>LR({inputs:{input:t},backend:n}))),a=WR(r,e,n),i=WR(s,e,n),o=mR({inputs:{real:a,imag:i},backend:n});return r.forEach((t=>n.disposeIntermediateTensorInfo(t))),s.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}if(t.length>Bt().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(t.length/2),s=WR(t.slice(0,r),e,n),a=WR(t.slice(r),e,n),i=WR([s,a],e,n);return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}if(Bt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&t[0].shape.length>1){const s=new OR(t.map((t=>t.shape)),e);return n.runWebGLProgram(s,t,r)}const s=ku(t.map((t=>t.shape)),e),a=t.map((t=>BR({inputs:{x:t},attrs:{shape:[-1,nt(t.shape.slice(e))]},backend:n}))),i=new FR(a.map((t=>t.shape))),o=n.runWebGLProgram(i,a,r);a.forEach((t=>n.disposeIntermediateTensorInfo(t)));const u=BR({inputs:{x:o},attrs:{shape:s},backend:n});return n.disposeIntermediateTensorInfo(o),u}const VR={kernelName:me,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r,a=pt(s,e[0].shape)[0],i=ku(e.map((t=>t.shape)),a);if(0===nt(i))return n.makeTensorInfo(i,e[0].dtype,[]);const o=e.filter((t=>nt(t.shape)>0));return 1===o.length?o[0]:(wu(o.map((t=>t.shape)),a),WR(o,a,n))}},UR=yR("if (isnan(x)) return x;\n  return cos(x);\n"),GR={kernelName:ke,backendName:"webgl",kernelFunc:UR},jR=bR({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),HR={kernelName:Fe,backendName:"webgl",kernelFunc:jR};class qR{constructor(t,e,n){this.variableNames=["real","imag"];const r=e[1];this.outputShape=e;const s=n?"2.0 * "+Math.PI:"-2.0 * "+Math.PI,a=n?r+".0":"1.0";let i;if("real"===t)i="return real * expR - imag * expI;";else{if("imag"!==t)throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function KR(t,e,n){const r=n.texData.get(t.dataId),s=nt(t.shape),a=t.shape[t.shape.length-1],i=BR({inputs:{x:t},backend:n,attrs:{shape:[s/a,a]}}).shape,o=new qR("real",i,e),u=new qR("imag",i,e),l=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:i},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:i}],c=n.runWebGLProgram(o,l,"float32"),h=n.runWebGLProgram(u,l,"float32"),p=mR({inputs:{real:c,imag:h},backend:n});n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h);const d=BR({inputs:{x:p},backend:n,attrs:{shape:t.shape}});return n.disposeIntermediateTensorInfo(d),d}const XR={kernelName:We,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e;return KR(r,!1,n)}};class YR{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${e} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${e}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const JR={kernelName:Ue,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,r=e,s=new YR(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}};class ZR{constructor(t){this.variableNames=["A"];const e=t$(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${e.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class QR{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=t$(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${e.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${e.output} = result;\n      }\n    `}}const t_={kernelName:Er,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t;let{pixels:s}=e;const{numChannels:a}=r,i="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[u,l]=i?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[l,u],h=[l,u,a];(o||i)&&(null==e_&&(e_=document.createElement("canvas").getContext("2d")),e_.canvas.width=u,e_.canvas.height=l,e_.drawImage(s,0,0,u,l),s=e_.canvas);const p=n.makeTensorInfo(c,"int32");n.texData.get(p.dataId).usage=iE.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),s);const d=Bt().getBool("WEBGL_PACK")?new QR(h):new ZR(h),f=n.runWebGLProgram(d,[p],"int32");return n.disposeData(p.dataId),f}};let e_;const n_={kernelName:Ze,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e;return KR(r,!0,n)}};class r_{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=t;this.outputShape=[r,a];const i=4*Math.floor(n/4),o=n%4;let u="sumValue += dot(values, ones);";if(null!=e){const t=1/e;u=`sumValue += dot(values * ${at(t)?t.toPrecision(2):t}, ones);`}let l="";s%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}function s_(t,e,n,r){const s=function(t){const e=[];for(;0===e.length||1!==e[e.length-1].outSize;){const n=e.length?e[e.length-1].outSize:t[1],r=fl(n);e.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return e}(t.shape);let a=t;for(let i=0;i<s.length;i++){const{inSize:o,windowSize:u,outSize:l}=s[i];let c,h;c="mean"===n?0===i?new r_({windowSize:u,inSize:o,batchSize:t.shape[0],outSize:l},o):new r_({windowSize:u,inSize:o,batchSize:t.shape[0],outSize:l}):new vA({windowSize:u,inSize:o,batchSize:t.shape[0],outSize:l},n),h=a,a=r.runWebGLProgram(c,[a],e),h.dataId!==t.dataId&&r.disposeIntermediateTensorInfo(h)}return a}class a_{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[e[r]];this.outputShape=n,this.rank=n.length;const r=f$(this.rank),s=function(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let e=0;e<t.length;e++)r[t[e]]=n[e];return r.join()}(e);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class i_{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[e[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=f$(this.rank),s=ZE("rc",this.rank),a=new Array(this.rank);for(let t=0;t<e.length;t++)a[e[t]]=s[t];const i=`vec2(${a.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function o_(t,e,n){const r=Bt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new i_(t.shape,e):new a_(t.shape,e);return n.runWebGLProgram(r,[t],t.dtype)}const u_={kernelName:mn,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{reductionIndices:s,keepDims:a}=e,i=n,o=r.shape.length,u=pt(s,r.shape);let l=u;const c=Ko(l,o),h=null!=c,p=i.shouldExecuteOnCPU([r]);let d=r;if(h){if(p){const t=i.texData.get(d.dataId).values,e=new Array(o);for(let t=0;t<e.length;t++)e[t]=r.shape[c[t]];const n=qE(t,r.shape,r.dtype,c,e);d=i.makeTensorInfo(e,r.dtype),i.texData.get(d.dataId).values=n}else d=o_(r,c,i);l=Yo(l.length,o)}qo("max",l,o);const[f,m]=jo(d.shape,l);let g,y=f;if(a&&(y=Ho(f,u)),p){const t=i.texData.get(d.dataId).values,e=VE(t,nt(m),y,r.dtype);g=i.makeTensorInfo(y,r.dtype),i.texData.get(g.dataId).values=e}else g=function(t,e,n,r){const s=nt(e),a=BR({inputs:{x:t},attrs:{shape:[nt(t.shape)/s,s]},backend:r}),i=s_(a,t.dtype,"max",r),o=BR({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(d,m,y,i);return h&&i.disposeIntermediateTensorInfo(d),g}},l_={kernelName:yn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;DE(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;Z(yu(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=ou(s.shape,a,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&st(l.inShape,l.outShape))return dR({inputs:{x:s},backend:n});const c=new bA(l,"max",!1);return n.runWebGLProgram(c,[s],s.dtype)}},c_={kernelName:bn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:a,output:i}=e,o=a;DE([a,i],"maxPoolBackprop");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,p=ou(o.shape,u,l,1,c,h),d=new bA(p,"max",!0),f=n.runWebGLProgram(d,[o],o.dtype),m=new cA(p),g=n.runWebGLProgram(m,[s,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},h_={kernelName:wn,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=e,u=n;Z(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const l=[1,1];Z(yu(a,l),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`));const c=ou(r.shape,s,a,l,i),[h,p]=function(t,e,n,r){let s=new bA(n,"max",!1);const a=r.runWebGLProgram(s,[t],"float32");return s=new bA(n,"max",!0,!0,e),[a,r.runWebGLProgram(s,[t],"float32")]}(r,o,c,u);return[h,p]}},p_={kernelName:kn,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{keepDims:s,axis:a}=e,i=n,o=r.shape.length,u=pt(a,r.shape);let l=u;const c=Ko(l,o),h=null!=c,p=i.shouldExecuteOnCPU([r]),d=[];let f=r;if(h){if(p){const t=i.texData.get(f.dataId).values,e=new Array(o);for(let t=0;t<e.length;t++)e[t]=r.shape[c[t]];const n=qE(t,r.shape,r.dtype,c,e);f=i.makeTensorInfo(e,r.dtype),i.texData.get(f.dataId).values=n}else f=o_(r,c,i);d.push(f),l=Yo(l.length,o)}qo("sum",l,o);const[m,g]=jo(f.shape,l);let y=m;s&&(y=Ho(m,u));const b=function(t,e,n,r){const s=nt(e),a=BR({inputs:{x:t},attrs:{shape:[nt(t.shape)/s,s]},backend:r}),i=s_(a,"float32","mean",r),o=BR({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(f,g,y,i);for(const t of d)i.disposeIntermediateTensorInfo(t);return b}};class d_{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=f$(r),a=e.map((t=>t[0])).join(","),i=e.map(((e,n)=>e[0]+t[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class f_{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=f$(r),a=e.map((t=>t[0])).join(","),i=e.map(((e,n)=>e[0]+t[n])).join(","),o=QE("rc",r),u=QE("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h="reflect"===n?0:1;let p="";if(1===r){const t=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;p=`\n        ${s} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${t}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const t=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;p=`\n        ${s} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${t}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${t}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${l}) {\n            ${t}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const m_={kernelName:Sn,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r}=t,{paddings:s,mode:a}=n,i=Bt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new f_(r.shape,s,a):new d_(r.shape,s,a);return e.runWebGLProgram(i,[r],r.dtype)}};class g_{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Fo(e,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${t}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const y_="return a * b;",b_={kernelName:Tn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{a:r,b:s}=e,a=gs(r.dtype,s.dtype);if("complex64"===r.dtype){const t=n.texData.get(r.dataId),e=n.texData.get(s.dataId),a=new g_("return areal * breal - aimag * bimag;",r.shape,s.shape),i=new g_("return areal * bimag + aimag * breal;",r.shape,s.shape),o=[{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:s.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:s.shape}],u=n.runWebGLProgram(a,o,"float32"),l=n.runWebGLProgram(i,o,"float32"),c=mR({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,s])){const t=n.texData.get(r.dataId),e=n.texData.get(s.dataId),[i,o]=UE(r.shape,s.shape,t.values,e.values,a),u=n.makeTensorInfo(o,a);return n.texData.get(u.dataId).values=i,u}let i;return i=Bt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new N$(y_,r.shape,s.shape):new w$(y_,r.shape,s.shape),n.runWebGLProgram(i,[r,s],a)}},x_={kernelName:An,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{rd("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:o}=n,u=e;return lp(u.readSync(r.dataId),u.readSync(s.dataId),a,i,o)}},v_=cp,w_={kernelName:Rn,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{rd("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:o,padToMaxOutputSize:u}=n,l=e,c=l.readSync(r.dataId),h=l.readSync(s.dataId),{selectedIndices:p,validOutputs:d}=v_(c,h,a,i,o,u);return[p,d]}},k_=hp,N_={kernelName:_n,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{rd("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=n,l=e,c=l.readSync(r.dataId),h=l.readSync(s.dataId),p=a,d=i,f=o,m=u,{selectedIndices:g,selectedScores:y}=k_(c,h,p,d,f,m);return[g,y]}};class I_{constructor(t,e,n,r){this.variableNames=["Image"],this.outputShape=[];const s=t[1],a=t[2],i=Math.sin(e).toFixed(3),o=Math.cos(e).toFixed(3);this.outputShape=t;const[u,l]=Up(r,s,a),c=u.toFixed(3),h=l.toFixed(3);let p="";p="number"==typeof n?`float outputValue = ${n.toFixed(2)};`:`\n        vec3 fill = vec3(${n.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - ${c}) * ${o} - (float(y) - ${h}) * ${i};\n          float coordYFloat = (float(x) - ${c}) * ${i} + (float(y) - ${h}) * ${o};\n          int coordX = int(round(coordXFloat + ${c}));\n          int coordY = int(round(coordYFloat + ${h}));\n          ${p}\n          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${s}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const S_={kernelName:$r,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:s,fillValue:a,center:i}=e,o=n,u=new I_(r.shape,s,a,i);return o.runWebGLProgram(u,[r],r.dtype)}},C_=yR("if (isnan(x)) return x;\n  return sin(x);\n"),T_={kernelName:rr,backendName:"webgl",kernelFunc:C_},E_=yR("return x * x;"),$_={kernelName:fr,backendName:"webgl",kernelFunc:E_},A_="return (a - b) * (a - b);",R_=bR({opSnippet:A_,packedOpSnippet:A_}),__={kernelName:dr,backendName:"webgl",kernelFunc:R_},D_="return a - b;",F_=bR({opSnippet:D_,packedOpSnippet:D_,supportsComplex:!0,cpuKernelImpl:HE}),O_={kernelName:mr,backendName:"webgl",kernelFunc:F_},M_=yR("return tan(x);"),L_=[wR,NR,IR,SR,ER,DR,gR,VR,GR,HR,XR,JR,t_,fR,n_,zR,u_,l_,c_,h_,p_,m_,b_,x_,w_,N_,AR,_R,PR,S_,T_,$_,O_,__,{kernelName:br,backendName:"webgl",kernelFunc:M_},{kernelName:kr,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{perm:s}=e,a=n,i=r.shape.length,o=new Array(i);for(let t=0;t<o.length;t++)o[t]=r.shape[s[t]];let u;if(a.shouldExecuteOnCPU([r])){const t=a.texData.get(r.dataId).values,e=qE(t,r.shape,r.dtype,s,o);u=a.makeTensorInfo(o,r.dtype),a.texData.get(u.dataId).values=e}else u=o_(r,s,a);return u}},{kernelName:Nr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{axis:s}=n,{x:a}=e;DE(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(a.dataId),{outputValues:o,outputShape:u,indices:l}=KE(i,s,a.shape,a.dtype);return[r.makeTensorInfo(u,a.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}}];for(const t of L_)zr(t);const z_={"tfjs-core":Pi,"tfjs-backend-cpu":"2.7.0","tfjs-backend-webgl":"2.7.0","tfjs-data":II,"tfjs-layers":Wy,"tfjs-converter":yN,tfjs:"2.7.0"}},6593:(t,e,n)=>{t.exports={default:n(3800),__esModule:!0}},6803:(t,e,n)=>{"use strict";e.__esModule=!0;var r,s=(r=n(6593))&&r.__esModule?r:{default:r};e.default=function(t){return function(){var e=t.apply(this,arguments);return new s.default((function(t,n){return function r(a,i){try{var o=e[a](i),u=o.value}catch(t){return void n(t)}if(!o.done)return s.default.resolve(u).then((function(t){r("next",t)}),(function(t){r("throw",t)}));t(u)}("next")}))}}},3800:(t,e,n)=>{n(6519),n(3036),n(6740),n(3140),n(9750),n(3112),t.exports=n(4731).Promise},1449:t=>{t.exports=function(t){if("function"!=typeof t)throw TypeError(t+" is not a function!");return t}},5345:t=>{t.exports=function(){}},7055:t=>{t.exports=function(t,e,n,r){if(!(t instanceof e)||void 0!==r&&r in t)throw TypeError(n+": incorrect invocation!");return t}},6504:(t,e,n)=>{var r=n(9151);t.exports=function(t){if(!r(t))throw TypeError(t+" is not an object!");return t}},4389:(t,e,n)=>{var r=n(4874),s=n(8317),a=n(9838);t.exports=function(t){return function(e,n,i){var o,u=r(e),l=s(u.length),c=a(i,l);if(t&&n!=n){for(;l>c;)if((o=u[c++])!=o)return!0}else for(;l>c;c++)if((t||c in u)&&u[c]===n)return t||c||0;return!t&&-1}}},3965:(t,e,n)=>{var r=n(4499),s=n(5346)("toStringTag"),a="Arguments"==r(function(){return arguments}());t.exports=function(t){var e,n,i;return void 0===t?"Undefined":null===t?"Null":"string"==typeof(n=function(t,e){try{return t[e]}catch(t){}}(e=Object(t),s))?n:a?r(e):"Object"==(i=r(e))&&"function"==typeof e.callee?"Arguments":i}},4499:t=>{var e={}.toString;t.exports=function(t){return e.call(t).slice(8,-1)}},4731:t=>{var e=t.exports={version:"2.6.11"};"number"==typeof __e&&(__e=e)},1821:(t,e,n)=>{var r=n(1449);t.exports=function(t,e,n){if(r(t),void 0===e)return t;switch(n){case 1:return function(n){return t.call(e,n)};case 2:return function(n,r){return t.call(e,n,r)};case 3:return function(n,r,s){return t.call(e,n,r,s)}}return function(){return t.apply(e,arguments)}}},1605:t=>{t.exports=function(t){if(null==t)throw TypeError("Can't call method on  "+t);return t}},5810:(t,e,n)=>{t.exports=!n(3777)((function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a}))},2571:(t,e,n)=>{var r=n(9151),s=n(9362).document,a=r(s)&&r(s.createElement);t.exports=function(t){return a?s.createElement(t):{}}},5568:t=>{t.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},9901:(t,e,n)=>{var r=n(9362),s=n(4731),a=n(1821),i=n(3273),o=n(3571),u=function(t,e,n){var l,c,h,p=t&u.F,d=t&u.G,f=t&u.S,m=t&u.P,g=t&u.B,y=t&u.W,b=d?s:s[e]||(s[e]={}),x=b.prototype,v=d?r:f?r[e]:(r[e]||{}).prototype;for(l in d&&(n=e),n)(c=!p&&v&&void 0!==v[l])&&o(b,l)||(h=c?v[l]:n[l],b[l]=d&&"function"!=typeof v[l]?n[l]:g&&c?a(h,r):y&&v[l]==h?function(t){var e=function(e,n,r){if(this instanceof t){switch(arguments.length){case 0:return new t;case 1:return new t(e);case 2:return new t(e,n)}return new t(e,n,r)}return t.apply(this,arguments)};return e.prototype=t.prototype,e}(h):m&&"function"==typeof h?a(Function.call,h):h,m&&((b.virtual||(b.virtual={}))[l]=h,t&u.R&&x&&!x[l]&&i(x,l,h)))};u.F=1,u.G=2,u.S=4,u.P=8,u.B=16,u.W=32,u.U=64,u.R=128,t.exports=u},3777:t=>{t.exports=function(t){try{return!!t()}catch(t){return!0}}},2859:(t,e,n)=>{var r=n(1821),s=n(3749),a=n(4034),i=n(6504),o=n(8317),u=n(3898),l={},c={},h=t.exports=function(t,e,n,h,p){var d,f,m,g,y=p?function(){return t}:u(t),b=r(n,h,e?2:1),x=0;if("function"!=typeof y)throw TypeError(t+" is not iterable!");if(a(y)){for(d=o(t.length);d>x;x++)if((g=e?b(i(f=t[x])[0],f[1]):b(t[x]))===l||g===c)return g}else for(m=y.call(t);!(f=m.next()).done;)if((g=s(m,b,f.value,e))===l||g===c)return g};h.BREAK=l,h.RETURN=c},9362:t=>{var e=t.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=e)},3571:t=>{var e={}.hasOwnProperty;t.exports=function(t,n){return e.call(t,n)}},3273:(t,e,n)=>{var r=n(1738),s=n(8051);t.exports=n(5810)?function(t,e,n){return r.f(t,e,s(1,n))}:function(t,e,n){return t[e]=n,t}},203:(t,e,n)=>{var r=n(9362).document;t.exports=r&&r.documentElement},3254:(t,e,n)=>{t.exports=!n(5810)&&!n(3777)((function(){return 7!=Object.defineProperty(n(2571)("div"),"a",{get:function(){return 7}}).a}))},9029:t=>{t.exports=function(t,e,n){var r=void 0===n;switch(e.length){case 0:return r?t():t.call(n);case 1:return r?t(e[0]):t.call(n,e[0]);case 2:return r?t(e[0],e[1]):t.call(n,e[0],e[1]);case 3:return r?t(e[0],e[1],e[2]):t.call(n,e[0],e[1],e[2]);case 4:return r?t(e[0],e[1],e[2],e[3]):t.call(n,e[0],e[1],e[2],e[3])}return t.apply(n,e)}},2312:(t,e,n)=>{var r=n(4499);t.exports=Object("z").propertyIsEnumerable(0)?Object:function(t){return"String"==r(t)?t.split(""):Object(t)}},4034:(t,e,n)=>{var r=n(3135),s=n(5346)("iterator"),a=Array.prototype;t.exports=function(t){return void 0!==t&&(r.Array===t||a[s]===t)}},9151:t=>{t.exports=function(t){return"object"==typeof t?null!==t:"function"==typeof t}},3749:(t,e,n)=>{var r=n(6504);t.exports=function(t,e,n,s){try{return s?e(r(n)[0],n[1]):e(n)}catch(e){var a=t.return;throw void 0!==a&&r(a.call(t)),e}}},9163:(t,e,n)=>{"use strict";var r=n(4055),s=n(8051),a=n(420),i={};n(3273)(i,n(5346)("iterator"),(function(){return this})),t.exports=function(t,e,n){t.prototype=r(i,{next:s(1,n)}),a(t,e+" Iterator")}},4346:(t,e,n)=>{"use strict";var r=n(7346),s=n(9901),a=n(1865),i=n(3273),o=n(3135),u=n(9163),l=n(420),c=n(1146),h=n(5346)("iterator"),p=!([].keys&&"next"in[].keys()),d="keys",f="values",m=function(){return this};t.exports=function(t,e,n,g,y,b,x){u(n,e,g);var v,w,k,N=function(t){if(!p&&t in T)return T[t];switch(t){case d:case f:return function(){return new n(this,t)}}return function(){return new n(this,t)}},I=e+" Iterator",S=y==f,C=!1,T=t.prototype,E=T[h]||T["@@iterator"]||y&&T[y],$=E||N(y),A=y?S?N("entries"):$:void 0,R="Array"==e&&T.entries||E;if(R&&(k=c(R.call(new t)))!==Object.prototype&&k.next&&(l(k,I,!0),r||"function"==typeof k[h]||i(k,h,m)),S&&E&&E.name!==f&&(C=!0,$=function(){return E.call(this)}),r&&!x||!p&&!C&&T[h]||i(T,h,$),o[e]=$,o[I]=m,y)if(v={values:S?$:N(f),keys:b?$:N(d),entries:A},x)for(w in v)w in T||a(T,w,v[w]);else s(s.P+s.F*(p||C),e,v);return v}},8606:(t,e,n)=>{var r=n(5346)("iterator"),s=!1;try{var a=[7][r]();a.return=function(){s=!0},Array.from(a,(function(){throw 2}))}catch(t){}t.exports=function(t,e){if(!e&&!s)return!1;var n=!1;try{var a=[7],i=a[r]();i.next=function(){return{done:n=!0}},a[r]=function(){return i},t(a)}catch(t){}return n}},4098:t=>{t.exports=function(t,e){return{value:e,done:!!t}}},3135:t=>{t.exports={}},7346:t=>{t.exports=!0},2729:(t,e,n)=>{var r=n(9362),s=n(746).set,a=r.MutationObserver||r.WebKitMutationObserver,i=r.process,o=r.Promise,u="process"==n(4499)(i);t.exports=function(){var t,e,n,l=function(){var r,s;for(u&&(r=i.domain)&&r.exit();t;){s=t.fn,t=t.next;try{s()}catch(r){throw t?n():e=void 0,r}}e=void 0,r&&r.enter()};if(u)n=function(){i.nextTick(l)};else if(!a||r.navigator&&r.navigator.standalone)if(o&&o.resolve){var c=o.resolve(void 0);n=function(){c.then(l)}}else n=function(){s.call(r,l)};else{var h=!0,p=document.createTextNode("");new a(l).observe(p,{characterData:!0}),n=function(){p.data=h=!h}}return function(r){var s={fn:r,next:void 0};e&&(e.next=s),t||(t=s,n()),e=s}}},1351:(t,e,n)=>{"use strict";var r=n(1449);function s(t){var e,n;this.promise=new t((function(t,r){if(void 0!==e||void 0!==n)throw TypeError("Bad Promise constructor");e=t,n=r})),this.resolve=r(e),this.reject=r(n)}t.exports.f=function(t){return new s(t)}},4055:(t,e,n)=>{var r=n(6504),s=n(121),a=n(5568),i=n(6210)("IE_PROTO"),o=function(){},u=function(){var t,e=n(2571)("iframe"),r=a.length;for(e.style.display="none",n(203).appendChild(e),e.src="javascript:",(t=e.contentWindow.document).open(),t.write("<script>document.F=Object<\/script>"),t.close(),u=t.F;r--;)delete u.prototype[a[r]];return u()};t.exports=Object.create||function(t,e){var n;return null!==t?(o.prototype=r(t),n=new o,o.prototype=null,n[i]=t):n=u(),void 0===e?n:s(n,e)}},1738:(t,e,n)=>{var r=n(6504),s=n(3254),a=n(5408),i=Object.defineProperty;e.f=n(5810)?Object.defineProperty:function(t,e,n){if(r(t),e=a(e,!0),r(n),s)try{return i(t,e,n)}catch(t){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(t[e]=n.value),t}},121:(t,e,n)=>{var r=n(1738),s=n(6504),a=n(9656);t.exports=n(5810)?Object.defineProperties:function(t,e){s(t);for(var n,i=a(e),o=i.length,u=0;o>u;)r.f(t,n=i[u++],e[n]);return t}},1146:(t,e,n)=>{var r=n(3571),s=n(9411),a=n(6210)("IE_PROTO"),i=Object.prototype;t.exports=Object.getPrototypeOf||function(t){return t=s(t),r(t,a)?t[a]:"function"==typeof t.constructor&&t instanceof t.constructor?t.constructor.prototype:t instanceof Object?i:null}},6152:(t,e,n)=>{var r=n(3571),s=n(4874),a=n(4389)(!1),i=n(6210)("IE_PROTO");t.exports=function(t,e){var n,o=s(t),u=0,l=[];for(n in o)n!=i&&r(o,n)&&l.push(n);for(;e.length>u;)r(o,n=e[u++])&&(~a(l,n)||l.push(n));return l}},9656:(t,e,n)=>{var r=n(6152),s=n(5568);t.exports=Object.keys||function(t){return r(t,s)}},4997:t=>{t.exports=function(t){try{return{e:!1,v:t()}}catch(t){return{e:!0,v:t}}}},749:(t,e,n)=>{var r=n(6504),s=n(9151),a=n(1351);t.exports=function(t,e){if(r(t),s(e)&&e.constructor===t)return e;var n=a.f(t);return(0,n.resolve)(e),n.promise}},8051:t=>{t.exports=function(t,e){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}}},7271:(t,e,n)=>{var r=n(3273);t.exports=function(t,e,n){for(var s in e)n&&t[s]?t[s]=e[s]:r(t,s,e[s]);return t}},1865:(t,e,n)=>{t.exports=n(3273)},8539:(t,e,n)=>{"use strict";var r=n(9362),s=n(4731),a=n(1738),i=n(5810),o=n(5346)("species");t.exports=function(t){var e="function"==typeof s[t]?s[t]:r[t];i&&e&&!e[o]&&a.f(e,o,{configurable:!0,get:function(){return this}})}},420:(t,e,n)=>{var r=n(1738).f,s=n(3571),a=n(5346)("toStringTag");t.exports=function(t,e,n){t&&!s(t=n?t:t.prototype,a)&&r(t,a,{configurable:!0,value:e})}},6210:(t,e,n)=>{var r=n(7571)("keys"),s=n(3535);t.exports=function(t){return r[t]||(r[t]=s(t))}},7571:(t,e,n)=>{var r=n(4731),s=n(9362),a="__core-js_shared__",i=s[a]||(s[a]={});(t.exports=function(t,e){return i[t]||(i[t]=void 0!==e?e:{})})("versions",[]).push({version:r.version,mode:n(7346)?"pure":"global",copyright:"© 2019 Denis Pushkarev (zloirock.ru)"})},1402:(t,e,n)=>{var r=n(6504),s=n(1449),a=n(5346)("species");t.exports=function(t,e){var n,i=r(t).constructor;return void 0===i||null==(n=r(i)[a])?e:s(n)}},2222:(t,e,n)=>{var r=n(1485),s=n(1605);t.exports=function(t){return function(e,n){var a,i,o=String(s(e)),u=r(n),l=o.length;return u<0||u>=l?t?"":void 0:(a=o.charCodeAt(u))<55296||a>56319||u+1===l||(i=o.charCodeAt(u+1))<56320||i>57343?t?o.charAt(u):a:t?o.slice(u,u+2):i-56320+(a-55296<<10)+65536}}},746:(t,e,n)=>{var r,s,a,i=n(1821),o=n(9029),u=n(203),l=n(2571),c=n(9362),h=c.process,p=c.setImmediate,d=c.clearImmediate,f=c.MessageChannel,m=c.Dispatch,g=0,y={},b=function(){var t=+this;if(y.hasOwnProperty(t)){var e=y[t];delete y[t],e()}},x=function(t){b.call(t.data)};p&&d||(p=function(t){for(var e=[],n=1;arguments.length>n;)e.push(arguments[n++]);return y[++g]=function(){o("function"==typeof t?t:Function(t),e)},r(g),g},d=function(t){delete y[t]},"process"==n(4499)(h)?r=function(t){h.nextTick(i(b,t,1))}:m&&m.now?r=function(t){m.now(i(b,t,1))}:f?(a=(s=new f).port2,s.port1.onmessage=x,r=i(a.postMessage,a,1)):c.addEventListener&&"function"==typeof postMessage&&!c.importScripts?(r=function(t){c.postMessage(t+"","*")},c.addEventListener("message",x,!1)):r="onreadystatechange"in l("script")?function(t){u.appendChild(l("script")).onreadystatechange=function(){u.removeChild(this),b.call(t)}}:function(t){setTimeout(i(b,t,1),0)}),t.exports={set:p,clear:d}},9838:(t,e,n)=>{var r=n(1485),s=Math.max,a=Math.min;t.exports=function(t,e){return(t=r(t))<0?s(t+e,0):a(t,e)}},1485:t=>{var e=Math.ceil,n=Math.floor;t.exports=function(t){return isNaN(t=+t)?0:(t>0?n:e)(t)}},4874:(t,e,n)=>{var r=n(2312),s=n(1605);t.exports=function(t){return r(s(t))}},8317:(t,e,n)=>{var r=n(1485),s=Math.min;t.exports=function(t){return t>0?s(r(t),9007199254740991):0}},9411:(t,e,n)=>{var r=n(1605);t.exports=function(t){return Object(r(t))}},5408:(t,e,n)=>{var r=n(9151);t.exports=function(t,e){if(!r(t))return t;var n,s;if(e&&"function"==typeof(n=t.toString)&&!r(s=n.call(t)))return s;if("function"==typeof(n=t.valueOf)&&!r(s=n.call(t)))return s;if(!e&&"function"==typeof(n=t.toString)&&!r(s=n.call(t)))return s;throw TypeError("Can't convert object to primitive value")}},3535:t=>{var e=0,n=Math.random();t.exports=function(t){return"Symbol(".concat(void 0===t?"":t,")_",(++e+n).toString(36))}},9690:(t,e,n)=>{var r=n(9362).navigator;t.exports=r&&r.userAgent||""},5346:(t,e,n)=>{var r=n(7571)("wks"),s=n(3535),a=n(9362).Symbol,i="function"==typeof a;(t.exports=function(t){return r[t]||(r[t]=i&&a[t]||(i?a:s)("Symbol."+t))}).store=r},3898:(t,e,n)=>{var r=n(3965),s=n(5346)("iterator"),a=n(3135);t.exports=n(4731).getIteratorMethod=function(t){if(null!=t)return t[s]||t["@@iterator"]||a[r(t)]}},1092:(t,e,n)=>{"use strict";var r=n(5345),s=n(4098),a=n(3135),i=n(4874);t.exports=n(4346)(Array,"Array",(function(t,e){this._t=i(t),this._i=0,this._k=e}),(function(){var t=this._t,e=this._k,n=this._i++;return!t||n>=t.length?(this._t=void 0,s(1)):s(0,"keys"==e?n:"values"==e?t[n]:[n,t[n]])}),"values"),a.Arguments=a.Array,r("keys"),r("values"),r("entries")},6519:()=>{},3140:(t,e,n)=>{"use strict";var r,s,a,i,o=n(7346),u=n(9362),l=n(1821),c=n(3965),h=n(9901),p=n(9151),d=n(1449),f=n(7055),m=n(2859),g=n(1402),y=n(746).set,b=n(2729)(),x=n(1351),v=n(4997),w=n(9690),k=n(749),N="Promise",I=u.TypeError,S=u.process,C=S&&S.versions,T=C&&C.v8||"",E=u.Promise,$="process"==c(S),A=function(){},R=s=x.f,_=!!function(){try{var t=E.resolve(1),e=(t.constructor={})[n(5346)("species")]=function(t){t(A,A)};return($||"function"==typeof PromiseRejectionEvent)&&t.then(A)instanceof e&&0!==T.indexOf("6.6")&&-1===w.indexOf("Chrome/66")}catch(t){}}(),D=function(t){var e;return!(!p(t)||"function"!=typeof(e=t.then))&&e},F=function(t,e){if(!t._n){t._n=!0;var n=t._c;b((function(){for(var r=t._v,s=1==t._s,a=0,i=function(e){var n,a,i,o=s?e.ok:e.fail,u=e.resolve,l=e.reject,c=e.domain;try{o?(s||(2==t._h&&L(t),t._h=1),!0===o?n=r:(c&&c.enter(),n=o(r),c&&(c.exit(),i=!0)),n===e.promise?l(I("Promise-chain cycle")):(a=D(n))?a.call(n,u,l):u(n)):l(r)}catch(t){c&&!i&&c.exit(),l(t)}};n.length>a;)i(n[a++]);t._c=[],t._n=!1,e&&!t._h&&O(t)}))}},O=function(t){y.call(u,(function(){var e,n,r,s=t._v,a=M(t);if(a&&(e=v((function(){$?S.emit("unhandledRejection",s,t):(n=u.onunhandledrejection)?n({promise:t,reason:s}):(r=u.console)&&r.error&&r.error("Unhandled promise rejection",s)})),t._h=$||M(t)?2:1),t._a=void 0,a&&e.e)throw e.v}))},M=function(t){return 1!==t._h&&0===(t._a||t._c).length},L=function(t){y.call(u,(function(){var e;$?S.emit("rejectionHandled",t):(e=u.onrejectionhandled)&&e({promise:t,reason:t._v})}))},z=function(t){var e=this;e._d||(e._d=!0,(e=e._w||e)._v=t,e._s=2,e._a||(e._a=e._c.slice()),F(e,!0))},B=function(t){var e,n=this;if(!n._d){n._d=!0,n=n._w||n;try{if(n===t)throw I("Promise can't be resolved itself");(e=D(t))?b((function(){var r={_w:n,_d:!1};try{e.call(t,l(B,r,1),l(z,r,1))}catch(t){z.call(r,t)}})):(n._v=t,n._s=1,F(n,!1))}catch(t){z.call({_w:n,_d:!1},t)}}};_||(E=function(t){f(this,E,N,"_h"),d(t),r.call(this);try{t(l(B,this,1),l(z,this,1))}catch(t){z.call(this,t)}},(r=function(t){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=n(7271)(E.prototype,{then:function(t,e){var n=R(g(this,E));return n.ok="function"!=typeof t||t,n.fail="function"==typeof e&&e,n.domain=$?S.domain:void 0,this._c.push(n),this._a&&this._a.push(n),this._s&&F(this,!1),n.promise},catch:function(t){return this.then(void 0,t)}}),a=function(){var t=new r;this.promise=t,this.resolve=l(B,t,1),this.reject=l(z,t,1)},x.f=R=function(t){return t===E||t===i?new a(t):s(t)}),h(h.G+h.W+h.F*!_,{Promise:E}),n(420)(E,N),n(8539)(N),i=n(4731).Promise,h(h.S+h.F*!_,N,{reject:function(t){var e=R(this);return(0,e.reject)(t),e.promise}}),h(h.S+h.F*(o||!_),N,{resolve:function(t){return k(o&&this===i?E:this,t)}}),h(h.S+h.F*!(_&&n(8606)((function(t){E.all(t).catch(A)}))),N,{all:function(t){var e=this,n=R(e),r=n.resolve,s=n.reject,a=v((function(){var n=[],a=0,i=1;m(t,!1,(function(t){var o=a++,u=!1;n.push(void 0),i++,e.resolve(t).then((function(t){u||(u=!0,n[o]=t,--i||r(n))}),s)})),--i||r(n)}));return a.e&&s(a.v),n.promise},race:function(t){var e=this,n=R(e),r=n.reject,s=v((function(){m(t,!1,(function(t){e.resolve(t).then(n.resolve,r)}))}));return s.e&&r(s.v),n.promise}})},3036:(t,e,n)=>{"use strict";var r=n(2222)(!0);n(4346)(String,"String",(function(t){this._t=String(t),this._i=0}),(function(){var t,e=this._t,n=this._i;return n>=e.length?{value:void 0,done:!0}:(t=r(e,n),this._i+=t.length,{value:t,done:!1})}))},9750:(t,e,n)=>{"use strict";var r=n(9901),s=n(4731),a=n(9362),i=n(1402),o=n(749);r(r.P+r.R,"Promise",{finally:function(t){var e=i(this,s.Promise||a.Promise),n="function"==typeof t;return this.then(n?function(n){return o(e,t()).then((function(){return n}))}:t,n?function(n){return o(e,t()).then((function(){throw n}))}:t)}})},3112:(t,e,n)=>{"use strict";var r=n(9901),s=n(1351),a=n(4997);r(r.S,"Promise",{try:function(t){var e=s.f(this),n=a(t);return(n.e?e.reject:e.resolve)(n.v),e.promise}})},6740:(t,e,n)=>{n(1092);for(var r=n(9362),s=n(3273),a=n(3135),i=n(5346)("toStringTag"),o="CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList".split(","),u=0;u<o.length;u++){var l=o[u],c=r[l],h=c&&c.prototype;h&&!h[i]&&s(h,i,l),a[l]=a.Array}},2548:(t,e,n)=>{var r=function(){return this}()||Function("return this")(),s=r.regeneratorRuntime&&Object.getOwnPropertyNames(r).indexOf("regeneratorRuntime")>=0,a=s&&r.regeneratorRuntime;if(r.regeneratorRuntime=void 0,t.exports=n(8544),s)r.regeneratorRuntime=a;else try{delete r.regeneratorRuntime}catch(t){r.regeneratorRuntime=void 0}},8544:t=>{!function(e){"use strict";var n,r=Object.prototype,s=r.hasOwnProperty,a="function"==typeof Symbol?Symbol:{},i=a.iterator||"@@iterator",o=a.asyncIterator||"@@asyncIterator",u=a.toStringTag||"@@toStringTag",l=e.regeneratorRuntime;if(l)t.exports=l;else{(l=e.regeneratorRuntime=t.exports).wrap=x;var c="suspendedStart",h="suspendedYield",p="executing",d="completed",f={},m={};m[i]=function(){return this};var g=Object.getPrototypeOf,y=g&&g(g(A([])));y&&y!==r&&s.call(y,i)&&(m=y);var b=N.prototype=w.prototype=Object.create(m);k.prototype=b.constructor=N,N.constructor=k,N[u]=k.displayName="GeneratorFunction",l.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===k||"GeneratorFunction"===(e.displayName||e.name))},l.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,N):(t.__proto__=N,u in t||(t[u]="GeneratorFunction")),t.prototype=Object.create(b),t},l.awrap=function(t){return{__await:t}},I(S.prototype),S.prototype[o]=function(){return this},l.AsyncIterator=S,l.async=function(t,e,n,r){var s=new S(x(t,e,n,r));return l.isGeneratorFunction(e)?s:s.next().then((function(t){return t.done?t.value:s.next()}))},I(b),b[u]="Generator",b[i]=function(){return this},b.toString=function(){return"[object Generator]"},l.keys=function(t){var e=[];for(var n in t)e.push(n);return e.reverse(),function n(){for(;e.length;){var r=e.pop();if(r in t)return n.value=r,n.done=!1,n}return n.done=!0,n}},l.values=A,$.prototype={constructor:$,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=n,this.done=!1,this.delegate=null,this.method="next",this.arg=n,this.tryEntries.forEach(E),!t)for(var e in this)"t"===e.charAt(0)&&s.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=n)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var e=this;function r(r,s){return o.type="throw",o.arg=t,e.next=r,s&&(e.method="next",e.arg=n),!!s}for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a],o=i.completion;if("root"===i.tryLoc)return r("end");if(i.tryLoc<=this.prev){var u=s.call(i,"catchLoc"),l=s.call(i,"finallyLoc");if(u&&l){if(this.prev<i.catchLoc)return r(i.catchLoc,!0);if(this.prev<i.finallyLoc)return r(i.finallyLoc)}else if(u){if(this.prev<i.catchLoc)return r(i.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return r(i.finallyLoc)}}}},abrupt:function(t,e){for(var n=this.tryEntries.length-1;n>=0;--n){var r=this.tryEntries[n];if(r.tryLoc<=this.prev&&s.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var a=r;break}}a&&("break"===t||"continue"===t)&&a.tryLoc<=e&&e<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=t,i.arg=e,a?(this.method="next",this.next=a.finallyLoc,f):this.complete(i)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),f},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.finallyLoc===t)return this.complete(n.completion,n.afterLoc),E(n),f}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.tryLoc===t){var r=n.completion;if("throw"===r.type){var s=r.arg;E(n)}return s}}throw new Error("illegal catch attempt")},delegateYield:function(t,e,r){return this.delegate={iterator:A(t),resultName:e,nextLoc:r},"next"===this.method&&(this.arg=n),f}}}function x(t,e,n,r){var s=e&&e.prototype instanceof w?e:w,a=Object.create(s.prototype),i=new $(r||[]);return a._invoke=function(t,e,n){var r=c;return function(s,a){if(r===p)throw new Error("Generator is already running");if(r===d){if("throw"===s)throw a;return R()}for(n.method=s,n.arg=a;;){var i=n.delegate;if(i){var o=C(i,n);if(o){if(o===f)continue;return o}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(r===c)throw r=d,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r=p;var u=v(t,e,n);if("normal"===u.type){if(r=n.done?d:h,u.arg===f)continue;return{value:u.arg,done:n.done}}"throw"===u.type&&(r=d,n.method="throw",n.arg=u.arg)}}}(t,n,i),a}function v(t,e,n){try{return{type:"normal",arg:t.call(e,n)}}catch(t){return{type:"throw",arg:t}}}function w(){}function k(){}function N(){}function I(t){["next","throw","return"].forEach((function(e){t[e]=function(t){return this._invoke(e,t)}}))}function S(t){function e(n,r,a,i){var o=v(t[n],t,r);if("throw"!==o.type){var u=o.arg,l=u.value;return l&&"object"==typeof l&&s.call(l,"__await")?Promise.resolve(l.__await).then((function(t){e("next",t,a,i)}),(function(t){e("throw",t,a,i)})):Promise.resolve(l).then((function(t){u.value=t,a(u)}),i)}i(o.arg)}var n;this._invoke=function(t,r){function s(){return new Promise((function(n,s){e(t,r,n,s)}))}return n=n?n.then(s,s):s()}}function C(t,e){var r=t.iterator[e.method];if(r===n){if(e.delegate=null,"throw"===e.method){if(t.iterator.return&&(e.method="return",e.arg=n,C(t,e),"throw"===e.method))return f;e.method="throw",e.arg=new TypeError("The iterator does not provide a 'throw' method")}return f}var s=v(r,t.iterator,e.arg);if("throw"===s.type)return e.method="throw",e.arg=s.arg,e.delegate=null,f;var a=s.arg;return a?a.done?(e[t.resultName]=a.value,e.next=t.nextLoc,"return"!==e.method&&(e.method="next",e.arg=n),e.delegate=null,f):a:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,f)}function T(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function E(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function $(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(T,this),this.reset(!0)}function A(t){if(t){var e=t[i];if(e)return e.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var r=-1,a=function e(){for(;++r<t.length;)if(s.call(t,r))return e.value=t[r],e.done=!1,e;return e.value=n,e.done=!0,e};return a.next=a}}return{next:R}}function R(){return{value:n,done:!0}}}(function(){return this}()||Function("return this")())},4942:(t,e,n)=>{t.exports=n(2548)},6377:(t,e,n)=>{var r=n(4832),s=n(8652),a=n(801),i=n(2030),o=n(3618),u=n(9049),l=n(1971);l.alea=r,l.xor128=s,l.xorwow=a,l.xorshift7=i,l.xor4096=o,l.tychei=u,t.exports=l},4832:function(t,e,n){var r;!function(t,s,a){function i(t){var e,n=this,r=(e=4022871197,function(t){t=t.toString();for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(t),n.s0<0&&(n.s0+=1),n.s1-=r(t),n.s1<0&&(n.s1+=1),n.s2-=r(t),n.s2<0&&(n.s2+=1),r=null}function o(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function u(t,e){var n=new i(t),r=e&&e.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(e,n,e,s))||(s.exports=r):this.alea=u}(0,t=n.nmd(t),n.amdD)},9049:function(t,e,n){var r;!function(t,s,a){function i(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,r=e.d,s=e.a;return t=t<<25^t>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-r|0,e.d=r<<16^n>>>16^s,e.a=s-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var r=0;r<n.length+20;r++)e.b^=0|n.charCodeAt(r),e.next()}function o(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function u(t,e){var n=new i(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(e,n,e,s))||(s.exports=r):this.tychei=u}(0,t=n.nmd(t),n.amdD)},8652:function(t,e,n){var r;!function(t,s,a){function i(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function u(t,e){var n=new i(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(e,n,e,s))||(s.exports=r):this.xor128=u}(0,t=n.nmd(t),n.amdD)},3618:function(t,e,n){var r;!function(t,s,a){function i(t){var e=this;e.next=function(){var t,n,r=e.w,s=e.X,a=e.i;return e.w=r=r+1640531527|0,n=s[a+34&127],t=s[a=a+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=s[a]=n^t,e.i=a,n+(r^r>>>16)|0},function(t,e){var n,r,s,a,i,o=[],u=128;for(e===(0|e)?(r=e,e=null):(e+="\0",r=0,u=Math.max(u,e.length)),s=0,a=-32;a<u;++a)e&&(r^=e.charCodeAt((a+32)%e.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(i=i+1640531527|0,s=0==(n=o[127&a]^=r+i)?s+1:0);for(s>=128&&(o[127&(e&&e.length||0)]=-1),s=127,a=512;a>0;--a)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;t.w=i,t.X=o,t.i=s}(e,t)}function o(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function u(t,e){null==t&&(t=+new Date);var n=new i(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&(r.X&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(e,n,e,s))||(s.exports=r):this.xor4096=u}(0,t=n.nmd(t),n.amdD)},2030:function(t,e,n){var r;!function(t,s,a){function i(t){var e=this;e.next=function(){var t,n,r=e.x,s=e.i;return t=r[s],n=(t^=t>>>7)^t<<24,n^=(t=r[s+1&7])^t>>>10,n^=(t=r[s+3&7])^t>>>3,n^=(t=r[s+4&7])^t<<7,t=r[s+7&7],n^=(t^=t<<13)^t<<9,r[s]=n,e.i=s+1&7,n},function(t,e){var n,r=[];if(e===(0|e))r[0]=e;else for(e=""+e,n=0;n<e.length;++n)r[7&n]=r[7&n]<<15^e.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],t.x=r,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function o(t,e){return e.x=t.x.slice(),e.i=t.i,e}function u(t,e){null==t&&(t=+new Date);var n=new i(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&(r.x&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(e,n,e,s))||(s.exports=r):this.xorshift7=u}(0,t=n.nmd(t),n.amdD)},801:function(t,e,n){var r;!function(t,s,a){function i(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),r==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function u(t,e){var n=new i(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(e,n,e,s))||(s.exports=r):this.xorwow=u}(0,t=n.nmd(t),n.amdD)},1971:(t,e,n)=>{var r;!function(s,a){var i,o=this,u=256,l=a.pow(u,6),c=a.pow(2,52),h=2*c,p=255;function d(t,e,n){var r=[],p=y(g((e=1==e?{entropy:!0}:e||{}).entropy?[t,b(s)]:null==t?function(){try{var t;return i&&(t=i.randomBytes)?t=t(u):(t=new Uint8Array(u),(o.crypto||o.msCrypto).getRandomValues(t)),b(t)}catch(t){var e=o.navigator,n=e&&e.plugins;return[+new Date,o,n,o.screen,b(s)]}}():t,3),r),d=new f(r),x=function(){for(var t=d.g(6),e=l,n=0;t<c;)t=(t+n)*u,e*=u,n=d.g(1);for(;t>=h;)t/=2,e/=2,n>>>=1;return(t+n)/e};return x.int32=function(){return 0|d.g(4)},x.quick=function(){return d.g(4)/4294967296},x.double=x,y(b(d.S),s),(e.pass||n||function(t,e,n,r){return r&&(r.S&&m(r,d),t.state=function(){return m(d,{})}),n?(a.random=t,e):t})(x,p,"global"in e?e.global:this==a,e.state)}function f(t){var e,n=t.length,r=this,s=0,a=r.i=r.j=0,i=r.S=[];for(n||(t=[n++]);s<u;)i[s]=s++;for(s=0;s<u;s++)i[s]=i[a=p&a+t[s%n]+(e=i[s])],i[a]=e;(r.g=function(t){for(var e,n=0,s=r.i,a=r.j,i=r.S;t--;)e=i[s=p&s+1],n=n*u+i[p&(i[s]=i[a=p&a+e])+(i[a]=e)];return r.i=s,r.j=a,n})(u)}function m(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function g(t,e){var n,r=[],s=typeof t;if(e&&"object"==s)for(n in t)try{r.push(g(t[n],e-1))}catch(t){}return r.length?r:"string"==s?t:t+"\0"}function y(t,e){for(var n,r=t+"",s=0;s<r.length;)e[p&s]=p&(n^=19*e[p&s])+r.charCodeAt(s++);return b(e)}function b(t){return String.fromCharCode.apply(0,t)}if(a.seedrandom=d,y(a.random(),s),t.exports){t.exports=d;try{i=n(3906)}catch(t){}}else void 0===(r=function(){return d}.call(e,n,e,t))||(t.exports=r)}([],Math)},5767:(t,e,n)=>{var r;window,t.exports=(r=n(7765),function(t){var e={};function n(r){if(e[r])return e[r].exports;var s=e[r]={i:r,l:!1,exports:{}};return t[r].call(s.exports,s,s.exports,n),s.l=!0,s.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)n.d(r,s,function(e){return t[e]}.bind(null,s));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=46)}([function(t,e){var n=t.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=n)},function(t,e,n){var r=n(32)("wks"),s=n(33),a=n(0).Symbol,i="function"==typeof a;(t.exports=function(t){return r[t]||(r[t]=i&&a[t]||(i?a:s)("Symbol."+t))}).store=r},function(t,e){var n=t.exports={version:"2.6.5"};"number"==typeof __e&&(__e=n)},function(t,e,n){var r=n(9);t.exports=function(t){if(!r(t))throw TypeError(t+" is not an object!");return t}},function(t,e,n){var r=n(8),s=n(19);t.exports=n(10)?function(t,e,n){return r.f(t,e,s(1,n))}:function(t,e,n){return t[e]=n,t}},function(t,e){t.exports={}},function(t,e,n){var r=n(0),s=n(2),a=n(7),i=n(4),o=n(13),u=function(t,e,n){var l,c,h,p=t&u.F,d=t&u.G,f=t&u.S,m=t&u.P,g=t&u.B,y=t&u.W,b=d?s:s[e]||(s[e]={}),x=b.prototype,v=d?r:f?r[e]:(r[e]||{}).prototype;for(l in d&&(n=e),n)(c=!p&&v&&void 0!==v[l])&&o(b,l)||(h=c?v[l]:n[l],b[l]=d&&"function"!=typeof v[l]?n[l]:g&&c?a(h,r):y&&v[l]==h?function(t){var e=function(e,n,r){if(this instanceof t){switch(arguments.length){case 0:return new t;case 1:return new t(e);case 2:return new t(e,n)}return new t(e,n,r)}return t.apply(this,arguments)};return e.prototype=t.prototype,e}(h):m&&"function"==typeof h?a(Function.call,h):h,m&&((b.virtual||(b.virtual={}))[l]=h,t&u.R&&x&&!x[l]&&i(x,l,h)))};u.F=1,u.G=2,u.S=4,u.P=8,u.B=16,u.W=32,u.U=64,u.R=128,t.exports=u},function(t,e,n){var r=n(12);t.exports=function(t,e,n){if(r(t),void 0===e)return t;switch(n){case 1:return function(n){return t.call(e,n)};case 2:return function(n,r){return t.call(e,n,r)};case 3:return function(n,r,s){return t.call(e,n,r,s)}}return function(){return t.apply(e,arguments)}}},function(t,e,n){var r=n(3),s=n(54),a=n(55),i=Object.defineProperty;e.f=n(10)?Object.defineProperty:function(t,e,n){if(r(t),e=a(e,!0),r(n),s)try{return i(t,e,n)}catch(t){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(t[e]=n.value),t}},function(t,e){t.exports=function(t){return"object"==typeof t?null!==t:"function"==typeof t}},function(t,e,n){t.exports=!n(31)((function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a}))},function(t,e,n){"use strict";var r=n(53)(!0);n(30)(String,"String",(function(t){this._t=String(t),this._i=0}),(function(){var t,e=this._t,n=this._i;return n>=e.length?{value:void 0,done:!0}:(t=r(e,n),this._i+=t.length,{value:t,done:!1})}))},function(t,e){t.exports=function(t){if("function"!=typeof t)throw TypeError(t+" is not a function!");return t}},function(t,e){var n={}.hasOwnProperty;t.exports=function(t,e){return n.call(t,e)}},function(t,e){var n={}.toString;t.exports=function(t){return n.call(t).slice(8,-1)}},function(t,e){var n=Math.ceil,r=Math.floor;t.exports=function(t){return isNaN(t=+t)?0:(t>0?r:n)(t)}},function(t,e){t.exports=function(t){if(null==t)throw TypeError("Can't call method on  "+t);return t}},function(t,e){t.exports=!0},function(t,e,n){var r=n(9),s=n(0).document,a=r(s)&&r(s.createElement);t.exports=function(t){return a?s.createElement(t):{}}},function(t,e){t.exports=function(t,e){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}}},function(t,e,n){var r=n(62),s=n(16);t.exports=function(t){return r(s(t))}},function(t,e,n){var r=n(15),s=Math.min;t.exports=function(t){return t>0?s(r(t),9007199254740991):0}},function(t,e,n){var r=n(32)("keys"),s=n(33);t.exports=function(t){return r[t]||(r[t]=s(t))}},function(t,e,n){var r=n(8).f,s=n(13),a=n(1)("toStringTag");t.exports=function(t,e,n){t&&!s(t=n?t:t.prototype,a)&&r(t,a,{configurable:!0,value:e})}},function(t,e,n){n(66);for(var r=n(0),s=n(4),a=n(5),i=n(1)("toStringTag"),o="CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList".split(","),u=0;u<o.length;u++){var l=o[u],c=r[l],h=c&&c.prototype;h&&!h[i]&&s(h,i,l),a[l]=a.Array}},function(t,e,n){var r=n(14),s=n(1)("toStringTag"),a="Arguments"==r(function(){return arguments}());t.exports=function(t){var e,n,i;return void 0===t?"Undefined":null===t?"Null":"string"==typeof(n=function(t,e){try{return t[e]}catch(t){}}(e=Object(t),s))?n:a?r(e):"Object"==(i=r(e))&&"function"==typeof e.callee?"Arguments":i}},function(t,e,n){var r=n(25),s=n(1)("iterator"),a=n(5);t.exports=n(2).getIteratorMethod=function(t){if(null!=t)return t[s]||t["@@iterator"]||a[r(t)]}},function(t,e,n){"use strict";var r=n(12);function s(t){var e,n;this.promise=new t((function(t,r){if(void 0!==e||void 0!==n)throw TypeError("Bad Promise constructor");e=t,n=r})),this.resolve=r(e),this.reject=r(n)}t.exports.f=function(t){return new s(t)}},function(t,e,n){t.exports=n(48)},function(t,e,n){"use strict";e.__esModule=!0;var r,s=(r=n(50))&&r.__esModule?r:{default:r};e.default=function(t){return function(){var e=t.apply(this,arguments);return new s.default((function(t,n){return function r(a,i){try{var o=e[a](i),u=o.value}catch(t){return void n(t)}if(!o.done)return s.default.resolve(u).then((function(t){r("next",t)}),(function(t){r("throw",t)}));t(u)}("next")}))}}},function(t,e,n){"use strict";var r=n(17),s=n(6),a=n(56),i=n(4),o=n(5),u=n(57),l=n(23),c=n(65),h=n(1)("iterator"),p=!([].keys&&"next"in[].keys()),d=function(){return this};t.exports=function(t,e,n,f,m,g,y){u(n,e,f);var b,x,v,w=function(t){if(!p&&t in S)return S[t];switch(t){case"keys":case"values":return function(){return new n(this,t)}}return function(){return new n(this,t)}},k=e+" Iterator",N="values"==m,I=!1,S=t.prototype,C=S[h]||S["@@iterator"]||m&&S[m],T=C||w(m),E=m?N?w("entries"):T:void 0,$="Array"==e&&S.entries||C;if($&&(v=c($.call(new t)))!==Object.prototype&&v.next&&(l(v,k,!0),r||"function"==typeof v[h]||i(v,h,d)),N&&C&&"values"!==C.name&&(I=!0,T=function(){return C.call(this)}),r&&!y||!p&&!I&&S[h]||i(S,h,T),o[e]=T,o[k]=d,m)if(b={values:N?T:w("values"),keys:g?T:w("keys"),entries:E},y)for(x in b)x in S||a(S,x,b[x]);else s(s.P+s.F*(p||I),e,b);return b}},function(t,e){t.exports=function(t){try{return!!t()}catch(t){return!0}}},function(t,e,n){var r=n(2),s=n(0),a=s["__core-js_shared__"]||(s["__core-js_shared__"]={});(t.exports=function(t,e){return a[t]||(a[t]=void 0!==e?e:{})})("versions",[]).push({version:r.version,mode:n(17)?"pure":"global",copyright:"© 2019 Denis Pushkarev (zloirock.ru)"})},function(t,e){var n=0,r=Math.random();t.exports=function(t){return"Symbol(".concat(void 0===t?"":t,")_",(++n+r).toString(36))}},function(t,e){t.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(t,e,n){var r=n(0).document;t.exports=r&&r.documentElement},function(t,e,n){var r=n(16);t.exports=function(t){return Object(r(t))}},function(t,e,n){var r=n(3);t.exports=function(t,e,n,s){try{return s?e(r(n)[0],n[1]):e(n)}catch(e){var a=t.return;throw void 0!==a&&r(a.call(t)),e}}},function(t,e,n){var r=n(5),s=n(1)("iterator"),a=Array.prototype;t.exports=function(t){return void 0!==t&&(r.Array===t||a[s]===t)}},function(t,e,n){var r=n(3),s=n(12),a=n(1)("species");t.exports=function(t,e){var n,i=r(t).constructor;return void 0===i||null==(n=r(i)[a])?e:s(n)}},function(t,e,n){var r,s,a,i=n(7),o=n(72),u=n(35),l=n(18),c=n(0),h=c.process,p=c.setImmediate,d=c.clearImmediate,f=c.MessageChannel,m=c.Dispatch,g=0,y={},b=function(){var t=+this;if(y.hasOwnProperty(t)){var e=y[t];delete y[t],e()}},x=function(t){b.call(t.data)};p&&d||(p=function(t){for(var e=[],n=1;arguments.length>n;)e.push(arguments[n++]);return y[++g]=function(){o("function"==typeof t?t:Function(t),e)},r(g),g},d=function(t){delete y[t]},"process"==n(14)(h)?r=function(t){h.nextTick(i(b,t,1))}:m&&m.now?r=function(t){m.now(i(b,t,1))}:f?(a=(s=new f).port2,s.port1.onmessage=x,r=i(a.postMessage,a,1)):c.addEventListener&&"function"==typeof postMessage&&!c.importScripts?(r=function(t){c.postMessage(t+"","*")},c.addEventListener("message",x,!1)):r="onreadystatechange"in l("script")?function(t){u.appendChild(l("script")).onreadystatechange=function(){u.removeChild(this),b.call(t)}}:function(t){setTimeout(i(b,t,1),0)}),t.exports={set:p,clear:d}},function(t,e){t.exports=function(t){try{return{e:!1,v:t()}}catch(t){return{e:!0,v:t}}}},function(t,e,n){var r=n(3),s=n(9),a=n(27);t.exports=function(t,e){if(r(t),s(e)&&e.constructor===t)return e;var n=a.f(t);return(0,n.resolve)(e),n.promise}},function(t,e,n){var r=n(1)("iterator"),s=!1;try{var a=[7][r]();a.return=function(){s=!0},Array.from(a,(function(){throw 2}))}catch(t){}t.exports=function(t,e){if(!e&&!s)return!1;var n=!1;try{var a=[7],i=a[r]();i.next=function(){return{done:n=!0}},a[r]=function(){return i},t(a)}catch(t){}return n}},function(t,e){t.exports=r},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.v1_tiny_model="https://raw.githubusercontent.com/shaqian/tfjs-yolo-demo/master/dist/model/v1tiny/model.json",e.v2_tiny_model="https://raw.githubusercontent.com/shaqian/tfjs-yolo-demo/master/dist/model/v2tiny/model.json",e.v3_tiny_model="https://raw.githubusercontent.com/shaqian/tfjs-yolo-demo/master/dist/model/v3tiny/model.json",e.v3_model="https://raw.githubusercontent.com/shaqian/tfjs-yolo-demo/master/dist/model/v3/model.json",e.v1_tiny_anchors=[1.08,1.19,3.42,4.41,6.63,11.38,9.42,5.11,16.62,10.52],e.v2_tiny_anchors=[.57273,.677385,1.87446,2.06253,3.33843,5.47434,7.88282,3.52778,9.77052,9.16828],e.v3_anchors=[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326],e.v3_tiny_anchors=[10,14,23,27,37,58,81,82,135,169,344,319],e.v3_masks={3:[[6,7,8],[3,4,5],[0,1,2]],2:[[3,4,5],[1,2,3]]}},function(t,e,n){t.exports=n(47)},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r,s,a,i,o,u,l=k(n(28)),c=k(n(29)),h=(r=(0,c.default)(l.default.mark((function t(e,n){return l.default.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(!n){t.next=6;break}return t.next=3,y.loadGraphModel(n,e);case 3:return t.abrupt("return",t.sent);case 6:return t.next=8,y.loadLayersModel(e);case 8:return t.abrupt("return",t.sent);case 9:case"end":return t.stop()}}),t,this)}))),function(t,e){return r.apply(this,arguments)}),p=(s=(0,c.default)(l.default.mark((function t(e,n,r,s,a,i,o,u,c,h){var p,d;return l.default.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return p=y.tidy((function(){var t=document.createElement("canvas");t.width=h,t.height=h,t.getContext("2d").drawImage(r,0,0,h,h);var e=y.browser.fromPixels(t,3);return e=e.expandDims(0).toFloat().div(y.scalar(255)),n.predict(e)})),t.next=3,(0,w.default)(e,p,u,o,c,"HTMLVideoElement"===r.constructor.name?[r.videoHeight,r.videoWidth]:[r.height,r.width],s,a,i);case 3:return d=t.sent,y.dispose(p),t.abrupt("return",d);case 6:case"end":return t.stop()}}),t,this)}))),function(t,e,n,r,a,i,o,u,l,c){return s.apply(this,arguments)}),d=(a=(0,c.default)(l.default.mark((function t(){var e,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:v.v1_tiny_model,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return l.default.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,h(n,r);case 2:return e=t.sent,t.abrupt("return",{predict:function(){var t=(0,c.default)(l.default.mark((function t(n){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},s=r.maxBoxes,a=void 0===s?N:s,i=r.scoreThreshold,o=void 0===i?S:i,u=r.iouThreshold,c=void 0===u?C:u,h=r.numClasses,d=void 0===h?x.default.length:h,f=r.anchors,m=void 0===f?v.v1_tiny_anchors:f,g=r.classNames,y=void 0===g?x.default:g,b=r.inputSize,w=void 0===b?I:b;return l.default.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,p("v1tiny",e,n,a,o,c,d,m,y,w);case 2:return t.abrupt("return",t.sent);case 3:case"end":return t.stop()}}),t,this)})));return function(e){return t.apply(this,arguments)}}(),dispose:function(){e.dispose(),e=null}});case 4:case"end":return t.stop()}}),t,this)}))),function(){return a.apply(this,arguments)}),f=(i=(0,c.default)(l.default.mark((function t(){var e,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:v.v2_tiny_model,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return l.default.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,h(n,r);case 2:return e=t.sent,t.abrupt("return",{predict:function(){var t=(0,c.default)(l.default.mark((function t(n){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},s=r.maxBoxes,a=void 0===s?N:s,i=r.scoreThreshold,o=void 0===i?S:i,u=r.iouThreshold,c=void 0===u?C:u,h=r.numClasses,d=void 0===h?b.default.length:h,f=r.anchors,m=void 0===f?v.v2_tiny_anchors:f,g=r.classNames,y=void 0===g?b.default:g,x=r.inputSize,w=void 0===x?I:x;return l.default.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,p("v2tiny",e,n,a,o,c,d,m,y,w);case 2:return t.abrupt("return",t.sent);case 3:case"end":return t.stop()}}),t,this)})));return function(e){return t.apply(this,arguments)}}(),dispose:function(){e.dispose(),e=null}});case 4:case"end":return t.stop()}}),t,this)}))),function(){return i.apply(this,arguments)}),m=(o=(0,c.default)(l.default.mark((function t(){var e,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:v.v3_tiny_model,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return l.default.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,h(n,r);case 2:return e=t.sent,t.abrupt("return",{predict:function(){var t=(0,c.default)(l.default.mark((function t(n){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},s=r.maxBoxes,a=void 0===s?N:s,i=r.scoreThreshold,o=void 0===i?S:i,u=r.iouThreshold,c=void 0===u?C:u,h=r.numClasses,d=void 0===h?b.default.length:h,f=r.anchors,m=void 0===f?v.v3_tiny_anchors:f,g=r.classNames,y=void 0===g?b.default:g,x=r.inputSize,w=void 0===x?I:x;return l.default.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,p("v3tiny",e,n,a,o,c,d,m,y,w);case 2:return t.abrupt("return",t.sent);case 3:case"end":return t.stop()}}),t,this)})));return function(e){return t.apply(this,arguments)}}(),dispose:function(){e.dispose(),e=null}});case 4:case"end":return t.stop()}}),t,this)}))),function(){return o.apply(this,arguments)}),g=(u=(0,c.default)(l.default.mark((function t(){var e,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:v.v3_model,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return l.default.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,h(n,r);case 2:return e=t.sent,t.abrupt("return",{predict:function(){var t=(0,c.default)(l.default.mark((function t(n){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},s=r.maxBoxes,a=void 0===s?N:s,i=r.scoreThreshold,o=void 0===i?S:i,u=r.iouThreshold,c=void 0===u?C:u,h=r.numClasses,d=void 0===h?b.default.length:h,f=r.anchors,m=void 0===f?v.v3_anchors:f,g=r.classNames,y=void 0===g?b.default:g,x=r.inputSize,w=void 0===x?I:x;return l.default.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,p("v3",e,n,a,o,c,d,m,y,w);case 2:return t.abrupt("return",t.sent);case 3:case"end":return t.stop()}}),t,this)})));return function(e){return t.apply(this,arguments)}}(),dispose:function(){e.dispose(),e=null}});case 4:case"end":return t.stop()}}),t,this)}))),function(){return u.apply(this,arguments)}),y=function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e.default=t,e}(n(44)),b=k(n(79)),x=k(n(80)),v=n(45),w=k(n(81));function k(t){return t&&t.__esModule?t:{default:t}}var N=20,I=416,S=.5,C=.3,T={v1tiny:d,v2tiny:f,v3tiny:m,v3:g};e.default=T},function(t,e,n){var r=function(){return this}()||Function("return this")(),s=r.regeneratorRuntime&&Object.getOwnPropertyNames(r).indexOf("regeneratorRuntime")>=0,a=s&&r.regeneratorRuntime;if(r.regeneratorRuntime=void 0,t.exports=n(49),s)r.regeneratorRuntime=a;else try{delete r.regeneratorRuntime}catch(t){r.regeneratorRuntime=void 0}},function(t,e){!function(e){"use strict";var n,r=Object.prototype,s=r.hasOwnProperty,a="function"==typeof Symbol?Symbol:{},i=a.iterator||"@@iterator",o=a.asyncIterator||"@@asyncIterator",u=a.toStringTag||"@@toStringTag",l="object"==typeof t,c=e.regeneratorRuntime;if(c)l&&(t.exports=c);else{(c=e.regeneratorRuntime=l?t.exports:{}).wrap=v;var h="suspendedStart",p="suspendedYield",d="executing",f="completed",m={},g={};g[i]=function(){return this};var y=Object.getPrototypeOf,b=y&&y(y(R([])));b&&b!==r&&s.call(b,i)&&(g=b);var x=I.prototype=k.prototype=Object.create(g);N.prototype=x.constructor=I,I.constructor=N,I[u]=N.displayName="GeneratorFunction",c.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===N||"GeneratorFunction"===(e.displayName||e.name))},c.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,I):(t.__proto__=I,u in t||(t[u]="GeneratorFunction")),t.prototype=Object.create(x),t},c.awrap=function(t){return{__await:t}},S(C.prototype),C.prototype[o]=function(){return this},c.AsyncIterator=C,c.async=function(t,e,n,r){var s=new C(v(t,e,n,r));return c.isGeneratorFunction(e)?s:s.next().then((function(t){return t.done?t.value:s.next()}))},S(x),x[u]="Generator",x[i]=function(){return this},x.toString=function(){return"[object Generator]"},c.keys=function(t){var e=[];for(var n in t)e.push(n);return e.reverse(),function n(){for(;e.length;){var r=e.pop();if(r in t)return n.value=r,n.done=!1,n}return n.done=!0,n}},c.values=R,A.prototype={constructor:A,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=n,this.done=!1,this.delegate=null,this.method="next",this.arg=n,this.tryEntries.forEach($),!t)for(var e in this)"t"===e.charAt(0)&&s.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=n)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var e=this;function r(r,s){return o.type="throw",o.arg=t,e.next=r,s&&(e.method="next",e.arg=n),!!s}for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a],o=i.completion;if("root"===i.tryLoc)return r("end");if(i.tryLoc<=this.prev){var u=s.call(i,"catchLoc"),l=s.call(i,"finallyLoc");if(u&&l){if(this.prev<i.catchLoc)return r(i.catchLoc,!0);if(this.prev<i.finallyLoc)return r(i.finallyLoc)}else if(u){if(this.prev<i.catchLoc)return r(i.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return r(i.finallyLoc)}}}},abrupt:function(t,e){for(var n=this.tryEntries.length-1;n>=0;--n){var r=this.tryEntries[n];if(r.tryLoc<=this.prev&&s.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var a=r;break}}a&&("break"===t||"continue"===t)&&a.tryLoc<=e&&e<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=t,i.arg=e,a?(this.method="next",this.next=a.finallyLoc,m):this.complete(i)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),m},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.finallyLoc===t)return this.complete(n.completion,n.afterLoc),$(n),m}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.tryLoc===t){var r=n.completion;if("throw"===r.type){var s=r.arg;$(n)}return s}}throw new Error("illegal catch attempt")},delegateYield:function(t,e,r){return this.delegate={iterator:R(t),resultName:e,nextLoc:r},"next"===this.method&&(this.arg=n),m}}}function v(t,e,n,r){var s=e&&e.prototype instanceof k?e:k,a=Object.create(s.prototype),i=new A(r||[]);return a._invoke=function(t,e,n){var r=h;return function(s,a){if(r===d)throw new Error("Generator is already running");if(r===f){if("throw"===s)throw a;return _()}for(n.method=s,n.arg=a;;){var i=n.delegate;if(i){var o=T(i,n);if(o){if(o===m)continue;return o}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(r===h)throw r=f,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r=d;var u=w(t,e,n);if("normal"===u.type){if(r=n.done?f:p,u.arg===m)continue;return{value:u.arg,done:n.done}}"throw"===u.type&&(r=f,n.method="throw",n.arg=u.arg)}}}(t,n,i),a}function w(t,e,n){try{return{type:"normal",arg:t.call(e,n)}}catch(t){return{type:"throw",arg:t}}}function k(){}function N(){}function I(){}function S(t){["next","throw","return"].forEach((function(e){t[e]=function(t){return this._invoke(e,t)}}))}function C(t){var e;this._invoke=function(n,r){function a(){return new Promise((function(e,a){!function e(n,r,a,i){var o=w(t[n],t,r);if("throw"!==o.type){var u=o.arg,l=u.value;return l&&"object"==typeof l&&s.call(l,"__await")?Promise.resolve(l.__await).then((function(t){e("next",t,a,i)}),(function(t){e("throw",t,a,i)})):Promise.resolve(l).then((function(t){u.value=t,a(u)}),i)}i(o.arg)}(n,r,e,a)}))}return e=e?e.then(a,a):a()}}function T(t,e){var r=t.iterator[e.method];if(r===n){if(e.delegate=null,"throw"===e.method){if(t.iterator.return&&(e.method="return",e.arg=n,T(t,e),"throw"===e.method))return m;e.method="throw",e.arg=new TypeError("The iterator does not provide a 'throw' method")}return m}var s=w(r,t.iterator,e.arg);if("throw"===s.type)return e.method="throw",e.arg=s.arg,e.delegate=null,m;var a=s.arg;return a?a.done?(e[t.resultName]=a.value,e.next=t.nextLoc,"return"!==e.method&&(e.method="next",e.arg=n),e.delegate=null,m):a:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,m)}function E(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function $(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function A(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(E,this),this.reset(!0)}function R(t){if(t){var e=t[i];if(e)return e.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var r=-1,a=function e(){for(;++r<t.length;)if(s.call(t,r))return e.value=t[r],e.done=!1,e;return e.value=n,e.done=!0,e};return a.next=a}}return{next:_}}function _(){return{value:n,done:!0}}}(function(){return this}()||Function("return this")())},function(t,e,n){t.exports={default:n(51),__esModule:!0}},function(t,e,n){n(52),n(11),n(24),n(69),n(77),n(78),t.exports=n(2).Promise},function(t,e){},function(t,e,n){var r=n(15),s=n(16);t.exports=function(t){return function(e,n){var a,i,o=String(s(e)),u=r(n),l=o.length;return u<0||u>=l?t?"":void 0:(a=o.charCodeAt(u))<55296||a>56319||u+1===l||(i=o.charCodeAt(u+1))<56320||i>57343?t?o.charAt(u):a:t?o.slice(u,u+2):i-56320+(a-55296<<10)+65536}}},function(t,e,n){t.exports=!n(10)&&!n(31)((function(){return 7!=Object.defineProperty(n(18)("div"),"a",{get:function(){return 7}}).a}))},function(t,e,n){var r=n(9);t.exports=function(t,e){if(!r(t))return t;var n,s;if(e&&"function"==typeof(n=t.toString)&&!r(s=n.call(t)))return s;if("function"==typeof(n=t.valueOf)&&!r(s=n.call(t)))return s;if(!e&&"function"==typeof(n=t.toString)&&!r(s=n.call(t)))return s;throw TypeError("Can't convert object to primitive value")}},function(t,e,n){t.exports=n(4)},function(t,e,n){"use strict";var r=n(58),s=n(19),a=n(23),i={};n(4)(i,n(1)("iterator"),(function(){return this})),t.exports=function(t,e,n){t.prototype=r(i,{next:s(1,n)}),a(t,e+" Iterator")}},function(t,e,n){var r=n(3),s=n(59),a=n(34),i=n(22)("IE_PROTO"),o=function(){},u=function(){var t,e=n(18)("iframe"),r=a.length;for(e.style.display="none",n(35).appendChild(e),e.src="javascript:",(t=e.contentWindow.document).open(),t.write("<script>document.F=Object<\/script>"),t.close(),u=t.F;r--;)delete u.prototype[a[r]];return u()};t.exports=Object.create||function(t,e){var n;return null!==t?(o.prototype=r(t),n=new o,o.prototype=null,n[i]=t):n=u(),void 0===e?n:s(n,e)}},function(t,e,n){var r=n(8),s=n(3),a=n(60);t.exports=n(10)?Object.defineProperties:function(t,e){s(t);for(var n,i=a(e),o=i.length,u=0;o>u;)r.f(t,n=i[u++],e[n]);return t}},function(t,e,n){var r=n(61),s=n(34);t.exports=Object.keys||function(t){return r(t,s)}},function(t,e,n){var r=n(13),s=n(20),a=n(63)(!1),i=n(22)("IE_PROTO");t.exports=function(t,e){var n,o=s(t),u=0,l=[];for(n in o)n!=i&&r(o,n)&&l.push(n);for(;e.length>u;)r(o,n=e[u++])&&(~a(l,n)||l.push(n));return l}},function(t,e,n){var r=n(14);t.exports=Object("z").propertyIsEnumerable(0)?Object:function(t){return"String"==r(t)?t.split(""):Object(t)}},function(t,e,n){var r=n(20),s=n(21),a=n(64);t.exports=function(t){return function(e,n,i){var o,u=r(e),l=s(u.length),c=a(i,l);if(t&&n!=n){for(;l>c;)if((o=u[c++])!=o)return!0}else for(;l>c;c++)if((t||c in u)&&u[c]===n)return t||c||0;return!t&&-1}}},function(t,e,n){var r=n(15),s=Math.max,a=Math.min;t.exports=function(t,e){return(t=r(t))<0?s(t+e,0):a(t,e)}},function(t,e,n){var r=n(13),s=n(36),a=n(22)("IE_PROTO"),i=Object.prototype;t.exports=Object.getPrototypeOf||function(t){return t=s(t),r(t,a)?t[a]:"function"==typeof t.constructor&&t instanceof t.constructor?t.constructor.prototype:t instanceof Object?i:null}},function(t,e,n){"use strict";var r=n(67),s=n(68),a=n(5),i=n(20);t.exports=n(30)(Array,"Array",(function(t,e){this._t=i(t),this._i=0,this._k=e}),(function(){var t=this._t,e=this._k,n=this._i++;return!t||n>=t.length?(this._t=void 0,s(1)):s(0,"keys"==e?n:"values"==e?t[n]:[n,t[n]])}),"values"),a.Arguments=a.Array,r("keys"),r("values"),r("entries")},function(t,e){t.exports=function(){}},function(t,e){t.exports=function(t,e){return{value:e,done:!!t}}},function(t,e,n){"use strict";var r,s,a,i,o=n(17),u=n(0),l=n(7),c=n(25),h=n(6),p=n(9),d=n(12),f=n(70),m=n(71),g=n(39),y=n(40).set,b=n(73)(),x=n(27),v=n(41),w=n(74),k=n(42),N=u.TypeError,I=u.process,S=I&&I.versions,C=S&&S.v8||"",T=u.Promise,E="process"==c(I),$=function(){},A=s=x.f,R=!!function(){try{var t=T.resolve(1),e=(t.constructor={})[n(1)("species")]=function(t){t($,$)};return(E||"function"==typeof PromiseRejectionEvent)&&t.then($)instanceof e&&0!==C.indexOf("6.6")&&-1===w.indexOf("Chrome/66")}catch(t){}}(),_=function(t){var e;return!(!p(t)||"function"!=typeof(e=t.then))&&e},D=function(t,e){if(!t._n){t._n=!0;var n=t._c;b((function(){for(var r=t._v,s=1==t._s,a=0,i=function(e){var n,a,i,o=s?e.ok:e.fail,u=e.resolve,l=e.reject,c=e.domain;try{o?(s||(2==t._h&&M(t),t._h=1),!0===o?n=r:(c&&c.enter(),n=o(r),c&&(c.exit(),i=!0)),n===e.promise?l(N("Promise-chain cycle")):(a=_(n))?a.call(n,u,l):u(n)):l(r)}catch(t){c&&!i&&c.exit(),l(t)}};n.length>a;)i(n[a++]);t._c=[],t._n=!1,e&&!t._h&&F(t)}))}},F=function(t){y.call(u,(function(){var e,n,r,s=t._v,a=O(t);if(a&&(e=v((function(){E?I.emit("unhandledRejection",s,t):(n=u.onunhandledrejection)?n({promise:t,reason:s}):(r=u.console)&&r.error&&r.error("Unhandled promise rejection",s)})),t._h=E||O(t)?2:1),t._a=void 0,a&&e.e)throw e.v}))},O=function(t){return 1!==t._h&&0===(t._a||t._c).length},M=function(t){y.call(u,(function(){var e;E?I.emit("rejectionHandled",t):(e=u.onrejectionhandled)&&e({promise:t,reason:t._v})}))},L=function(t){var e=this;e._d||(e._d=!0,(e=e._w||e)._v=t,e._s=2,e._a||(e._a=e._c.slice()),D(e,!0))},z=function(t){var e,n=this;if(!n._d){n._d=!0,n=n._w||n;try{if(n===t)throw N("Promise can't be resolved itself");(e=_(t))?b((function(){var r={_w:n,_d:!1};try{e.call(t,l(z,r,1),l(L,r,1))}catch(t){L.call(r,t)}})):(n._v=t,n._s=1,D(n,!1))}catch(t){L.call({_w:n,_d:!1},t)}}};R||(T=function(t){f(this,T,"Promise","_h"),d(t),r.call(this);try{t(l(z,this,1),l(L,this,1))}catch(t){L.call(this,t)}},(r=function(t){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=n(75)(T.prototype,{then:function(t,e){var n=A(g(this,T));return n.ok="function"!=typeof t||t,n.fail="function"==typeof e&&e,n.domain=E?I.domain:void 0,this._c.push(n),this._a&&this._a.push(n),this._s&&D(this,!1),n.promise},catch:function(t){return this.then(void 0,t)}}),a=function(){var t=new r;this.promise=t,this.resolve=l(z,t,1),this.reject=l(L,t,1)},x.f=A=function(t){return t===T||t===i?new a(t):s(t)}),h(h.G+h.W+h.F*!R,{Promise:T}),n(23)(T,"Promise"),n(76)("Promise"),i=n(2).Promise,h(h.S+h.F*!R,"Promise",{reject:function(t){var e=A(this);return(0,e.reject)(t),e.promise}}),h(h.S+h.F*(o||!R),"Promise",{resolve:function(t){return k(o&&this===i?T:this,t)}}),h(h.S+h.F*!(R&&n(43)((function(t){T.all(t).catch($)}))),"Promise",{all:function(t){var e=this,n=A(e),r=n.resolve,s=n.reject,a=v((function(){var n=[],a=0,i=1;m(t,!1,(function(t){var o=a++,u=!1;n.push(void 0),i++,e.resolve(t).then((function(t){u||(u=!0,n[o]=t,--i||r(n))}),s)})),--i||r(n)}));return a.e&&s(a.v),n.promise},race:function(t){var e=this,n=A(e),r=n.reject,s=v((function(){m(t,!1,(function(t){e.resolve(t).then(n.resolve,r)}))}));return s.e&&r(s.v),n.promise}})},function(t,e){t.exports=function(t,e,n,r){if(!(t instanceof e)||void 0!==r&&r in t)throw TypeError(n+": incorrect invocation!");return t}},function(t,e,n){var r=n(7),s=n(37),a=n(38),i=n(3),o=n(21),u=n(26),l={},c={};(e=t.exports=function(t,e,n,h,p){var d,f,m,g,y=p?function(){return t}:u(t),b=r(n,h,e?2:1),x=0;if("function"!=typeof y)throw TypeError(t+" is not iterable!");if(a(y)){for(d=o(t.length);d>x;x++)if((g=e?b(i(f=t[x])[0],f[1]):b(t[x]))===l||g===c)return g}else for(m=y.call(t);!(f=m.next()).done;)if((g=s(m,b,f.value,e))===l||g===c)return g}).BREAK=l,e.RETURN=c},function(t,e){t.exports=function(t,e,n){var r=void 0===n;switch(e.length){case 0:return r?t():t.call(n);case 1:return r?t(e[0]):t.call(n,e[0]);case 2:return r?t(e[0],e[1]):t.call(n,e[0],e[1]);case 3:return r?t(e[0],e[1],e[2]):t.call(n,e[0],e[1],e[2]);case 4:return r?t(e[0],e[1],e[2],e[3]):t.call(n,e[0],e[1],e[2],e[3])}return t.apply(n,e)}},function(t,e,n){var r=n(0),s=n(40).set,a=r.MutationObserver||r.WebKitMutationObserver,i=r.process,o=r.Promise,u="process"==n(14)(i);t.exports=function(){var t,e,n,l=function(){var r,s;for(u&&(r=i.domain)&&r.exit();t;){s=t.fn,t=t.next;try{s()}catch(r){throw t?n():e=void 0,r}}e=void 0,r&&r.enter()};if(u)n=function(){i.nextTick(l)};else if(!a||r.navigator&&r.navigator.standalone)if(o&&o.resolve){var c=o.resolve(void 0);n=function(){c.then(l)}}else n=function(){s.call(r,l)};else{var h=!0,p=document.createTextNode("");new a(l).observe(p,{characterData:!0}),n=function(){p.data=h=!h}}return function(r){var s={fn:r,next:void 0};e&&(e.next=s),t||(t=s,n()),e=s}}},function(t,e,n){var r=n(0).navigator;t.exports=r&&r.userAgent||""},function(t,e,n){var r=n(4);t.exports=function(t,e,n){for(var s in e)n&&t[s]?t[s]=e[s]:r(t,s,e[s]);return t}},function(t,e,n){"use strict";var r=n(0),s=n(2),a=n(8),i=n(10),o=n(1)("species");t.exports=function(t){var e="function"==typeof s[t]?s[t]:r[t];i&&e&&!e[o]&&a.f(e,o,{configurable:!0,get:function(){return this}})}},function(t,e,n){"use strict";var r=n(6),s=n(2),a=n(0),i=n(39),o=n(42);r(r.P+r.R,"Promise",{finally:function(t){var e=i(this,s.Promise||a.Promise),n="function"==typeof t;return this.then(n?function(n){return o(e,t()).then((function(){return n}))}:t,n?function(n){return o(e,t()).then((function(){throw n}))}:t)}})},function(t,e,n){"use strict";var r=n(6),s=n(27),a=n(41);r(r.S,"Promise",{try:function(t){var e=s.f(this),n=a(t);return(n.e?e.reject:e.resolve)(n.v),e.promise}})},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=["person","bicycle","car","motorbike","aeroplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","sofa","pottedplant","bed","diningtable","toilet","tvmonitor","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"]},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=["aeroplane","bicycle","bird","boat","bottle","bus","car","cat","chair","cow","diningtable","dog","horse","motorbike","person","pottedplant","sheep","sofa","train","tvmonitor"]},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r,s=h(n(82)),a=h(n(28)),i=h(n(87)),o=h(n(29)),u=(r=(0,o.default)(a.default.mark((function t(e,n,r,s,o,u,c,h,d){var f,m,g,y,b,x,v,w,k,N,I;return a.default.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return f=e.indexOf("v3")>-1,m=p(f,n,r,s,u),g=(0,i.default)(m,2),y=g[0],b=g[1],x=[],v=[],w=[],k=l.argMax(b,-1),N=l.max(b,-1),t.next=9,l.image.nonMaxSuppressionAsync(y,N,c,d,h);case 9:return(I=t.sent).size&&l.tidy((function(){var t=l.gather(y,I),e=l.gather(N,I);t.split(I.size).map((function(t){x.push(t.dataSync())})),e.dataSync().map((function(t){v.push(t)})),w=k.gather(I).dataSync()})),N.dispose(),k.dispose(),I.dispose(),y.dispose(),b.dispose(),t.abrupt("return",x.map((function(t,e){var n=Math.max(0,t[0]),r=Math.max(0,t[1]),s=Math.min(u[0],t[2]),a=Math.min(u[1],t[3]);return{top:n,left:r,bottom:s,right:a,height:s-n,width:a-r,score:v[e],class:o[w[e]]}})));case 17:case"end":return t.stop()}}),t,this)}))),function(t,e,n,s,a,i,o,u,l){return r.apply(this,arguments)}),l=function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e.default=t,e}(n(44)),c=n(45);function h(t){return t&&t.__esModule?t:{default:t}}function p(t,e,n,r,s){return l.tidy((function(){var a=1,o=void 0,u=void 0;t?(a=e.length,u=c.v3_masks[a],o=e[0].shape.slice(1,3).map((function(t){return 32*t}))):o=e.shape.slice(1,3);for(var h=l.tensor1d(n).reshape([-1,2]),p=[],f=[],m=0;m<a;m++){var g=d(t,t?e[m]:e,t?h.gather(l.tensor1d(u[m],"int32")):h,r,o,s),y=(0,i.default)(g,2),b=y[0],x=y[1];p.push(b),f.push(x)}return[p=l.concat(p),f=l.concat(f)]}))}function d(t,e,n,r,a,o){var u=function(t,e,n,r,s){var a=n.shape[0],o=l.reshape(n,[1,1,a,2]),u=e.shape.slice(1,3),c=l.tile(l.reshape(l.range(0,u[0]),[-1,1,1,1]),[1,u[1],1,1]),h=l.tile(l.reshape(l.range(0,u[1]),[1,-1,1,1]),[u[0],1,1,1]),p=l.concat([h,c],3).cast(e.dtype);e=e.reshape([u[0],u[1],a,r+5]);var d=l.split(e,[2,2,1,r],3),f=(0,i.default)(d,4),m=f[0],g=f[1],y=f[2],b=f[3];return[l.div(l.add(l.sigmoid(m),p),u.reverse()),l.div(l.mul(l.exp(g),o),s.reverse()),l.sigmoid(y),t?l.sigmoid(b):l.softmax(b)]}(t,e,n,r,a),c=(0,i.default)(u,4),h=c[0],p=c[1],d=c[2],f=c[3],m=function(t,e,n){var r=l.concat(l.split(t,2,3).reverse(),3),a=l.concat(l.split(e,2,3).reverse(),3),i=l.mul(l.sub(r,l.div(a,2)),n),o=l.mul(l.add(r,l.div(a,2)),n);return l.concat([].concat((0,s.default)(l.split(i,2,3)),(0,s.default)(l.split(o,2,3))),3)}(h,p,o);m=m.reshape([-1,4]);var g=l.mul(d,f);return[m,g=l.reshape(g,[-1,r])]}e.default=u},function(t,e,n){"use strict";e.__esModule=!0;var r,s=(r=n(83))&&r.__esModule?r:{default:r};e.default=function(t){if(Array.isArray(t)){for(var e=0,n=Array(t.length);e<t.length;e++)n[e]=t[e];return n}return(0,s.default)(t)}},function(t,e,n){t.exports={default:n(84),__esModule:!0}},function(t,e,n){n(11),n(85),t.exports=n(2).Array.from},function(t,e,n){"use strict";var r=n(7),s=n(6),a=n(36),i=n(37),o=n(38),u=n(21),l=n(86),c=n(26);s(s.S+s.F*!n(43)((function(t){Array.from(t)})),"Array",{from:function(t){var e,n,s,h,p=a(t),d="function"==typeof this?this:Array,f=arguments.length,m=f>1?arguments[1]:void 0,g=void 0!==m,y=0,b=c(p);if(g&&(m=r(m,f>2?arguments[2]:void 0,2)),null==b||d==Array&&o(b))for(n=new d(e=u(p.length));e>y;y++)l(n,y,g?m(p[y],y):p[y]);else for(h=b.call(p),n=new d;!(s=h.next()).done;y++)l(n,y,g?i(h,m,[s.value,y],!0):s.value);return n.length=y,n}})},function(t,e,n){"use strict";var r=n(8),s=n(19);t.exports=function(t,e,n){e in t?r.f(t,e,s(0,n)):t[e]=n}},function(t,e,n){"use strict";e.__esModule=!0;var r=a(n(88)),s=a(n(91));function a(t){return t&&t.__esModule?t:{default:t}}e.default=function(t,e){if(Array.isArray(t))return t;if((0,r.default)(Object(t)))return function(t,e){var n=[],r=!0,a=!1,i=void 0;try{for(var o,u=(0,s.default)(t);!(r=(o=u.next()).done)&&(n.push(o.value),!e||n.length!==e);r=!0);}catch(t){a=!0,i=t}finally{try{!r&&u.return&&u.return()}finally{if(a)throw i}}return n}(t,e);throw new TypeError("Invalid attempt to destructure non-iterable instance")}},function(t,e,n){t.exports={default:n(89),__esModule:!0}},function(t,e,n){n(24),n(11),t.exports=n(90)},function(t,e,n){var r=n(25),s=n(1)("iterator"),a=n(5);t.exports=n(2).isIterable=function(t){var e=Object(t);return void 0!==e[s]||"@@iterator"in e||a.hasOwnProperty(r(e))}},function(t,e,n){t.exports={default:n(92),__esModule:!0}},function(t,e,n){n(24),n(11),t.exports=n(93)},function(t,e,n){var r=n(3),s=n(26);t.exports=n(2).getIterator=function(t){var e=s(t);if("function"!=typeof e)throw TypeError(t+" is not iterable!");return r(e.call(t))}}]))},3906:()=>{},2993:()=>{},8352:()=>{},4589:()=>{},1758:()=>{}},e={};function n(r){if(e[r])return e[r].exports;var s=e[r]={id:r,loaded:!1,exports:{}};return t[r].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.d=(t,e)=>{for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.nmd=t=>(t.paths=[],t.children||(t.children=[]),t),(()=>{"use strict";var t=c(n(4942)),e=c(n(6803));let r=(s=(0,e.default)(t.default.mark((function e(){var n;return t.default.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,l.default.v3("waterDrop_2class/my_tfjs_model/model.json");case 2:return n=t.sent,t.abrupt("return",n);case 4:case"end":return t.stop()}}),e,this)}))),function(){return s.apply(this,arguments)});var s;let a=(i=(0,e.default)(t.default.mark((function e(n){var r,s;return t.default.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return r=document.getElementById("HiddenCanvas"),t.next=3,n.predict(r,{maxBoxes:2,scoreThreshold:.2,iouThreshold:.5,numClasses:2,anchors:[10,14,23,27,37,58,81,82,135,169,344,319],classNames:["container","waterdrop"],inputSize:416});case 3:return s=t.sent,t.abrupt("return",s);case 5:case"end":return t.stop()}}),e,this)}))),function(t){return i.apply(this,arguments)});var i;let o=(u=(0,e.default)(t.default.mark((function e(){var n,r;return t.default.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:n=document.getElementById("Video"),(r=document.getElementById("HiddenCanvas")).width=n.videoWidth,r.height=n.videoHeight,r.getContext("2d").drawImage(n,0,0);case 6:case"end":return t.stop()}}),e,this)}))),function(){return u.apply(this,arguments)});var u,l=c(n(5767));function c(t){return t&&t.__esModule?t:{default:t}}var h=0,p=(new Date).getTime();r().then((t=>{console.log("init_model::success"),console.log(t),setInterval((function(){o().then((e=>{a(t).then((t=>{console.log("detect::success"),console.log(t),h++;var e=new Date;console.log("fps:",1e3*h/(e.getTime()-p))}),(t=>{console.log("detect::failed"),console.log(t)}))}))}),10)}),(t=>{console.log("init_model::failed"),console.log(t)}))})()})();